  In this theory, we provide formalisation of affine functions (sometimes also called linear 
  polynomial functions).
\<close>
section\<open>Definition of Affine Functions, Alternative Definitions, and Special Cases\<close>
  assumes \<open>\<exists> b. linear (\<lambda> x. f x - b)\<close>
  \<open>affine_fun f = (\<exists> c g. (f = (\<lambda> x. g x + c)) \<and> linear g)\<close>
  \<open>affine_fun (f::(real \<Rightarrow> real)) = (\<exists> a b . f = (\<lambda> x. a * x + b))\<close>
lemma linear_is_affine_fun: \<open>linear f \<Longrightarrow> affine_fun f\<close>
lemma affine_zero_is_linear: assumes \<open>affine_fun f\<close> and \<open>f 0 = 0\<close> shows \<open>linear f\<close>
  assumes \<open>affine_fun f\<close> and \<open>affine_fun g\<close>
  shows \<open>affine_fun (\<lambda> x. f x + g x)\<close>
  assumes \<open>affine_fun f \<close> shows \<open>affine_fun (\<lambda> x. a *\<^sub>R (f x))\<close>
section\<open>Common Linear Polynomial Functions\<close>
lemma affine_fun_const[simp]: \<open>affine_fun (\<lambda> x. c)\<close>
lemma affine_fun_id[simp]: \<open>affine_fun (\<lambda> x. x)\<close>
lemma affine_fun_mult[simp]: \<open>affine_fun (\<lambda> x. (c::'a::real_algebra) * x)\<close>
lemma affine_fun_scaled[simp]: \<open>affine_fun (\<lambda> x. x /c )\<close>
lemma affine_fun_add[simp]: \<open>affine_fun (\<lambda> x. x + c)\<close>
lemma affine_fun_diff[simp]: \<open>affine_fun (\<lambda> x. x - c)\<close>
lemma affine_fun_triv[simp]: \<open>affine_fun (\<lambda> x. a *\<^sub>R x + c)\<close>
lemma affine_fun_add_const[simp]: assumes \<open>affine_fun f\<close> shows \<open>affine_fun (\<lambda> x. (f x) + c)\<close>
lemma affine_fun_diff_const[simp]: assumes \<open>affine_fun f\<close> shows \<open>affine_fun (\<lambda> x. (f x) - c)\<close>
lemma affine_fun_comp[simp]: assumes \<open>affine_fun (f)\<close>
and \<open>affine_fun (g)\<close> shows \<open>affine_fun (f \<circ> g)\<close>
lemma affine_fun_linear[simp]: assumes \<open>affine_fun f\<close> shows \<open>affine_fun (\<lambda> x. a *\<^sub>R (f x) + c)\<close>
section\<open>Linear Polynomial Functions and Orderings\<close>
assumes \<open>affine_fun (f::real \<Rightarrow> real)\<close> and \<open>affine_fun g\<close> 
and \<open>x\<in>{0..u}\<close>  and \<open>(f 0 \<le> g 0 )\<close>  and \<open>(f u \<le> g u)\<close> 
shows \<open>f x \<le> g x\<close>
assumes \<open>affine_fun (f::real \<Rightarrow> real)\<close> and \<open>affine_fun g\<close> 
and \<open>x\<in>{l..0}\<close>  and \<open>(f l \<le> g l )\<close>  and \<open>(f 0 \<le> g 0)\<close> 
shows \<open>f x \<le> g x\<close>
assumes \<open>affine_fun (f::real \<Rightarrow> real)\<close> and \<open>affine_fun g\<close> 
and \<open>x\<in>{l..u}\<close>  and \<open>(f l \<le> g l )\<close>  and \<open>(f u \<le> g u)\<close> 
shows \<open>f x \<le> g (x::real)\<close>
assumes \<open>affine_fun (f::real \<Rightarrow> real)\<close> and \<open>affine_fun g\<close> 
and \<open>x\<in>{0..u}\<close>  and \<open>(f 0 < g 0 )\<close>  and \<open>(f u < g u)\<close> 
shows \<open>f x < g (x::real)\<close>
assumes \<open>affine_fun (f::real \<Rightarrow> real)\<close> and \<open>affine_fun g\<close> 
and \<open>x\<in>{l..0}\<close>  and \<open>(f l < g l )\<close>  and \<open>(f 0 < g 0)\<close> 
shows \<open>f x < g (x::real)\<close>
assumes \<open>affine_fun (f::real \<Rightarrow> real)\<close> and \<open>affine_fun g\<close> 
and \<open>x\<in>{l..u}\<close>  and \<open>(f l < g l )\<close>  and \<open>(f u < g u)\<close> 
shows \<open>f x < g (x::real)\<close>
