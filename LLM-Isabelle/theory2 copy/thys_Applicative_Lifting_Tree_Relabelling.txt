theory Tree_Relabelling imports
  Applicative_State
  Applicative_Option
  Applicative_PMF
  "HOL-Library.Stream"
begin

unbundle applicative_syntax
adhoc_overloading Applicative.pure pure_option
adhoc_overloading Applicative.pure State_Monad.return
adhoc_overloading Applicative.ap State_Monad.ap

  as an example for reasoning about effects. Given a binary tree with labels at the leaves, the
  relabelling assigns a unique number to every leaf.  Their correctness property states that the
  this breaks the abstraction of the state monad, because the relabeling function must be run.
  Although Hutton and Fulger are careful to reason in point-free style, they nevertheless unfold
  suggest to state the correctness in an effectful way using an exception-state monad.  Thereby, they
  lose the applicative structure and have to resort to a full monad.

  Here, we model the tree relabelling function three times. First, we state correctness in pure
  terms following Hutton and Fulger.  Second, we take Gibbons' and Bird's approach of considering
  traversals. Third, we state correctness effectfully, but only using the applicative functors.
\<close>
subsubsection \<open>Pure correctness statement\<close>
  \<comment> \<open>The proof lifts the defining equations of @{const append} to the state monad.\<close>
text \<open>We directly show correctness without going via streams like Hutton and Fulger \<^cite>\<open>"HuttonFulger2008TFP"\<close>. \<close>
subsubsection \<open>Correctness via monadic traversals\<close>
text \<open>Dual version of an applicative functor with effects composed in the opposite order\<close>
text \<open>
  so we need the state monad rather than the applicative functor only.
\<close>
text \<open>As we cannot abstract over the applicative functor in definitions, we define
  traversal on the transformed applicative function once again.\<close>
    \<comment> \<open>This step expands to 13 steps in \cite{backwards}\<close>
text \<open>@{term "B \<circ> B"} is an idiom morphism\<close>
  also have "?exp = f \<diamondop> x" \<comment> \<open>This step takes 15 steps in \cite{backwards}.\<close>
\<comment> \<open>Gibbons and Bird impose this as an additional requirement on traversals, but they write
  that they have not found a way to derive this fact from other axioms. So we prove it directly.\<close>
text \<open>Apply traversals to labelling\<close>
subsubsection \<open>Applicative correctness statement\<close>
text \<open>Repeating an effect\<close>
subsubsection \<open>Probabilistic tree relabelling\<close>
