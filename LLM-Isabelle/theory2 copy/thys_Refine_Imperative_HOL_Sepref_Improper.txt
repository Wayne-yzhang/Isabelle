theory Sepref_Improper
imports
  Sepref_Tool
  Sepref_HOL_Bindings
  Sepref_Foreach
  Sepref_Intf_Util
begin

  
  definition pho_apply :: "('a \<Rightarrow> 'b) \<Rightarrow> 'a \<Rightarrow> 'b" where [code_unfold,simp]: "pho_apply f x = f x"
  sepref_register pho_apply
  
  lemmas fold_pho_apply = pho_apply_def[symmetric]

  lemma pure_fun_refine[sepref_fr_rules]: "hn_refine 
    (hn_val (A\<rightarrow>B) f fi * hn_val A x xi) 
    (return (pho_apply$fi$xi)) 
    (hn_val (A\<rightarrow>B) f fi * hn_val A x xi)
    (pure B)
    (RETURN$(pho_apply$f$x))"
    by (sep_auto intro!: hn_refineI simp: pure_def hn_ctxt_def dest: fun_relD)







end
