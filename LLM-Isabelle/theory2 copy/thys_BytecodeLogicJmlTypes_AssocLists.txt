theory AssocLists imports Main begin



type_synonym ('a,'b) AssList = "('a \<times> 'b) list"

primrec lookup::"('a, 'b) AssList \<Rightarrow> 'a \<Rightarrow> ('b option)" ("_\<down>_" [90,0] 90)
where
"lookup [] l = None" |
"lookup (h # t) l = (if fst h = l then Some(snd h) else lookup t l)"

lemma AL_lookup1[rule_format]:"\<forall> a b . (L\<down>a = Some b) \<longrightarrow> ((a,b) \<in> set L)"

lemma AL_Triv1:"a=b \<Longrightarrow> L\<down>a = L\<down>b" by simp

lemma AL_Triv2: "\<lbrakk>L\<down>a = X; L\<down>a = Y\<rbrakk> \<Longrightarrow> X=Y" by simp

lemma AL_Triv3:"\<lbrakk>L=M ; M\<down>b = X\<rbrakk> \<Longrightarrow> L\<down>b = X" by clarsimp

lemma AL_Triv4:"\<lbrakk>L=M ; L\<down>b = X\<rbrakk> \<Longrightarrow> M\<down>b = X" by clarsimp

lookup operation, and asserts some precedence for bracketing. In a
similar way, shorthands are introduced for various operations
throughout this document.\<close>
text\<open>The empty map is represented by the empty list.\<close>
text\<open>The following operation defined the cardinality of a map.\<close>
text\<open>Some obvious basic properties of association lists and their
operations are easily proven, but have been suppressed
during the document preparation.\<close>
