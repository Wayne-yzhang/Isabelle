theory JavaType imports "../Isa_Counter/TypeIds"
begin



datatype Arraytype = BoolAT | IntgAT | ShortAT | ByteAT
                  | CClassAT CTypeId | AClassAT ATypeId
                  | InterfaceAT ITypeId

datatype Javatype = BoolT | IntgT | ShortT | ByteT | NullT | ArrT Arraytype
                  | CClassT CTypeId | AClassT ATypeId
                  | InterfaceT ITypeId


definition
  at2jt :: "Arraytype \<Rightarrow> Javatype"
where
  "at2jt at = (case at of 
         BoolAT               \<Rightarrow> BoolT
       | IntgAT               \<Rightarrow> IntgT
       | ShortAT              \<Rightarrow> ShortT
       | ByteAT               \<Rightarrow> ByteT
       | CClassAT CTypeId     \<Rightarrow> CClassT CTypeId
       | AClassAT ATypeId     \<Rightarrow> AClassT ATypeId
       | InterfaceAT ITypeId  \<Rightarrow> InterfaceT ITypeId)"
  
                             
primrec isprimitive:: "Javatype \<Rightarrow> bool"
where
"isprimitive BoolT = True" |
"isprimitive IntgT = True" |
"isprimitive ShortT = True" |
"isprimitive ByteT = True" |
"isprimitive NullT = False" |
"isprimitive (ArrT T) = False" |
"isprimitive (CClassT c) = False" |
"isprimitive (AClassT c) = False" |
"isprimitive (InterfaceT i) = False" 

primrec isclass:: "Javatype \<Rightarrow> bool"
where
"isclass BoolT = False" |
"isclass IntgT = False" |
"isclass ShortT = False" |
"isclass ByteT = False" |
"isclass NullT = False" |
"isclass (ArrT T) = False" |
"isclass (CClassT c) = True" |
"isclass (AClassT c) = True" |
"isclass (InterfaceT i) = False" 

end
