theory Runs imports Messages
begin



datatype role_t = Init | Resp 

datatype var = Var nat

type_synonym 
  rid_t = "fid_t"

type_synonym 
  frame = "var \<rightharpoonup> msg" 

record run_t = 
  role :: role_t
  owner :: agent
  partner :: agent

type_synonym
  progress_t = "rid_t \<rightharpoonup> var set" 


fun
  in_progress :: "var set option \<Rightarrow> var \<Rightarrow> bool"
where
  "in_progress (Some S) x = (x \<in> S)"
 |"in_progress None x = False"

fun
  in_progressS :: "var set option \<Rightarrow> var set \<Rightarrow> bool"
where
  "in_progressS (Some S) S' = (S' \<subseteq> S)"
 |"in_progressS None S' = False"

lemma in_progress_dom [elim]: "in_progress (r R) x \<Longrightarrow> R \<in> dom r"
by (cases "r R", auto)

lemma in_progress_Some [elim]: "in_progress r x \<Longrightarrow> \<exists> x. r = Some x"
by (cases "r", auto)

lemma in_progressS_elt [elim]: "in_progressS r S \<Longrightarrow> x \<in> S \<Longrightarrow> in_progress r x"
by (cases r, auto)


end
