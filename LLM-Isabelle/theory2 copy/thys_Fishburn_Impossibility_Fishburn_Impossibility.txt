theory Fishburn_Impossibility
imports
  Social_Choice_Functions
begin


locale fb_impossibility_3_3 =
  strategyproof_anonymous_scf agents alts scf Fishb +
  pareto_efficient_scf agents alts scf
  for agents :: "'agent set" and alts :: "'alt set" and scf A1 A2 A3 a b c +
  assumes agents_eq: "agents = {A1, A2, A3}"
  assumes alts_eq:    "alts = {a, b, c}"
  assumes distinct_agents: "distinct [A1, A2, A3]"
  assumes distinct_alts: "distinct [a, b, c]"
begin

lemma agents_neq [simp]: "A1 \<noteq> A2" "A2 \<noteq> A1" "A1 \<noteq> A3" "A3 \<noteq> A1" "A2 \<noteq> A3" "A3 \<noteq> A2"
  using distinct_agents by auto

lemma alts_neq [simp]: "a \<noteq> b" "a \<noteq> c" "b \<noteq> c" "b \<noteq> a" "c \<noteq> a" "c \<noteq> b"
  using distinct_alts by auto

lemma agent_in_agents [simp]: "A1 \<in> agents" "A2 \<in> agents" "A3 \<in> agents"
  by (simp_all add: agents_eq)

lemma alt_in_alts [simp]: "a \<in> alts" "b \<in> alts" "c \<in> alts"
  by (simp_all add: alts_eq)

lemma Bex_alts: "(\<exists>x\<in>alts. P x) \<longleftrightarrow> P a \<or> P b \<or> P c"
  by (simp add: alts_eq)

lemma eval_pareto_loser_aux: 
  assumes "is_pref_profile R"
  shows   "x \<in> pareto_losers R \<longleftrightarrow> (\<exists>y\<in>{a,b,c}. x \<prec>[Pareto(R)] y)"
proof -
  interpret pref_profile_wf agents alts R by fact
  have *: "y \<in> {a,b,c}" if "x \<prec>[Pareto(R)] y" for y
    using Pareto.strict_not_outside[of x y] that by (simp add: alts_eq)
  show ?thesis by (auto simp: pareto_losers_def dest: *)
(* TODO: Move? *)
