theory 
  PolicyCombinators
  imports 
    PolicyCore
begin


definition 
  allow_all_from :: "'\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_all_from src_net =   {pa. src pa \<sqsubset> src_net} \<triangleleft> A\<^sub>U " 

definition 
  deny_all_from    :: "'\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_all_from src_net   =  {pa. src pa \<sqsubset>  src_net}  \<triangleleft>D\<^sub>U "
        
definition
  allow_all_to    :: "'\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_all_to dest_net   = {pa. dest pa \<sqsubset>  dest_net}  \<triangleleft> A\<^sub>U"

definition 
  deny_all_to :: "'\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_all_to dest_net = {pa. dest pa \<sqsubset> dest_net} \<triangleleft>D\<^sub>U "

definition 
  allow_all_from_to    :: "'\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_all_from_to src_net dest_net = 
                                   {pa. src pa \<sqsubset> src_net \<and> dest pa \<sqsubset> dest_net} \<triangleleft> A\<^sub>U "

definition 
  deny_all_from_to    :: "'\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_all_from_to src_net dest_net = {pa. src pa \<sqsubset> src_net \<and> dest pa \<sqsubset> dest_net} \<triangleleft> D\<^sub>U"




lemmas PolicyCombinators = allow_all_from_def deny_all_from_def
  allow_all_to_def deny_all_to_def allow_all_from_to_def
  deny_all_from_to_def UPFDefs
                           
end
