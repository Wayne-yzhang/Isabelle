theory  Sliding
  imports "HOL-CSPM.CSPM"
begin








lemma F_Sliding:
  by (auto simp add: Sliding_def F_Ndet F_Det NF_ND is_processT6_S2)

  by (auto simp add: F_Sliding)

  by (simp add: Sliding_def D_Ndet D_Det)

  by (simp add: Sliding_def T_Ndet T_Det)




  by (simp add: failure_refine_def F_Sliding subset_iff)
     (simp_all add: Sliding_def)




  by (simp add: Det_id Ndet_id Sliding_def)

  unfolding Sliding_def by (simp add: Det_commute Det_STOP Ndet_id)


proof (intro exI)
    by (metis Det_STOP Ndet_commute SKIP_F_iff SKIP_Neq_STOP
            STOP_F_iff Sliding_def mono_Ndet_F_left)
qed
  

  by (auto simp add: STOP_iff_T T_Sliding intro: Nil_elem_T)


  by (simp add: Det_STOP Det_commute Det_distrib Sliding_def)


  unfolding Sliding_def by (simp_all add: Det_commute Det_BOT Ndet_commute Ndet_BOT)

  by (simp add: Det_is_BOT_iff Ndet_is_BOT_iff Sliding_def)


  by (metis Det_assoc Det_commute Det_distrib Ndet_assoc
            Ndet_commute Ndet_distrib Ndet_id Sliding_def)


  by (auto simp add: Sliding_def Process_eq_spec F_Ndet
                     F_Det T_SKIP D_Ndet D_Det F_SKIP D_SKIP NF_ND)

  by (auto simp add: Sliding_def Process_eq_spec F_Ndet
                     F_Det T_SKIP D_Ndet D_Det F_SKIP D_SKIP)


  by (metis Det_assoc Det_commute Det_distrib Sliding_def)


  by (auto simp add: Process_eq_spec F_Ndet D_Ndet T_Ndet F_Sliding D_Sliding)
  

lemma Renaming_Sliding:
  by (simp add: Renaming_Det Renaming_Ndet Sliding_def)


  unfolding Sliding_def by (simp add: events_of_def T_Det T_Ndet)





  by (simp add: Sliding_def)


end