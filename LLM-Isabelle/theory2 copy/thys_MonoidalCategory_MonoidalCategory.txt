  In this theory, we define the notion ``monoidal category,'' and develop consequences of
  the definition.  The main result is a proof of MacLane's coherence theorem.
\<close>
  text \<open>
    A typical textbook presentation defines a monoidal category to be a category @{term C}
    serves as the domain of these functors.  The domain category is in fact the product
    In a formal development, though, we can't gloss over the fact that
    which are not formally identical, and that associativities are somehow involved in the
    Here we use the @{locale binary_endofunctor} locale to codify our choices about what
\<close>
  text \<open>
    Our primary definition for ``monoidal category'' follows the somewhat non-traditional
    an \emph{associativity isomorphism}, which is a natural isomorphism
    the \emph{pentagon axiom}, which expresses the commutativity of certain pentagonal diagrams

    In more traditional developments, the definition of monoidal category involves additional
    involving their components.
    economical basic definition of monoidal category that requires less data to be given,
    and has a similar effect on the definition of ``monoidal functor.''
    Moreover, in the context of the formalization of categories that we use here,
\<close>
    text\<open>
      We now define helpful notation and abbreviations to improve readability.
      to be a binary functor requires that it take a pair as its argument.
\<close>
    text\<open>
      In HOL we can just give the definitions of the left and right unitors ``up front''
      without any preliminary work.  Later we will have to show that these definitions
      have the right properties.  The next two definitions define the values of the
      unitors when applied to identities; that is, their components as natural transformations.
\<close>
    text\<open>
      We now embark upon a development of the consequences of the monoidal category axioms.
      One of our objectives is to be able to show that an interpretation of the
      to a more traditional definition of monoidal category.
      Another is to obtain the facts we need to prove the coherence theorem.
\<close>
    text\<open>
      (and hence faithful) to show the existence of a unique solution to the characteristic
      equation used in the definition of a component @{term "\<l>[a]"} of the left unitor.
      It follows that @{term "\<l>[a]"}, as given by our definition using definite description,
      satisfies this characteristic equation and is therefore uniquely determined by
\<close>
      interpret L: equivalence_of_categories C C F \<open>\<lambda>f. \<I> \<otimes> f\<close> \<eta> \<epsilon>
    text\<open>
      As the right-hand side of the characteristic equation for @{term "\<I> \<otimes> \<l>[a]"}
      it follows that @{term "\<l>[a]"} is an isomorphism.
\<close>
    text\<open>
      To prove that an arrow @{term f} is equal to @{term "\<l>[a]"} we need only show
      that it is parallel to @{term "\<l>[a]"} and that @{term "\<I> \<otimes> f"} satisfies the same
      characteristic equation as @{term "\<I> \<otimes> \<l>[a]"} does.
\<close>
    text\<open>
      The next facts establish the corresponding results for the components of the
      right unitor.
\<close>
      interpret R: equivalence_of_categories C C F \<open>\<lambda>f. f \<otimes> \<I>\<close> \<eta> \<epsilon>
    text\<open>
      We can now show that the components of the left and right unitors have the
      naturality properties required of a natural transformation.
\<close>
    text\<open>
      The next two definitions extend the unitors to all arrows, not just identities.
      reserved for a higher purpose, so we have to make do with a poor substitute.
\<close>
      interpret \<ll>: transformation_by_components C C L map \<open>\<lambda>a. \<l>[a]\<close>
      interpret \<rho>: transformation_by_components C C R map \<open>\<lambda>a. \<r>[a]\<close>
    text\<open>
      The components of the left and right unitors are related via a ``triangle''
      diagram that also involves the associator.
\<close>
      text\<open>
        We show that the lower left triangle in the following diagram commutes.
\<close>
      text\<open>
$$\xymatrix{
  {@{term "((a \<otimes> \<I>) \<otimes> \<I>) \<otimes> b"}}
     \ar[rrrr]^{\scriptsize @{term "\<a>[a, \<I>, \<I>] \<otimes> b"}}
     \ar[ddd]_{\scriptsize @{term "\<a>[a \<otimes> \<I>, \<I>, b]"}}
     \ar[drr]_{\scriptsize @{term "(\<r>[a] \<otimes> \<I>) \<otimes> b"}}
  && &&
  {@{term "(a \<otimes> (\<I> \<otimes> \<I>)) \<otimes> b"}}
     \ar[dll]^{\scriptsize @{term "(a \<otimes> \<iota>) \<otimes> b"}}
     \ar[ddd]^{\scriptsize @{term "\<a>[a, \<I> \<otimes> \<I>, b]"}} \\
  && {@{term "(a \<otimes> \<I>) \<otimes> b"}}
      \ar[d]^{\scriptsize @{term "\<a>[a, \<I>, b]"}} \\
  && {@{term "a \<otimes> \<I> \<otimes> b"}}  \\
  {@{term "(a \<otimes> \<I>) \<otimes> \<I> \<otimes> b"}}
      \ar[urr]^{\scriptsize @{term "\<r>[a] \<otimes> \<I> \<otimes> b"}}
      \ar[drr]_{\scriptsize @{term "\<a>[a, \<I>, \<I> \<otimes> b]"}}
  && &&
  {@{term "a \<otimes> (\<I> \<otimes> \<I>) \<otimes> b"}}
      \ar[ull]_{\scriptsize @{term "a \<otimes> \<iota> \<otimes> b"}}
      \ar[dll]^{\scriptsize @{term "a \<otimes> \<a>[\<I>, \<I>, b]"}}  \\
  && {@{term "a \<otimes> \<I> \<otimes> \<I> \<otimes> b"}}
      \ar[uu]^{\scriptsize @{term "a \<otimes> \<l>[\<I> \<otimes> b]"}}
}$$
\<close>
      text\<open>
         However, it seems a little bit more involved than that to formally transport the
         to @{term b}.
\<close>
      text\<open>
        We show that the lower right triangle in the following diagram commutes.
\<close>
      text\<open>
$$\xymatrix{
  {@{term "((a \<otimes> \<I>) \<otimes> b) \<otimes> c"}}
     \ar[rrrr]^{\scriptsize @{term "\<a>[a, \<I>, b] \<otimes> c"}}
     \ar[ddd]_{\scriptsize @{term "\<a>[a \<otimes> \<I>, b, c]"}}
     \ar[drr]_{\scriptsize @{term "\<r>[a] \<otimes> b \<otimes> c"}}
  && &&
  {@{term "(a \<otimes> (\<I> \<otimes> b)) \<otimes> c"}}
     \ar[dll]^{\scriptsize @{term "(a \<otimes> \<l>[b]) \<otimes> c"}}
     \ar[ddd]^{\scriptsize @{term "\<a>[a, \<I> \<otimes> b, c]"}} \\
  && {@{term "(a \<otimes> b) \<otimes> c"}}
      \ar[d]^{\scriptsize @{term "\<a>[a, b, c]"}}    \\
  && {@{term "a \<otimes> b \<otimes> c"}}        \\
  {@{term "(a \<otimes> \<I>) \<otimes> b \<otimes> c"}}
      \ar[urr]^{\scriptsize @{term "\<r>[a] \<otimes> b \<otimes> c"}}
      \ar[drr]_{\scriptsize @{term "\<a>[a, \<I>, b \<otimes> c]"}}
  && &&
  {@{term "a \<otimes> (\<I> \<otimes> b) \<otimes> c"}}
      \ar[ull]_{\scriptsize @{term "a \<otimes> \<l>[b] \<otimes> c"}}
      \ar[dll]^{\scriptsize @{term "a \<otimes> \<a>[\<I>, b, c]"}}  \\
  && {@{term "a \<otimes> \<I> \<otimes> b \<otimes> c"}}
      \ar[uu]^{\scriptsize @{term "a \<otimes> \<l>[b \<otimes> c]"}}
}$$
\<close>
      text\<open>
        The result follows by cancelling the isomorphism
        @{term "\<a>[a, \<I> \<otimes> b, c] \<cdot> (\<a>[a, \<I>, b] \<otimes> c)"}
\<close>
    text\<open>
      Exercise 1, page 161.  I did not succeed within a few hours to construct a proof following
\<close>
    text\<open>
      We next show the corresponding result for the right unitor.
\<close>
      text\<open>
        We show that the upper right triangle in the following diagram commutes.
\<close>
      text\<open>
$$\xymatrix{
  && {@{term "((a \<otimes> b) \<otimes> \<I>) \<otimes> c"}}
     \ar[dll]_{\scriptsize @{term "\<a>[a \<otimes> b, \<I>, c]"}}
     \ar[dd]^{\scriptsize @{term "\<r>[a \<otimes> b] \<otimes> c"}}
     \ar[drr]^{\scriptsize @{term "\<a>[a, b, \<I>] \<otimes> c"}} \\
  {@{term "(a \<otimes> b) \<otimes> \<I> \<otimes> c"}}
     \ar[ddd]_{\scriptsize @{term "\<a>[a, b, \<I> \<otimes> c]"}}
     \ar[drr]_{\scriptsize @{term "(a \<otimes> b) \<otimes> \<l>[c]"}}
  && &&
  {@{term "(a \<otimes> b \<otimes> \<I>) \<otimes> c"}}
     \ar[dll]^{\scriptsize @{term "(a \<otimes> \<r>[b]) \<otimes> c"}}
     \ar[ddd]^{\scriptsize @{term "\<a>[a, b \<otimes> \<I>, c]"}} \\
  && {@{term "(a \<otimes> b) \<otimes> c"}}
     \ar[d]^{\scriptsize @{term "\<a>[a, b, c]"}}     \\
  && {@{term "a \<otimes> b \<otimes> c"}}        \\
  {@{term "a \<otimes> b \<otimes> \<I> \<otimes> c"}}
     \ar[urr]^{\scriptsize @{term "a \<otimes> b \<otimes> \<l>[c]"}}
  && &&
  {@{term "a \<otimes> (b \<otimes> \<I>) \<otimes> c"}}
     \ar[llll]^{\scriptsize @{term "a \<otimes> \<a>[b, \<I>, c]"}}
     \ar[ull]_{\scriptsize @{term "a \<otimes> \<r>[b] \<otimes> c"}}
}$$
\<close>
    text \<open>
      Sometimes inverted forms of the triangle and pentagon axioms are useful.
\<close>
    text\<open>
\<close>
    text\<open>
      The only isomorphism that commutes with @{term \<iota>} is @{term \<I>}.
\<close>
  text\<open>
\<close>
    text\<open>
\<close>
          text \<open>
$$\xymatrix{
  && {@{term[source=true] "(\<I> \<otimes> \<I>\<^sub>1) \<otimes> \<I> \<otimes> \<I>\<^sub>1"}}
     \ar[dddll]_{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>] \<otimes> \<r>\<^sub>1[\<I>]"}}
     \ar[dd]^{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>] \<otimes> \<I> \<otimes> \<I>\<^sub>1"}}
     \ar[dddrr]^{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>] \<otimes> \<l>[\<I>\<^sub>1]"}}
  \\
  \\
  && {@{term[source=true] "\<I> \<otimes> \<I> \<otimes> \<I>\<^sub>1"}}
     \ar[dll]^{\scriptsize @{term[source=true] "\<I> \<otimes> \<r>\<^sub>1[\<I>]"}}
     \ar[drr]_{\scriptsize @{term[source=true] "\<I> \<otimes> \<l>[\<I>\<^sub>1]"}}
     \ar[dd]^{\scriptsize @{term[source=true] "\<a>\<^sup>-\<^sup>1[\<I>, \<I>, \<I>\<^sub>1]"}}
  \\
  {@{term[source=true] "\<I> \<otimes> \<I>"}}
     \ar[dddrr]_{\scriptsize @{term[source=true] "\<iota>"}}
  &&
  &&
  {@{term[source=true] "\<I> \<otimes> \<I>\<^sub>1"}}
     \ar[dddll]^{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>]"}}
  \\
  && {@{ term[source=true] "(\<I> \<otimes> \<I>) \<otimes> \<I>\<^sub>1"}}
     \ar[ull]_{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I> \<otimes> \<I>]"}}
     \ar[urr]^{\scriptsize @{term[source=true] "\<iota> \<otimes> \<I>"}}
  \\
  \\
  && {@{term[source=true] "\<I>"}}
}$$
\<close>
        text \<open>
$$\xymatrix{
  && {@{term[source=true] "(\<I> \<otimes> \<I>\<^sub>1) \<otimes> (\<I> \<otimes> \<I>\<^sub>1)"}}
     \ar[dddll]_{\scriptsize @{term[source=true] "\<l>[\<I>\<^sub>1] \<otimes> \<l>[\<I>\<^sub>1]"}}
     \ar[dd]^{\scriptsize @{term[source=true] "(\<I> \<otimes> \<I>\<^sub>1) \<otimes> \<l>[\<I>\<^sub>1]"}}
     \ar[dddrr]^{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>] \<otimes> \<l>[\<I>\<^sub>1]"}}
  \\
  \\
  && {@{term[source=true] "(\<I> \<otimes> \<I>\<^sub>1) \<otimes> \<I>\<^sub>1"}}
     \ar[dll]^{\scriptsize @{term[source=true] "\<l>[\<I>\<^sub>1] \<otimes> \<I>\<^sub>1"}}
     \ar[drr]_{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>] \<otimes> \<I>\<^sub>1"}}
     \ar[dd]^{\scriptsize @{term[source=true] "\<a>[\<I>, \<I>\<^sub>1, \<I>\<^sub>1]"}}
  \\
  {@{term[source=true] "\<I>\<^sub>1 \<otimes> \<I>\<^sub>1"}}
     \ar[dddrr]_{\scriptsize @{term[source=true] "\<iota>\<^sub>1"}}
  &&
  &&
  {@{term[source=true] "\<I> \<otimes> \<I>\<^sub>1"}}
     \ar[dddll]^{\scriptsize @{term[source=true] "\<l>[\<I>\<^sub>1]"}}
  \\
  && {@{term[source=true] "\<I> \<otimes> \<I>\<^sub>1 \<otimes> \<I>\<^sub>1"}}
     \ar[ull]_{\scriptsize @{term[source=true] "\<l>[\<I>\<^sub>1 \<otimes> \<I>\<^sub>1]"}}
     \ar[urr]^{\scriptsize @{term[source=true] "\<I> \<otimes> \<iota>\<^sub>1"}}
  \\
  \\
  && {@{term[source=true] "\<I>\<^sub>1"}}
}$$
\<close>
        text \<open>
$$\xymatrix{
  {@{term[source=true] "\<I>\<^sub>1 \<otimes> \<I>\<^sub>1"}}
     \ar[dd]_{\scriptsize @{term "\<iota>\<^sub>1"}}
  &&
  {@{term[source=true] "(\<I> \<otimes> \<I>\<^sub>1) \<otimes> (\<I> \<otimes> \<I>\<^sub>1)"}}
     \ar[ll]_{\scriptsize @{term[source=true] "\<l>[\<I>\<^sub>1] \<otimes> \<l>[\<I>\<^sub>1]"}}
     \ar[dd]^{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>] \<otimes> \<l>[\<I>\<^sub>1]"}}
     \ar[rr]^{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>] \<otimes> \<r>\<^sub>1[\<I>]"}}
  &&
  {@{term[source=true] "\<I>\<^sub>1 \<otimes> \<I>\<^sub>1"}}
     \ar[dd]^{\scriptsize @{term[source=true] "\<iota>"}}
  \\
  \\
  {@{term[source=true] "\<I>\<^sub>1"}}
  &&
  {@{term[source=true] "\<I> \<otimes> \<I>\<^sub>1"}}
     \ar[ll]_{\scriptsize @{term[source=true] "\<l>[\<I>\<^sub>1]"}}
     \ar[rr]^{\scriptsize @{term[source=true] "\<r>\<^sub>1[\<I>]"}}
  &&
  {@{term[source=true] "\<I>"}}
}$$
\<close>
  text\<open>
    Although the economy of data assumed by @{locale monoidal_category} is useful for general
    results, to establish interpretations it is more convenient to work with a traditional
    definition of monoidal category.  The following locale provides such a definition.
    It permits a monoidal category to be specified by giving the tensor product and the
    components of the associator and unitors, which are required only to satisfy elementary
    conditions that imply functoriality and naturality, without having to worry about
    extensionality or formal interpretations for the various functors and natural transformations.
\<close>
  text\<open>
\<close>
    interpretation L: "functor" C C \<open>\<lambda>f. T (\<I>, f)\<close>
    interpretation R: "functor" C C \<open>\<lambda>f. T (f, \<I>)\<close>
    interpretation \<ll>: natural_isomorphism C C \<open>\<lambda>f. T (\<I>, f)\<close> map
                        \<open>\<lambda>f. if arr f then f \<cdot> \<l>[dom f] else null\<close>
      interpret \<ll>: transformation_by_components C C \<open>\<lambda>f. T (\<I>, f)\<close> map \<open>\<lambda>a. \<l>[a]\<close>
      interpret \<ll>: natural_isomorphism C C \<open>\<lambda>f. T (\<I>, f)\<close> map \<ll>.map
    interpretation \<rho>: natural_isomorphism C C \<open>\<lambda>f. T (f, \<I>)\<close> map
                        \<open>\<lambda>f. if arr f then f \<cdot> \<r>[dom f] else null\<close>
      interpret \<rho>: transformation_by_components C C \<open>\<lambda>f. T (f, \<I>)\<close> map \<open>\<lambda>a. \<r>[a]\<close>
      interpret \<rho>: natural_isomorphism C C \<open>\<lambda>f. T (f, \<I>)\<close> map \<rho>.map
    text\<open>
      due to the existence of the unitors.
\<close>
    interpretation L: equivalence_functor C C \<open>\<lambda>f. T (\<I>, f)\<close>
      interpret endofunctor C \<open>\<lambda>f. T (\<I>, f)\<close> ..
    interpretation R: equivalence_functor C C \<open>\<lambda>f. T (f, \<I>)\<close>
      interpret endofunctor C \<open>\<lambda>f. T (f, \<I>)\<close> ..
    text\<open>
      To complete an interpretation of the @{locale "monoidal_category"} locale,
      we define @{term "\<iota> \<equiv> \<l>[\<I>]"}.
      We could also have chosen @{term "\<iota> \<equiv> \<rho>[\<I>]"} as the two are equal, though to prove
      that requires some work yet.
\<close>
      interpret L: equivalence_functor C C \<open>\<lambda>f. T (cod \<iota>, f)\<close>
      interpret R: equivalence_functor C C \<open>\<lambda>f. T (f, cod \<iota>)\<close>
    text\<open>
      counterparts in the present locale.  These facts are needed if we define an
      interpretation for the @{locale elementary_monoidal_category} locale, use it to
      obtain the induced interpretation for @{locale monoidal_category}, and then want to
      transfer facts obtained in the induced interpretation back to the original one.
\<close>
    text\<open>
      We wish to show that the components of the unitors @{term MC.\<ll>} and @{term MC.\<rho>}
      parameters @{term lunit} and @{term runit} to the present locale.  To avoid a lengthy
      development that repeats work already done in the @{locale monoidal_category} locale,
      we establish the agreement in a special case and then use the properties already
      @{term "\<l>[\<I>] = MC.lunit MC.unity"} and @{term "\<r>[\<I>] = MC.runit MC.unity"},
      from which it follows by facts already proved for @{term MC} that both are equal to @{term \<iota>}.
      We then show that for an arbitrary identity @{term a} the arrows @{term "\<l>[a]"}
      and @{term "\<r>[a]"} satisfy the equations that uniquely characterize the components
      @{term "MC.lunit a"} and @{term "MC.runit a"}, respectively, and are therefore equal
      to those components.
\<close>
  text\<open>
    A monoidal category is \emph{strict} if the components of the associator and unitors
    are all identities.
\<close>
  text\<open>
    The \emph{opposite} of a monoidal category has the same underlying category, but the
    arguments to the tensor product are reversed and the associator is inverted and its
    arguments reversed.
\<close>
    interpret L: equivalence_functor C C \<open>\<lambda>f. T (C.cod \<iota>, f)\<close>
    interpret R: equivalence_functor C C \<open>\<lambda>f. T (f, C.cod \<iota>)\<close>
  text\<open>
    In this section we assume that a category @{term C} is given, and we define a
    formal syntax of terms constructed from arrows of @{term C} using function symbols
    that correspond to unity, composition, tensor, the associator and its formal inverse,
    and the left and right unitors and their formal inverses.
    We will use this syntax to state and prove the coherence theorem and then to construct
    the free monoidal category generated by @{term C}.
\<close>
    text\<open>
      We define formal domain and codomain functions on terms.
\<close>
    text\<open>
      A term is a ``formal arrow'' if it is constructed from arrows of @{term[source=true] C}
      in such a way that composition is applied only to formally composable pairs of terms.
\<close>
    text\<open>
      A term is a ``formal identity'' if it is constructed from identity arrows of
\<close>
    text\<open>
      A formal arrow is ``canonical'' if the only arrows of @{term[source=true] C} used in its
      construction are identities.
\<close>
    text\<open>
      We next define the formal inverse of a term.
      This is only sensible for formal arrows built using only isomorphisms of
      @{term[source=true] C}; in particular, for canonical formal arrows.
\<close>
    text\<open>
      We call a term ``diagonal'' if it is either @{term "\<^bold>\<I>"} or it is constructed from
      Essentially, such terms are lists of arrows of @{term[source=true] C}, where @{term "\<^bold>\<I>"}
      We call them ``diagonal'' because terms can regarded as defining ``interconnection matrices''
      of arrows connecting ``inputs'' to ``outputs'', and from this point of view diagonal
      terms correspond to diagonal matrices.  The matrix point of view is suggestive for the
      extension of the results presented here to the symmetric monoidal and cartesian monoidal
      cases.
\<close>
    text\<open>
      The following function defines the ``dimension'' of a term,
      which is the number of arrows of @{term C} it contains.
      For diagonal terms, this is just the length of the term when regarded as a list
      of arrows of @{term C}.
      Alternatively, if a term is regarded as defining an interconnection matrix,
      then the dimension is the number of inputs (or outputs).
\<close>
    text\<open>
      The following function defines a tensor product for diagonal terms.
      If terms are regarded as lists, this is just list concatenation.
      If terms are regarded as matrices, this corresponds to constructing a block
      diagonal matrix.
\<close>
    text\<open>
      The following function defines composition for compatible diagonal terms,
\<close>
    text\<open>
      Note that the last clause above is not relevant to diagonal terms.
      We have chosen a provably non-diagonal value in order to validate associativity.
\<close>
    text\<open>
      The next fact is a syntactic version of the interchange law, for diagonal terms.
\<close>
    text\<open>
      The following function reduces an arrow to diagonal form.
      The precise relationship between a term and its diagonalization is developed below.
\<close>
    text\<open>
      The diagonalizations of canonical arrows are identities.
\<close>
    text\<open>
      Our next objective is to begin making the connection, to be completed in a
      subsequent section, between arrows and their diagonalizations.
      To summarize, an arrow @{term t} and its diagonalization @{term "\<^bold>\<lfloor>t\<^bold>\<rfloor>"} are opposite sides
      of a square whose other sides are certain canonical terms
      below.  The coherence theorem amounts to the statement that every such square commutes
      when the formal terms involved are evaluated in the evident way in any monoidal category.

      of diagonal identity terms and produces a canonical arrow
      from @{term a} to @{term "\<^bold>\<lfloor>a\<^bold>\<rfloor>"}, where the reduction steps are canonical arrows
      that involve the unitors and associator only in their uninverted forms.
      In general, a parallel innermost reduction from @{term a} will not be unique:
      at some points there is a choice available between left and right unitors
      and at other points there are choices between unitors and associators.
      These choices are inessential, and the ordering of the clauses in the function definitions
      below resolves them in an arbitrary way.  What is more important is having chosen an
      innermost reduction, which is what allows us to write these definitions in structurally
      recursive form.

      The essence of coherence is that the axioms for a monoidal category allow us to
      prove that any reduction from @{term a} to @{term "\<^bold>\<lfloor>a\<^bold>\<rfloor>"} is equivalent
      (under evaluation of terms) to a parallel innermost reduction.
      The problematic cases are terms of the form @{term "((a \<^bold>\<otimes> b) \<^bold>\<otimes> c) \<^bold>\<otimes> d"},
      which present a choice between an inner and outer reduction that lead to terms
      with different structures.  It is of course the pentagon axiom that ensures the
      confluence (under evaluation) of the two resulting paths.

      Although simple in appearance, the structurally recursive definitions below were
      difficult to get right even after I started to understand what I was doing.
      I wish I could have just written them down straightaway.  If so, then I could have
      avoided laboriously constructing and then throwing away thousands of lines of proof
      text that used a non-structural, ``operational'' approach to defining a reduction
      from @{term a} to @{term "\<^bold>\<lfloor>a\<^bold>\<rfloor>"}.
\<close>
  text\<open>
    in an evident way to an evaluation map that interprets each formal arrow of the
    monoidal language of @{term C} as an arrow of @{term D}.
\<close>
    text\<open>
      domain and codomain.
\<close>
    text\<open>
      The following are conveniences for the case of identity arguments
      to avoid having to get rid of the extra identities that are introduced by
      the general formulas above.
\<close>
    text\<open>
\<close>
    text\<open>
\<close>
    text\<open>
      For identity terms @{term a} and @{term b}, the reduction @{term "(a \<^bold>\<otimes> b)\<^bold>\<down>"}
      followed by a reduction of its codomain @{term "\<^bold>\<lfloor>a\<^bold>\<rfloor> \<^bold>\<Down> \<^bold>\<lfloor>b\<^bold>\<rfloor>"}.
\<close>
    text\<open>
      Define a formal arrow t to be ``coherent'' if the square formed by @{term t}, @{term "\<^bold>\<lfloor>t\<^bold>\<rfloor>"}
      and the reductions @{term "Dom t\<^bold>\<down>"} and @{term "Cod t\<^bold>\<down>"} commutes under evaluation
      Since the diagonalizations of canonical arrows are identities, a corollary is that parallel
      canonical arrows have equal evaluations.
\<close>
    text\<open>
      Diagonal arrows are coherent, since for such arrows @{term t} the reductions
      @{term "Dom t\<^bold>\<down>"} and @{term "Cod t\<^bold>\<down>"} are identities.
\<close>
    text\<open>
      into the evaluations of a reduction @{term "Dom t\<^bold>\<down>"}, diagonalization @{term "\<^bold>\<lfloor>t\<^bold>\<rfloor>"},
      and inverse reduction @{term "Inv (Cod t\<^bold>\<down>)"}.
      This will later allow us to use the term @{term "Inv (Cod t\<^bold>\<down>) \<^bold>\<cdot> \<^bold>\<lfloor>t\<^bold>\<rfloor> \<^bold>\<cdot> Dom t\<^bold>\<down>"}
      as a normal form for @{term t}.
\<close>
    text\<open>
      A canonical arrow is coherent if and only if its formal inverse is.
\<close>
              \<open>Can t\<close> inv_is_inverse)
    text\<open>
      Some special cases of coherence are readily dispatched.
\<close>
    text\<open>
      To go further, we need the next result, which is in some sense the crux of coherence:
      For diagonal identities @{term a}, @{term b}, and @{term c},
      the reduction @{term "((a \<^bold>\<lfloor>\<^bold>\<otimes>\<^bold>\<rfloor> b) \<^bold>\<Down> c) \<^bold>\<cdot> ((a \<^bold>\<Down> b) \<^bold>\<otimes> c)"} from @{term "(a \<^bold>\<otimes> b) \<^bold>\<otimes> c"}
      that first reduces the subterm @{term "a \<^bold>\<otimes> b"} and then reduces the result,
      applies the associator @{term "\<^bold>\<a>\<^bold>[a, b, c\<^bold>]"} and then applies the reduction
      @{term "(a \<^bold>\<Down> (b \<^bold>\<lfloor>\<^bold>\<otimes>\<^bold>\<rfloor> c)) \<^bold>\<cdot> (a \<^bold>\<otimes> (b \<^bold>\<Down> c))"} from @{term "a \<^bold>\<otimes> (b \<^bold>\<otimes> c)"}.
      The triangle and pentagon axioms are used in the proof.
\<close>
        text \<open>The triangle is used!\<close>
              text \<open>The pentagon is used!\<close>
    text\<open>
      The next lemma implies coherence for the special case of a term that is the tensor
      of two diagonal arrows.
\<close>
    text\<open>
      The main result: ``Every formal arrow is coherent.''
\<close>
    text\<open>
      but that is somewhat misleading.  A coherence theorem provides some kind of hopefully
      useful way of distinguishing diagrams that definitely commute from diagrams that might not.
      The next result expresses coherence for monoidal categories in this way.
      As the hypotheses can be verified algorithmically (using the functions @{term Dom},
      @{term Cod}, @{term Arr}, and @{term Diagonalize}) if we are given an oracle for equality
\<close>
    text\<open>
      Our final corollary expresses coherence in a more ``MacLane-like'' fashion:
      parallel canonical arrows are equivalent under evaluation.
\<close>
