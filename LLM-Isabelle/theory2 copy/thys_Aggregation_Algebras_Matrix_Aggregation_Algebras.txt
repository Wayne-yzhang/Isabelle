Aggregation in these algebras is an associative and commutative operation satisfying additional properties related to the partial order and its least element.
We apply the aggregation operation to finite matrices over the aggregation algebras, which shows that they form an s-algebra.
By requiring the aggregation algebras to be linearly ordered, we also obtain that the matrices form an m-algebra.

This is an intermediate step in demonstrating that weighted graphs form an s-algebra and an m-algebra.
The present theory specifies abstract properties for the edge weights and shows that matrices over such weights form an instance of s-algebras and m-algebras.
A second step taken in a separate theory gives concrete instances of edge weights satisfying the abstract properties introduced here.

Lifting the aggregation to matrices requires finite sums over elements taken from commutative semigroups with an element that is a unit on the image of the semigroup operation.
Because standard sums assume a commutative monoid we have to derive a number of properties of these generalised sums as their statements or proofs are different.
\<close>
subsection \<open>Aggregation Orders and Finite Sums\<close>
text \<open>
An aggregation order is a partial order with a least element and an associative commutative operation satisfying certain properties.
This is necessary since it is not a unit of a number of aggregation operations we are interested in.
Its assumption $x \neq bot$ is necessary because the introduction of new edges can decrease the aggregated value.
\<close>
text \<open>
We introduce notation for finite sums over aggregation orders.
The index variable of the summation ranges over the finite universe of its type.
Finite sums are defined recursively using the binary aggregation and $\bot + \bot$ for the empty sum.
\<close>
text \<open>
The following are basic properties of such sums.
\<close>
subsection \<open>Matrix Aggregation\<close>
text \<open>
The following definitions introduce the matrix of unit elements, componentwise aggregation and aggregation on matrices.
The aggregation of a matrix is a single value, but because s-algebras are single-sorted the result has to be encoded as a matrix of the same type (size) as the input.
We store the aggregated matrix value in the `first' entry of a matrix, setting all other entries to the unit value.
The first entry is determined by requiring an enumeration of indices.
It does not have to be the first entry; any fixed location in the matrix would work as well.
\<close>
text \<open>
Basic properties of these operations are given in the following.
\<close>
text \<open>
We consider a different implementation of matrix aggregation which stores the aggregated value in all entries of the matrix instead of a particular one.
This does not require an enumeration of the indices.
All results continue to hold using this alternative implementation.
\<close>
subsection \<open>Aggregation Lattices\<close>
text \<open>
We extend aggregation orders to dense bounded distributive lattices.
\<close>
text \<open>
Aggregation lattices form a Stone relation algebra by reusing the meet operation as composition, using identity as converse and a standard implementation of pseudocomplement.
\<close>
text \<open>
We show that matrices over aggregation lattices form an s-algebra using the above operations.
\<close>
text \<open>
We show the same for the alternative implementation that stores the result of aggregation in all elements of the matrix.
\<close>
subsection \<open>Matrix Minimisation\<close>
text \<open>
We construct an operation that finds the minimum entry of a matrix.
Because a matrix can have several entries with the same minimum value, we introduce a lexicographic order on the indices to make the operation deterministic.
The order is obtained by enumerating the universe of the index.
\<close>
text \<open>
The following function finds the position of an index in the enumerated universe.
\<close>
text \<open>
The position in the enumerated universe determines the order.
\<close>
text \<open>
Based on this, a lexicographic order is defined on pairs, which represent locations in a matrix.
\<close>
text \<open>
The $m$-operation determines the location of the non-$\bot$ minimum element which is first in the lexicographic order.
The result is returned as a regular matrix with $\top$ at that location and $\bot$ everywhere else.
In the weighted-graph model, this represents a single unweighted edge of the graph.
\<close>
subsection \<open>Linear Aggregation Lattices\<close>
text \<open>
We now assume that the aggregation order is linear and forms a bounded lattice.
It follows that these structures are aggregation lattices.
A linear order on matrix entries is necessary to obtain a unique minimum entry.
\<close>
text \<open>
Every non-empty set with a transitive total relation has a least element with respect to this relation.
\<close>
text \<open>
Linear aggregation lattices form a Stone relation algebra by reusing the meet operation as composition, using identity as converse and a standard implementation of pseudocomplement.
\<close>
text \<open>
We show that matrices over linear aggregation lattices form an m-algebra using the above operations.
\<close>
text \<open>
We show the same for the alternative implementation that stores the result of aggregation in all elements of the matrix.
\<close>
text \<open>
By defining the Kleene star as $\top$ aggregation lattices form a Kleene algebra.
\<close>
