This theory introduces algebraic structures with an operation that describes iteration in various relational computation models.
An iteration describes the repeated sequential execution of a computation.
This is typically modelled by fixpoints, but different computation models use different fixpoints in the refinement order.
We therefore look at equational and simulation axioms rather than induction axioms.

Many properties of iteration follow already from these equational axioms.

Next we introduce iterings, which use generalised versions of simulation axioms in addition to sumstar and productstar.
Unlike the induction axioms of the Kleene star, which hold only in partial-correctness models, the simulation axioms are also valid in total and general correctness models.
\<close>
subsection \<open>Conway Semirings\<close>
text \<open>
In this section, we consider equational axioms for iteration.
The algebraic structures are based on idempotent left semirings, which are expanded by a unary iteration operation.
We start with an unfold property, one inequality of the sliding rule and distributivity over joins, which is similar to Conway's sumstar.
\<close>
text \<open>
We obtain one inequality of Conway's productstar, as well as of the other unfold rule.
\<close>
text \<open>
While iteration is not idempotent, a fixpoint is reached after applying this operation twice.
Iteration is idempotent for the unit.
\<close>
text \<open>
Iteration satisfies a characteristic property of reflexive transitive closures.
\<close>
text \<open>
We obtain the fixpoint and prefixpoint properties of iteration, but not least or greatest fixpoint properties.
\<close>
text \<open>
The next class considers the interaction of iteration with a greatest element.
\<close>
text \<open>
The next class assumes the full sliding equation.
\<close>
text \<open>
This implies the full unfold rules and Conway's productstar.
\<close>
subsection \<open>Iterings\<close>
text \<open>
This section adds simulation axioms to Conway semirings.
We consider several classes with increasingly general simulation axioms.
\<close>
text \<open>
The left simulation axioms is enough to prove a basic import property of tests.
\<close>
text \<open>
Including generalisations of both simulation axioms allows us to prove separation rules.
\<close>
text \<open>
With distributivity, we also get Back's atomicity refinement theorem.
\<close>
text \<open>
The following class contains the most general simulation axioms we consider.
They allow us to prove further separation properties.
\<close>
text \<open>
We finally expand Conway semirings and iterings by an element that corresponds to the endless loop.
\<close>
