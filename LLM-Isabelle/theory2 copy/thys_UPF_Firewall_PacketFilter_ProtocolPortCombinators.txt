theory 
  ProtocolPortCombinators
  imports 
    PortCombinators
begin


definition
  allow_all_from_port_prot :: "protocol \<Rightarrow> '\<alpha>::adr net \<Rightarrow> ('\<gamma>::port) \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_all_from_port_prot p src_net s_port =   
       {pa. dest_protocol pa = p} \<triangleleft> allow_all_from_port src_net s_port"

definition 
  deny_all_from_port_prot    :: "protocol =>'\<alpha>::adr net \<Rightarrow> '\<gamma>::port \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_all_from_port_prot p src_net s_port =  
       {pa. dest_protocol pa = p} \<triangleleft> deny_all_from_port src_net s_port" 

definition
  allow_all_to_port_prot    :: "protocol =>'\<alpha>::adr net \<Rightarrow> '\<gamma>::port \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_all_to_port_prot p dest_net d_port  =  
     {pa. dest_protocol pa = p} \<triangleleft> allow_all_to_port dest_net d_port"

definition 
  deny_all_to_port_prot :: "protocol =>'\<alpha>::adr net \<Rightarrow>  '\<gamma>::port \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_all_to_port_prot p dest_net d_port = 
    {pa. dest_protocol pa = p} \<triangleleft> deny_all_to_port dest_net d_port"

definition
  allow_all_from_port_to_prot:: "protocol =>'\<alpha>::adr net \<Rightarrow> '\<gamma>::port \<Rightarrow> '\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)"
  where
    "allow_all_from_port_to_prot p src_net s_port dest_net =  
   {pa. dest_protocol pa = p} \<triangleleft> allow_all_from_port_to src_net s_port dest_net"

definition 
  deny_all_from_port_to_prot::"protocol \<Rightarrow> '\<alpha>::adr net \<Rightarrow>  '\<gamma>::port \<Rightarrow> '\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)"
  where
    "deny_all_from_port_to_prot p src_net s_port dest_net = 
   {pa. dest_protocol pa = p} \<triangleleft>  deny_all_from_port_to  src_net s_port dest_net"

definition
  allow_all_from_port_to_port_prot::"protocol \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<gamma>::port \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<gamma>::port \<Rightarrow>
                              (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_all_from_port_to_port_prot p src_net s_port dest_net d_port = 
       {pa. dest_protocol pa = p} \<triangleleft>      allow_all_from_port_to_port src_net s_port dest_net d_port "

definition 
  deny_all_from_port_to_port_prot :: "protocol =>'\<alpha>::adr net \<Rightarrow>  '\<gamma>::port \<Rightarrow> '\<alpha>::adr net \<Rightarrow>
                                 '\<gamma>::port \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_all_from_port_to_port_prot p src_net s_port dest_net d_port =              
   {pa. dest_protocol pa = p} \<triangleleft>       deny_all_from_port_to_port src_net s_port dest_net d_port"

definition 
  allow_all_from_to_port_prot    :: "protocol =>'\<alpha>::adr net  \<Rightarrow> '\<alpha>::adr net \<Rightarrow>
                                '\<gamma>::port \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_all_from_to_port_prot p src_net dest_net d_port = 
    {pa. dest_protocol pa = p} \<triangleleft> allow_all_from_to_port src_net dest_net d_port "

definition 
  deny_all_from_to_port_prot    :: "protocol =>'\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<gamma>::port \<Rightarrow>
                               (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_all_from_to_port_prot p src_net dest_net d_port =   
    {pa. dest_protocol pa = p} \<triangleleft> deny_all_from_to_port src_net dest_net d_port"

definition 
  allow_from_port_to_prot :: "protocol =>'\<gamma>::port \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)"
  where 
    "allow_from_port_to_prot p port src_net dest_net =   
    {pa. dest_protocol pa = p} \<triangleleft> allow_from_port_to port src_net dest_net"

definition 
  deny_from_port_to_prot :: "protocol =>'\<gamma>::port \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)"
  where 
    "deny_from_port_to_prot p port src_net dest_net =   
    {pa. dest_protocol pa = p} \<triangleleft> deny_from_port_to port src_net dest_net"

definition 
  allow_from_to_port_prot :: "protocol =>'\<gamma>::port  \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)"
  where 
    "allow_from_to_port_prot p port src_net dest_net =   
  {pa. dest_protocol pa = p} \<triangleleft> allow_from_to_port port src_net dest_net"

definition 
  deny_from_to_port_prot :: "protocol =>'\<gamma>::port  \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow> (('\<alpha>,'\<beta>) packet \<mapsto> unit)"
  where 
    "deny_from_to_port_prot p port src_net dest_net =   
    {pa. dest_protocol pa = p} \<triangleleft> deny_from_to_port port src_net dest_net"

definition 
  allow_from_ports_to_prot :: "protocol =>'\<gamma>::port set \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow>
                          (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_from_ports_to_prot p ports src_net dest_net =   
   {pa. dest_protocol pa = p} \<triangleleft> allow_from_ports_to ports src_net dest_net"

definition 
  allow_from_to_ports_prot :: "protocol =>'\<gamma>::port set \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow>
                          (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "allow_from_to_ports_prot p ports src_net dest_net =   
    {pa. dest_protocol pa = p} \<triangleleft> allow_from_to_ports ports src_net dest_net"

definition 
  deny_from_ports_to_prot :: "protocol =>'\<gamma>::port set \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow>
                          (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_from_ports_to_prot p ports src_net dest_net =   
    {pa. dest_protocol pa = p} \<triangleleft> deny_from_ports_to ports src_net dest_net"

definition 
  deny_from_to_ports_prot :: "protocol =>'\<gamma>::port set \<Rightarrow> '\<alpha>::adr net \<Rightarrow> '\<alpha>::adr net \<Rightarrow>
                          (('\<alpha>,'\<beta>) packet \<mapsto> unit)" where
  "deny_from_to_ports_prot p ports src_net dest_net =   
    {pa. dest_protocol pa = p} \<triangleleft> deny_from_to_ports ports src_net dest_net"


lemmas ProtocolCombinatorsCore = 
  allow_all_from_port_prot_def deny_all_from_port_prot_def allow_all_to_port_prot_def
  deny_all_to_port_prot_def allow_all_from_to_port_prot_def
  deny_all_from_to_port_prot_def
  allow_from_ports_to_prot_def allow_from_to_ports_prot_def
  deny_from_ports_to_prot_def deny_from_to_ports_prot_def
  allow_all_from_port_to_prot_def deny_all_from_port_to_prot_def
  allow_from_port_to_prot_def allow_from_to_port_prot_def deny_from_to_port_prot_def
  deny_from_port_to_prot_def 

lemmas ProtocolCombinators = PortCombinators.PortCombinators ProtocolCombinatorsCore

end
