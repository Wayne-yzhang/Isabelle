  imports DDLcube

begin

consts A::\<sigma> Aplus::\<sigma> B::\<sigma>  i1::i i2::i i3::i i4::i i5::i i6::i i7::i i8::i 

axiomatization where
 PP0: "\<lfloor>(\<^bold>\<not>\<circle><\<^bold>\<not>A|A\<^bold>\<or>B>\<^bold>\<and>\<circle><\<^bold>\<not>B|A\<^bold>\<or>B>)\<rfloor>" and
 PP1: "\<lfloor>\<^bold>\<not>\<circle><\<^bold>\<not>Aplus|A\<^bold>\<or>Aplus>\<rfloor>" and
 PP2: "\<lfloor>(\<^bold>\<not>\<circle><\<^bold>\<not>B|Aplus\<^bold>\<or>B> \<^bold>\<and> \<circle><\<^bold>\<not>Aplus|Aplus\<^bold>\<or>B>)\<rfloor>" 



theorem T0:
  assumes transitivity  
  shows True
  oops  


theorem T1:
  shows True
  oops


theorem T2:
  assumes reflexivity and Ferrers
  shows False
  by (metis PP0 PP1 PP2 assms(1) assms(2))
  

theorem T3:
  assumes loopfree
  shows True
  oops


theorem T4:
    assumes
      transitivity and
      OnlyOnes: "\<forall>y. y=i1 \<or> y=i2 \<or> y=i3 \<or> y=i4 \<or> y= i5 \<or> y= i6 \<or> y= i7"
    shows False
    using assfactor_def PP0 PP1 PP2 assms 
  oops

theorem T5:
    assumes
      Quasitransit and
      OnlyOnes: "\<forall>y. y=i1 \<or> y=i2 \<or> y=i3 \<or> y=i4 \<or> y= i5 \<or> y= i6 \<or> y=i7"
    shows False
  using assfactor_def PP0 PP1 PP2 assms
  oops


abbreviation "infinity \<equiv> \<exists>M. (\<exists>z::i. \<not>(M z) \<and> (\<exists>G. (\<forall>y::i. (\<exists>x. (M x) \<and> (G x) = y))))"



lemma 
  assumes transitivity
  shows   infinity
  oops

lemma 
  assumes Quasitransit 
  shows   infinity
   oops


theorem T0':
  assumes transitivity and totality  
  shows False
  by (metis PP0 PP1 PP2 assms(1) assms(2)) 

end
