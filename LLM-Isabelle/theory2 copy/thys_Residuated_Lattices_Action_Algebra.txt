theory Action_Algebra
imports "../Residuated_Lattices/Residuated_Lattices" Kleene_Algebra.Kleene_Algebra
begin



class action_algebra = residuated_sup_lgroupoid + dioid_one_zero + star_op +
  assumes star_rtc1: "1 + x\<^sup>\<star> \<cdot> x\<^sup>\<star> + x \<le> x\<^sup>\<star>"
  and star_rtc2: "1 + y \<cdot> y + x \<le> y \<Longrightarrow> x\<^sup>\<star> \<le> y"
begin

lemma plus_sup: "(+) = (\<squnion>)"
  by (rule ext)+ (simp add: local.join.sup_unique)


lemma residual_r_refl: "1 \<le> x \<rightarrow> x"
  by (simp add: local.resrI)

lemma residual_l_refl: "1 \<le> x \<leftarrow> x"
  by (simp add: local.reslI)



lemma residual_l_pure_induction: "(x \<leftarrow> x)\<^sup>\<star> \<le> x \<leftarrow> x"
proof -
  have "1 + (x \<leftarrow> x) \<cdot> (x \<leftarrow> x) + (x \<leftarrow> x) \<le> (x \<leftarrow> x)"
    using local.resl_antitoner local.resl_galois mult_assoc by auto
  thus ?thesis
    by (fact star_rtc2)
qed

lemma residual_r_pure_induction: "(x \<rightarrow> x)\<^sup>\<star> \<le> x \<rightarrow> x"
proof -
  have "1 + (x \<rightarrow> x) \<cdot> (x \<rightarrow> x) + (x \<rightarrow> x) \<le> (x \<rightarrow> x)"
    using local.resr_antitonel local.resr_galois mult_assoc apply clarsimp
    by (metis local.mult_oner residual_r_refl)
  thus ?thesis
    by (fact star_rtc2)
qed


lemma star_unfoldl: "1 + x \<cdot> x\<^sup>\<star> \<le> x\<^sup>\<star>"
proof -
  have "x \<cdot> x\<^sup>\<star> \<le> x\<^sup>\<star>"
    by (meson local.dual_order.trans local.join.le_sup_iff local.mult_isor local.star_rtc1)
  thus ?thesis
    using local.star_rtc1 by auto
qed

lemma star_mon [intro]: "x \<le> y \<Longrightarrow> x\<^sup>\<star> \<le> y\<^sup>\<star>"
proof -
  assume "x \<le> y"
  hence "x \<le> y\<^sup>\<star>"
    by (meson local.dual_order.trans local.join.le_supE local.star_rtc1)
  hence "1 + x + y\<^sup>\<star> \<cdot> y\<^sup>\<star> \<le> y\<^sup>\<star>"
    using local.star_rtc1 by auto
  thus "x\<^sup>\<star> \<le> y\<^sup>\<star>"
    by (simp add: local.star_rtc2)
qed

lemma star_subdist': "x\<^sup>\<star> \<le> (x + y)\<^sup>\<star>"
  by force

lemma star_inductl: "z + x \<cdot> y \<le> y \<Longrightarrow> x\<^sup>\<star> \<cdot> z \<le> y"
proof -
  assume hyp: "z + x \<cdot> y \<le> y"
  hence "x \<le> y \<leftarrow> y"
    by (simp add: local.resl_galois)
  hence "x\<^sup>\<star> \<le> (y \<leftarrow> y)\<^sup>\<star>"
    by (fact star_mon)
  hence "x\<^sup>\<star> \<le> y \<leftarrow> y"
    using local.order_trans residual_l_pure_induction by blast
  hence "x\<^sup>\<star> \<cdot> y \<le> y"
    by (simp add: local.resl_galois)
  thus "x\<^sup>\<star> \<cdot> z \<le> y"
    by (meson hyp local.dual_order.trans local.join.le_supE local.mult_isol)
qed

lemma star_inductr: "z + y \<cdot> x \<le> y \<Longrightarrow> z \<cdot> x\<^sup>\<star> \<le> y"
proof -
  assume hyp: "z + y \<cdot> x \<le> y"
  hence "x \<le> y \<rightarrow> y"
    by (simp add: resr_galois)
  hence "x\<^sup>\<star> \<le> (y \<rightarrow> y)\<^sup>\<star>"
    by (fact star_mon)
  hence "x\<^sup>\<star> \<le> y \<rightarrow> y"
    by (metis order_trans residual_r_pure_induction)
  hence "y \<cdot> x\<^sup>\<star> \<le> y"
    by (simp add: local.resr_galois)
  thus "z \<cdot> x\<^sup>\<star> \<le> y"
    by (meson hyp local.join.le_supE local.order_trans local.resl_galois)
qed

subclass kleene_algebra
proof
  fix x y z
  show "1 + x \<cdot> x\<^sup>\<star> \<le> x\<^sup>\<star>"
    using local.star_unfoldl by blast
  show "z + x \<cdot> y \<le> y \<Longrightarrow> x\<^sup>\<star> \<cdot> z \<le> y"
    by (simp add: local.star_inductl)    
  show "z + y \<cdot> x \<le> y \<Longrightarrow> z \<cdot> x\<^sup>\<star> \<le> y"
    by (simp add: star_inductr)
qed
    




class equational_action_algebra = residuated_sup_lgroupoid + dioid_one_zero + star_op +
  assumes star_ax: "1 + x\<^sup>\<star> \<cdot> x\<^sup>\<star> + x \<le> x\<^sup>\<star>"
  and star_subdist: "x\<^sup>\<star> \<le> (x + y)\<^sup>\<star>"
  and right_pure_induction: "(x \<rightarrow> x)\<^sup>\<star> \<le> x \<rightarrow> x"
begin


lemma star_rtc_2: "1 + y \<cdot> y + x \<le> y \<Longrightarrow> x\<^sup>\<star> \<le> y"
proof -
  assume "1 + y \<cdot> y + x \<le> y"
  hence "1 \<le> y" and "x \<le> y" and "y \<cdot> y \<le> y"
    by auto
  hence "y \<le> y \<rightarrow> y" and "x \<le> y \<rightarrow> y"
    using local.order_trans by blast+
  hence "x\<^sup>\<star> \<le> (y \<rightarrow> y)\<^sup>\<star>"
    by (metis local.join.sup.absorb2 local.star_subdist)
  hence "x\<^sup>\<star> \<le> y \<rightarrow> y"
    by (metis order_trans right_pure_induction)
  hence "y \<cdot> x\<^sup>\<star> \<le> y"
    by (simp add: local.resr_galois)
  thus "x\<^sup>\<star> \<le> y"
qed

subclass action_algebra
  by (unfold_locales, metis star_ax, metis star_rtc_2)



sublocale action_algebra \<subseteq> equational_action_algebra
  by (unfold_locales, metis star_rtc1, metis star_subdist, metis residual_r_pure_induction)



class action_algebra_var = residuated_sup_lgroupoid + dioid_one_zero + star_op +
  assumes star_unfold': "1 + x \<cdot> x\<^sup>\<star> \<le> x\<^sup>\<star>"
  and star_inductl': "z + x \<cdot> y \<le> y \<Longrightarrow> x\<^sup>\<star> \<cdot> z \<le> y"
  and star_inductr': "z + y \<cdot> x \<le> y \<Longrightarrow> z \<cdot> x\<^sup>\<star>  \<le> y"
begin

subclass kleene_algebra
  by (unfold_locales, metis star_unfold', metis star_inductl', metis star_inductr')

subclass action_algebra
  by (unfold_locales, metis add.commute less_eq_def order_refl star_ext star_plus_one star_trans_eq, metis add.assoc add.commute star_rtc_least)

end

sublocale action_algebra \<subseteq> action_algebra_var
  by (unfold_locales, metis star_unfoldl, metis star_inductl, metis star_inductr)

end
