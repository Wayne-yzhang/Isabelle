theory Correct

imports "CRYSTALS-Kyber.Crypto_Scheme" 
    Delta_Correct
    MLWE

begin
unbundle %invisible lifting_syntax
no_adhoc_overloading %invisible Monad_Syntax.bind bind_pmf
declare %invisible [[names_short]]


the output of the Kyber algorithms for a given input. To completely model the Kyber algorithms, 
we need to model the random choice of the input as well. This results in probabilistic programs
that first choose the input according the the input distributions and then calculate the output.
probability mass functions of the output.\<close>
subsection \<open>Definition of Probabilistic Kyber and $\delta$\<close>
text \<open>The correctness of Kyber is formulated in a locale that defines the necessary assumptions 
on the parameter set. For the correctness analysis we need to import the definitions of
the probability distribution $\beta_\eta$ from the module-LWE and the Kyber locale itself.
Moreover, we fix the compression depths for the outputs $t$, $u$ and $v$.\<close>
text \<open>We define types for the private and public keys, as well as plain and cipher texts.
The public key consists of a matrix $A \in R_q^{k\times k}$ and a (compressed) vector $t\in R_q^k$.
The private key is the secret vector $s \in R_q$ such that there is an error vector $e\in R_q^k$ 
such that $A\cdot s + e = t$.
The plaintext consists of a bitstring (ie.\ a list of booleans).
The ciphertext is an element of $R_q^{k+1}$represented by a vector $u$ in $R_q^k$ and a value
$v \in R_q$ (both compressed).\<close>
text \<open>Some finiteness properties.\<close>
text \<open>The probabilistic program for key generation and encryption. The decryption does not need
a probabilistic program, since there is no random choice involved.\<close>
text \<open>We need to give back the error term as part of the secret key since otherwise 
we lose this information and cannot recalculate it.
This is needed in the proof of correctness. Since the $\delta$ was modified for the originally 
claimed one, this could be improved.\<close>
text \<open>The message space is \<open>Msgs\<close>. It is finite and non-empty.\<close>
text \<open>Now we can instantiate the public key encryption scheme correctness locale with the 
probabilistic algorithms of Kyber. This hands us the definition of $\delta$-correctness.\<close>
text \<open>The following functions return the distribution of the compression error (for vectors and 
polynomials).\<close>
text \<open>The functions \<open>w_distrib'\<close>, \<open>w_distrib\<close> and \<open>w_dist\<close> define the originally claimed $\delta$ 
(here \<open>delta_kyber\<close>) for the correctness of Kyber. 
However, the \<open>delta\<close>-correctness of Kyber could not be formalized. 
The reason is that the values of \<open>ct\<close>, \<open>cu\<close> and \<open>cv\<close> in \<open>w_distrib'\<close> rely on the compression error 
The \<open>delta_kyber\<close> with additional module-LWE errors are calculated in \<open>delta\<close>.
Therefore, we modified the given $\delta$ and defined a new value \<open>delta'\<close> in order to prove at 
least \<open>delta'\<close>-correctness.\<close>
text \<open>The functions \<open>w_kyber'\<close>, \<open>w_kyber\<close>, \<open>delta'\<close> and \<open>delta_kyber'\<close> define the modified $\delta$ 
for the correctness proof. Note the in \<open>w_kyber'\<close>, the values \<open>t\<close>, \<open>yu\<close> and \<open>yv\<close> are generated 
\<open>delta'\<close> is still dependent on the public and secret keys and the message.
This dependency is eliminated in \<open>delta_kyber'\<close> by taking the expectation over the key pair and 
The bound we use is \<open>delta'\<close>.\<close>
    have m: "set ((coeffs \<circ> of_qr) m) \<subseteq> {0, 1}" using \<open>m\<in>Msgs\<close> unfolding Msgs_def by simp
    ind1_def ind2_def \<open>e=snd sk\<close>[symmetric] \<open>s=fst sk\<close>[symmetric]
text \<open>Now take the maximum over all messages. We rewrite this in order to be able to instantiate 
it nicely.\<close>
text \<open>Finally show the overall bound \<open>delta_kyber'\<close> for the correctness error of the Kyber PKE.\<close>
text \<open>This yields the overall \<open>delta_kyber'\<close>-correctness of Kyber.\<close>
