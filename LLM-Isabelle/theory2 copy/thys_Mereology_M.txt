theory M
  imports PM
begin


locale M = PM +
  assumes part_antisymmetry: "P x y \<Longrightarrow> P y x \<Longrightarrow> x = y"
  assumes nip_eq: "PP x y \<longleftrightarrow> P x y \<and> x \<noteq> y"
begin


lemma proper_implies_part: "PP x y \<Longrightarrow> P x y"
proof -
  assume "PP x y"
  with nip_eq have "P x y \<and> x \<noteq> y"..
  thus "P x y"..
qed

lemma proper_implies_distinct: "PP x y \<Longrightarrow> x \<noteq> y"
proof -
  assume "PP x y"
  with nip_eq have "P x y \<and> x \<noteq> y"..
  thus "x \<noteq> y"..
qed

lemma proper_implies_not_part: "PP x y \<Longrightarrow> \<not> P y x"
proof -
  assume "PP x y"
  hence "P x y" by (rule proper_implies_part)
  show "\<not> P y x"
  proof
    moreover assume "P y x"
    ultimately show "False"..
  qed
qed

lemma proper_part_asymmetry: "PP x y \<Longrightarrow> \<not> PP y x"
proof -
  assume "PP x y"
  hence "P x y" by (rule proper_implies_part)
  show "\<not> PP y x"
  proof
    assume "PP y x"
    hence "P y x" by (rule proper_implies_part)
  qed
qed

lemma proper_implies_overlap: "PP x y \<Longrightarrow> O x y"
proof -
  assume "PP x y"
  hence "P x y" by (rule proper_implies_part)
  thus "O x y" by (rule part_implies_overlap)
qed

end


