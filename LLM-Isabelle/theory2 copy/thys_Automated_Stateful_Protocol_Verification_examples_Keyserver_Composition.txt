theory Keyserver_Composition
  imports "../PSPSP"
begin

declare [[pspsp_timing]]


protocol_model_setup spm: kscomp
setup_protocol_checks spm kscomp_protocol kscomp_protocol_p1 kscomp_protocol_p2
compute_fixpoint kscomp_protocol kscomp_fixpoint
manual_protocol_security_proof ssp: kscomp
  for kscomp_protocol kscomp_fixpoint
  apply check_protocol_intro
  subgoal by (timeit code_simp)
  subgoal
    apply coverage_check_intro
    subgoal by (timeit code_simp)
    subgoal by (timeit code_simp)
    subgoal by (timeit code_simp)
    subgoal by (timeit normalization)
    subgoal by (timeit eval)
    subgoal by (timeit eval)
    subgoal by (timeit code_simp)
    subgoal by (timeit code_simp)
    subgoal by (timeit code_simp)
    subgoal by (timeit normalization)
    subgoal by (timeit eval)
    subgoal by (timeit eval)
    done
  subgoal by (timeit eval)
  subgoal by (timeit eval)
  subgoal
    apply (unfold spm.wellformed_fixpoint_def Let_def case_prod_unfold; intro conjI)
    subgoal by (timeit code_simp)
    subgoal by (timeit eval)
    done
  done


thm ssp.protocol_secure

thm kscomp_enum_consts.nchotomy
thm kscomp_sets.nchotomy
thm kscomp_fun.nchotomy
thm kscomp_atom.nchotomy
thm kscomp_arity.simps
thm kscomp_public.simps
thm kscomp_\<Gamma>.simps
thm kscomp_Ana.simps

thm kscomp_transaction_p1_outOfBand_def
thm kscomp_transaction_p1_oufOfBandD_def
thm kscomp_transaction_p1_updateKey_def
thm kscomp_transaction_p1_updateKeyServer_def
thm kscomp_transaction_p1_authAttack_def
thm kscomp_transaction_p2_passwordGenD_def
thm kscomp_transaction_p2_pubkeysGen_def
thm kscomp_transaction_p2_updateKeyPw_def
thm kscomp_transaction_p2_updateKeyServerPw_def
thm kscomp_transaction_p2_authAttack2_def
thm kscomp_protocol_def

thm kscomp_fixpoint_def

end
