theory Semantics imports Syntax begin







  by (induct n) simp_all

  by (induct t) (auto cong: map_cong)

  by (induct t) (auto cong: map_cong)

  by (induct p arbitrary: E s) (auto cong: map_cong)


  by (induct t) (auto cong: map_cong)

  by (induct m) simp_all

proof (induct p arbitrary: E n)
  case (Pre P ts)
    using Pre.prems max_list_concat by simp
    using max_list_in by blast
    by simp
  ultimately show ?case
    using upd_vars_tm by (metis list.map_cong semantics_fm.simps(2))
next
  case (Uni p)
    by (simp add: fun_upd_def)
  then show ?case
    using Uni by simp
qed (auto simp: max_list_append cong: map_cong)

end
