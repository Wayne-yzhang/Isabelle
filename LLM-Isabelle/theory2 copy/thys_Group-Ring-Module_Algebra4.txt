 chapter 4.  Ring theory
   section 1.  Definition of a ring and an ideal
   section 2.  Calculation of elements
   section 3.  ring homomorphisms
   section 4.  quotient rings
   section 5.  primary ideals, prime ideals
 **)
  "Agii A f = (\<lambda>x\<in>carrier A. f x)"   (** Ag_induced_isomorphism **)
lemma (in aGroup) agop_gop:"top (b_ag A) = pop A" (*agpop_gtop*)
lemma (in aGroup) agiop_giop:"iop (b_ag A) = mop A" (*agmop_giop*)
  ar_coset :: "['a, _ , 'a set] \<Rightarrow> 'a set" (** a_rcs **)
                                                          (* tOp \<rightarrow> pOp *)
 (* I is an index set, A is an abelian group, S: I \<rightarrow> carrier A \<rightarrow>
  carrier (prodag I B),   s i \<in> carrier A \<rightarrow> B i  *)
(** Note               f'
                 a\<Pi>\<^bsub>I\<^esub> A \<rightarrow> Ag_ind (a\<Pi>\<^bsub>I\<^esub> A) f
                     \     |
                      \    |
        PRoject I A j  \   | (PRoject I A j) o (f'\<inverse>\<^sup>1)
                        \  |
                          A j             , where f' = Agii (a\<Pi>\<^bsub>I\<^esub> A) f **)
(** Note               f'
                 a\<Pi>\<^bsub>I\<^esub> A \<rightarrow> Ag_ind (a\<Pi>\<^bsub>I\<^esub> A) f
                     \     |
                      \    |
        PRoject I A j  \   | PRojInd I A f j
                        \  |
                          A j              **)
(***  Note.
                                     f
                                  S' \<rightarrow> S
                                    \   |
                                 g' j\  | g j
                                      \ |
                                        A j

       ***)
(** sr is a subring without ring structure, Sr is a subring with Ring structure
     **)
 (** The author of this part is L. Chen, revised by H. Murao and Y.
     Santo  **)
lemma (in Ring) np_1:"a \<in> carrier R \<Longrightarrow> npow R a (Suc 0) = a"  (* Y. Santo*)
(********)(********)(********)(********)
(**
lemma (in Ring) nsumEqFunc_sub:
  "\<lbrakk>  \<And> i. f i \<in> carrier R; \<And> i. g i \<in> carrier R \<rbrakk>
        \<Longrightarrow> ( \<forall> i. i \<le> n \<longrightarrow> f i = g i) \<longrightarrow> (nsum0 R f n = nsum0 R g n)";
  apply (induct_tac "n")
  apply simp+
  done

lemma (in Ring) nsumEqFunc:
  "\<lbrakk> \<And> i. f i \<in> carrier R; \<And> i. g i \<in> carrier R;
     \<And> i. i \<le> n \<longrightarrow> f i = g i \<rbrakk> \<Longrightarrow>  nsum0 R f n = nsum0 R g n"
  apply (cut_tac nsumEqFunc_sub [of "f" "g" "n"])
  apply simp+
  done          nsumEqFunc \<longrightarrow> nsum_eq       **)
(********)(********)
  (*1*)
  (*1:done*)
(**
thm binomial_Suc_Suc
**)
  (* final part *)
 (* n=0 *)
 (* n=0 *)
 (* n>0 *)
(** case n **)
lemma Zr_pir:"ideal Zr I \<Longrightarrow> \<exists>n. Rxa Zr n = I" (** principal ideal ring *)
       frule ind_hom_rhom[of "A" "R" "f"], assumption+) (** extensional **)
done           (** A /\<^sub>r {0\<^sub>A}\<^sub> \<cong> A **)
 (* pj is projection homomorphism *)
(** n = 0 **)
(** n **)
     (** Note (ppa R P A) is used to prove prime_ideal_cont1,
         some element x of A such that x \<in> P j for (i \<noteq> j) and x \<notin> P i **)
(** n = 0 **)
(** n **)
(** n **)
(** n = 0 **)
(** n **)
(** n = 0 **)
(** n **)
(** n = 0 **)
 apply simp  (* n = 0 done *)
(** n **)
(* thm invim_of_ideal *)
       simp add:ideal_subset) (* thm npQring *)
  (* integral domain *)
  (** integral domain **)
 apply simp  (* case 0 *)
 (* case (Suc n) *)
(*
constdefs (structure R)
 field_cd::"_ \<Rightarrow> bool"
 "field_cd R  == \<forall>x\<in>(carrier R - {\<zero>}). \<exists>y\<in>carrier R.
                                                y \<cdot>\<^sub>r x = 1\<^sub>r" *)
(* field condition  *) (*
 rIf :: "_ \<Rightarrow> 'a  \<Rightarrow> 'a " *) (** rIf is ring_invf **) (*
*) (*
