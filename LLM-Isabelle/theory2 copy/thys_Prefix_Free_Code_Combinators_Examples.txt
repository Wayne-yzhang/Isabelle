theory Examples
  imports Prefix_Free_Code_Combinators
begin


notepad
  define example1 where "example1 = N\<^sub>e \<times>\<^sub>e N\<^sub>e"



  have "bit_count (example1 (0,1)) = 4"
    by (simp add:example1_def dependent_bit_count exp_golomb_bit_count_exact)


  hence "(0,1) \<in> dom example1"
    by (intro bit_count_finite_imp_dom, simp)

  define example2
    where "example2 = [0..<42] \<rightarrow>\<^sub>e Nb\<^sub>e 314"


  have "bit_count (example2 f) = 42*9" (is "?lhs = ?rhs")
    if a:"f \<in> {0..<42} \<rightarrow>\<^sub>E {0..<314}" for f
  proof -
    have "?lhs = (\<Sum>x\<leftarrow>[0..<42]. bit_count (Nb\<^sub>e 314 (f x)))"
      using a by (simp add:example2_def fun_bit_count PiE_def)
    also have "... = (\<Sum>x\<leftarrow>[0..<42]. ereal (floorlog 2 313))"
      using a Pi_def PiE_def bounded_nat_bit_count
      by (intro arg_cong[where f="sum_list"] map_cong, auto)
    also have "... = ?rhs"
      by (simp add: compute_floorlog sum_list_triv)
    finally show ?thesis by simp
  qed

  define example3
    where "example3 = N\<^sub>e \<Join>\<^sub>e (\<lambda>n. [0..<42] \<rightarrow>\<^sub>e Nb\<^sub>e n)"


end

end