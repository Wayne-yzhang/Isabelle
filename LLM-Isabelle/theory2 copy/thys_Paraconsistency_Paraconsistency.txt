The following Isabelle theory formalizes a specific paraconsistent many-valued logic.
\<close>
\<open>
The details about our logic are in our article in a special issue on logical approaches to
paraconsistency in the Journal of Applied Non-Classical Logics (Volume 15, Number 1, 2005).
\<close>
section \<open>Syntax and Semantics\<close>
subsection \<open>Syntax of Propositional Logic\<close>
\<open>
Only the primed operators return indeterminate truth values.
\<close>
subsection \<open>Semantics of Propositional Logic\<close>
\<open>
There is a countably infinite number of indeterminate truth values.
\<close>
subsection \<open>Validity and Consistency\<close>
\<open>
Validity gives the set of theorems and the logic has at least a theorem and a non-theorem.
\<close>
section \<open>Truth Tables\<close>
subsection \<open>String Functions\<close>
\<open>
The following functions support arbitrary unary and binary truth tables.
\<close>
subsection \<open>Main Truth Tables\<close>
\<open>
The omitted Cla (for Classic) is discussed later; Nab (for Nabla) is simply the negation of it.
\<close>
section \<open>Basic Theorems\<close>
subsection \<open>Selected Theorems and Non-Theorems\<close>
\<open>
Many of the following theorems and non-theorems use assumptions and meta-variables.
\<close>
subsection \<open>Key Equalities\<close>
\<open>
The key equalities are part of the motivation for the semantic clauses.
\<close>
section \<open>Further Non-Theorems\<close>
subsection \<open>Smaller Domains and Paraconsistency\<close>
\<open>
Validity is relativized to a set of indeterminate truth values (called a domain).
\<close>
  \<comment> \<open>by smt OK\<close>
subsection \<open>Example: Contraposition\<close>
\<open>
Contraposition is not valid.
\<close>
subsection \<open>More Than Four Truth Values Needed\<close>
\<open>
Cla3 is valid for two indeterminate truth values but not for three indeterminate truth values.
\<close>
section \<open>Further Meta-Theorems\<close>
subsection \<open>Fundamental Definitions and Lemmas\<close>
\<open>
The function props collects the set of propositional symbols occurring in a formula.
\<close>
subsection \<open>Only a Finite Number of Truth Values Needed\<close>
\<open>
Theorem valid_in_valid is a kind of the reverse of valid_valid_in (or its transfer variant).
\<close>
section \<open>Case Study\<close>
subsection \<open>Abbreviations\<close>
\<open>
Entailment takes a list of assumptions.
\<close>
subsection \<open>Results\<close>
\<open>
The paraconsistent logic is usable in contrast to classical logic.
\<close>
section \<open>Acknowledgements\<close>
\<open>
Thanks to the Isabelle developers for making a superb system and for always being willing to help.
\<close>
end \<comment> \<open>Paraconsistency file\<close>
