theory C_paper
  imports "../main/C_Main"
begin




definition [simplified]: "UINT_MAX \<equiv> (2 :: nat) ^ 32 - 1"


local
val scan_colon = C_Parse.$$$ ":" >> SOME
fun command cmd scan0 scan f =
  C_Annotation.command' cmd "" (K (scan0 -- (scan >> f)
                                      >> K C_Env.Never))
in
                         command ("INVARIANT", \<^here>) scan_colon C_Parse.term Invariant
                      #> command ("INV", \<^here>) scan_colon C_Parse.term Invariant)
end
\<close>
text\<open>Demonstrating the Effect of Annotation Command Context Navigation \<close>
C \<open>
int sum1(int a)
{
  while (a < 10)
        @ highlight */
    { a = a + 1; }
  return a;
}\<close>
C \<open>
int sum2(int a)
    ++@ highlight */
{
  while (a < 10)
    { a = a + 1; }
  return a;
}\<close>
/*@ \<simeq>setup \<open>fn stack_top => fn env =>




term SQRT_UINT_MAX






