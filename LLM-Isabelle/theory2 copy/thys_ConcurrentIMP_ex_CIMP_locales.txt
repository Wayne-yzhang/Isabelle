theory CIMP_locales
imports
 "../CIMP"
begin



locale P1
begin

definition com :: "(unit, string, unit, nat) com" where
  "com = \<lbrace>''A''\<rbrace> WHILE ((<) 0) DO \<lbrace>''B''\<rbrace> \<lfloor>\<lambda>s. s - 1\<rfloor> OD"

intern_com com_def

locset_definition "loop = {B}"

definition "assertion = atS False loop"

end


locale P2
begin


definition com :: "(unit, string, unit, nat) com" where
  "com = \<lbrace>''C''\<rbrace> WHILE ((<) 0) DO \<lbrace>''A''\<rbrace> \<lfloor>Suc\<rfloor> OD"

intern_com com_def
locset_definition "loop = {A}"
print_theorems

end


primrec coms :: "bool \<Rightarrow> (unit, string, unit, nat) com" where
  "coms False = P1.com"
| "coms True = P2.com"


end
