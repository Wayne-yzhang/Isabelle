In this theory we prove total correctness of Kruskal's minimum spanning tree algorithm.
We first establish that the algorithm terminates and constructs a spanning tree.
This is a constructive proof of the existence of a spanning tree; any spanning tree algorithm could be used for this.
We then conclude that a minimum spanning tree exists.
This is necessary to establish the invariant for the actual correctness proof, which shows that Kruskal's algorithm produces a minimum spanning tree.
\<close>
text \<open>
We first show two verification conditions which are used in both correctness proofs.
\<close>
text \<open>
The following result shows that Kruskal's algorithm terminates and constructs a spanning tree.
We cannot yet show that this is a minimum spanning tree.
\<close>
text \<open>
Because we have shown total correctness, we conclude that a spanning tree exists.
\<close>
text \<open>
This implies that a minimum spanning tree exists, which is used in the subsequent correctness proof.
\<close>
text \<open>
Kruskal's minimum spanning tree algorithm terminates and is correct.
This is the same algorithm that is used in the previous correctness proof, with the same precondition and variant, but with a different invariant and postcondition.
\<close>
