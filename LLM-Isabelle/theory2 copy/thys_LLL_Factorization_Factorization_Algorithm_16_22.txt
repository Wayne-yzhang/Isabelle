later in this theory.\<close>
subsection \<open>Previous lemmas obtained using local type definitions\<close>
subsection \<open>The modified version of Algorithm 16.22\<close>
text \<open>This is the critical inner loop.

  In the textbook there is a bug, namely that the filter
  is applied to $g'$ and not to the primitive part of $g'$. (Problems occur if the content
  of $g'$ is divisible by $p$.) We have fixed this problem in the obvious way.

  However, there also is a second problem,
  namely it is only guaranteed that $g'$ is divisible by $u$ modulo $p^l$. However, for soundness
  we need to know that then also the primitive part of $g'$ is divisible by $u$ modulo $p^l$. 
  This is not necessary true, e.g., if $g' = p^l$, then the primitive part is $1$ which is not
  divisible by $u$ modulo $p^l$. 
  It is open, whether such a large $g'$ can actually occur. Therefore, the current fix
  is to manually test whether the leading coefficient of $g'$ is strictly smaller than $p^l$.

  With these two modifications, Algorithm 16.22 will become sound as proven below.\<close>
  \<comment> \<open>optimization: check whether degree j' is possible\<close>
  \<comment> \<open>short vector computation\<close>
  \<comment> \<open>optimization: dynamically adjust the modulus\<close>
  \<comment> \<open>fix: forbid multiples of $p^l$ as short vector, unclear whether this is really required\<close>
  \<comment> \<open>slight deviation from textbook: we check divisibility instead of norm-inequality\<close>
    \<comment> \<open>fix: consider modular factors of ppg and not of g'\<close>
     \<comment> \<open>find suitable prime\<close>
     \<comment> \<open>compute finite field factorization\<close>
     \<comment> \<open>determine l and B\<close>
     \<comment> \<open>bound improved according to textbook, which uses $no = (n + 1) * (max-norm f)^2$\<close>
     \<comment> \<open>possible improvement: $B = sqrt (2 ^{5 * n * (n - 1)} * no ^ {2 * n - 1}$, cf. @{const LLL_factorization}\<close>
     \<comment> \<open>perform hensel lifting to lift factorization to mod $p^l$\<close>
     \<comment> \<open>reconstruct integer factors\<close>
subsection \<open>Soundness proof\<close>
subsubsection \<open>Starting the proof\<close>
text \<open>Key lemma to show that forbidding values of $p^l$ or larger suffices to find correct factors.\<close>
  have deg_f: "degree f > 0" using \<open>n \<equiv> degree f\<close> n0 by blast
subsubsection \<open>Inner loop\<close>
  from factor_f \<open>f dvd F\<close> have factor_F: "factor dvd F" by (rule dvd_trans)
        have jN': "j' < N" and jN: "j' \<le> N" using jn divides_degree[OF \<open>f dvd F\<close>] F0 by auto
  from \<open>?g1\<close> f0 have h0: "h \<noteq> 0" by auto
    from \<open>irreducible\<^sub>d h\<close> have irr_f: "irreducible\<^sub>d f" 
      using irr_f \<open>n \<equiv> degree f\<close> degh j'n
subsubsection \<open>Outer loop\<close>
    from p.coprime_lead_coeff_factor[OF \<open>prime p\<close> cop[unfolded f]]
  from p.coprime_lead_coeff_factor[OF \<open>prime p\<close> cop[unfolded f_h_factor]] 
subsubsection \<open>Final statement\<close>
