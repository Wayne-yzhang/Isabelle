    Based on the Jinja theory Compiler/Correctness2.thy by Tobias Nipkow
*)
(*<*)hide_const (open) Throw(*>*)
(*<*)by(simp add:before_def)(*>*)
(*<*)by(fastforce simp add:before_def at_def prefix_def drop_Suc drop_tl)(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)by(clarsimp simp add:at_def strict_prefix_def nth_via_drop)(*>*)
(*<*)by(drule sees_method_idemp) (simp add:before_def compMb\<^sub>2_def)(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)by(simp add:pcs_def)(*>*)
(*<*)by(auto simp add: pcs_def)(*>*)
(*<*)by(simp add:pcs_def)(*>*)
(*<*)using pcs_subset by fastforce(*>*)
(*<*)using pcs_subset by fastforce(*>*)
(*<*)using pcs_subset by fastforce(*>*)
(*<*)using pcs_subset by fastforce(*>*)
(*<*)by (induct xt\<^sub>0) (auto simp: matches_ex_entry_def)(*>*)
(*<*)by(auto simp:matches_ex_entry_def pcs_def)(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)by(induct xt\<^sub>1) simp_all(*>*)
(*<*)using match_ex_table_app[where ?xt = "[]"] by fastforce(*>*)
(*<*)by(simp add:matches_ex_entry_def)(*>*)
(*<*)by(auto simp add:beforex_def)(*>*)
(*<*)by(fastforce simp:beforex_def)(*>*)
(*<*)by(fastforce intro:beforex_mono)(*>*)
(*<*)(is "?Q \<Longrightarrow> ?P = (?P1 \<and> ?P2 \<and> ?P3)" is "?Q \<Longrightarrow> ?P = ?P123")
(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)by(auto elim: match_ex_table_SomeD2)(*>*)
(*<*)
(*>*)
(*<*)by blast(*>*)
(* --needs J1 and EConform; version for eval found in Equivalence *)
(*<*)
(*>*)
(*<*)
(*>*)
(*FIXME move! *)
(*<*)
(*>*)
