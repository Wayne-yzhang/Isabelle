theory ML_Unification_Hints
  imports
    ML_Generic_Data_Utils
    ML_Term_Index
    ML_Unifiers
    ML_Unification_Parsers
begin

We support a generalisation that
\<^enum> allows additional universal variables in premises
\<^enum> allows non-atomic left-hand sides for premises
\<^enum> allows arbitrary functions to perform the matching/unification of a hint with a disagreement pair.

General shape of a hint:
\<close>
ML_file\<open>unification_hints_base.ML\<close>
ML_file\<open>unification_hints.ML\<close>
ML_file\<open>term_index_unification_hints.ML\<close>
ML\<open>
  @{functor_instance struct_name = Standard_Unification_Hints
    and functor_name = Term_Index_Unification_Hints
\<close>
local_setup \<open>Standard_Unification_Hints.setup_attribute NONE\<close>
text\<open>Standard unification hints are accessible via @{attribute uhint}.\<close>
declare [[ucombine add = \<open>Standard_Unification_Combine.eunif_data
  (Standard_Unification_Hints.try_hints
  |> Unification_Combinator.norm_unifier
    (#norm_term Standard_Mixed_Unification.norms_first_higherp_first_comb_higher_unify)
  |> K)
  (Standard_Unification_Combine.default_metadata Standard_Unification_Hints.binding)\<close>]]
text\<open>Examples see @{dir "../Examples"}.\<close>
