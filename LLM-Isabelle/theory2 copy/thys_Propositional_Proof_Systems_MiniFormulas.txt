theory MiniFormulas
imports Formulas
begin

fun is_mini_formula where
"is_mini_formula (Atom _) = True" |
"is_mini_formula \<bottom> = True" |
"is_mini_formula (Imp F G) = (is_mini_formula F \<and> is_mini_formula G)" |
"is_mini_formula _ = False"



primrec to_mini_formula where
"to_mini_formula (Atom k) = Atom k" |
"to_mini_formula \<bottom> = \<bottom>" |
"to_mini_formula (Imp F G) = to_mini_formula F \<^bold>\<rightarrow> to_mini_formula G" |
"to_mini_formula (Not F) = to_mini_formula F \<^bold>\<rightarrow> \<bottom>" |
"to_mini_formula (And F G) = (to_mini_formula F \<^bold>\<rightarrow> (to_mini_formula G \<^bold>\<rightarrow> \<bottom>)) \<^bold>\<rightarrow> \<bottom>" |
"to_mini_formula (Or F G) = (to_mini_formula F \<^bold>\<rightarrow> \<bottom>) \<^bold>\<rightarrow> to_mini_formula G"

lemma to_mini_is_mini[simp,intro!]: "is_mini_formula (to_mini_formula F)"
  by(induction F; simp)
lemma mini_to_mini: "is_mini_formula F \<Longrightarrow> to_mini_formula F = F"
  by(induction F; simp)
corollary mini_mini[simp]: "to_mini_formula (to_mini_formula F) = to_mini_formula F"
  using mini_to_mini[OF to_mini_is_mini] .

lemma mini_formula_atoms: "atoms (to_mini_formula F) = atoms F"
 by(induction F; simp)

end
