theory IHOML_Examples
imports IHOML
begin
nitpick_params[user_axioms=true, show_all, expect=genuine, format = 3, atoms e = a b c d]
sledgehammer_params[verbose=true]

  
  

(i.e. an intensional term preceded by the \emph{extension-of} operator), otherwise it is \emph{non-relativized}.
Relativized terms are non-rigid and non-relativized terms are rigid. \<close>
subsubsection \<open>Considerations Regarding \<open>\<beta>\<eta>\<close>-redex  (p. 94)\<close>
text\<open>  \<open>\<beta>\<eta>\<close>-redex is valid for non-relativized (intensional or extensional) terms:  \<close>
text\<open>  \<open>\<beta>\<eta>\<close>-redex is valid for relativized terms as long as no modal operators occur inside the predicate abstract:  \<close>
text\<open>  \<open>\<beta>\<eta>\<close>-redex is non-valid for relativized terms when modal operators are present:  \<close>
lemma "\<lfloor>((\<lambda>\<alpha>. \<^bold>\<box>\<phi> \<alpha>) \<downharpoonleft>(\<tau>::\<up>\<zero>)) \<^bold>\<leftrightarrow> (\<^bold>\<box>\<phi> \<downharpoonleft>\<tau>)\<rfloor>" nitpick oops   \<comment> \<open>countersatisfiable\<close>
lemma "\<lfloor>((\<lambda>\<alpha>. \<^bold>\<diamond>\<phi> \<alpha>) \<downharpoonleft>(\<tau>::\<up>\<zero>)) \<^bold>\<leftrightarrow> (\<^bold>\<diamond>\<phi> \<downharpoonleft>\<tau>)\<rfloor>" nitpick oops   \<comment> \<open>countersatisfiable\<close>
text\<open>  Example 7.13, p. 96: \<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>nitpick finds same counterexample as book\<close>
text\<open>  with other types for @{term "P"}:  \<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
text\<open>  Example 7.14, p. 98: \<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
text\<open>  with other types for @{term "P"}:  \<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
text\<open>  Example 7.15, p. 99: \<close>
text\<open>  with other types for @{term "P"}:  \<close>
text\<open>  Example 7.16, p. 100: \<close>
  nitpick[card 't=2, card i=2] oops \<comment> \<open>counterexample with two worlds found\<close>
text\<open>  Example 7.17, p. 101: \<close>
  nitpick[card 't=2, card i=2] oops \<comment> \<open>countersatisfiable\<close>
subsubsection \<open>Exercises (p. 101)\<close>
text\<open>  For Exercises 7.1 and 7.2 see variations on Examples 7.13 and 7.14 above.  \<close>
text\<open>  Exercise 7.3:  \<close>    
text\<open>  Exercise 7.4:  \<close>  
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>    
text\<open>  For Exercise 7.5 see Example 7.17 above.  \<close>
text\<open> \bigbreak \<close>    
subsection \<open>Miscellaneous Matters (Chapter 9)\<close>
subsubsection \<open>Equality Axioms (Subsection 1.1)\<close>
text\<open>  Example 9.1:  \<close>
  by auto \<comment> \<open>using normal equality\<close>
  by auto \<comment> \<open>using Leibniz equality\<close>
  by simp  \<comment> \<open>using equality as defined for individual concepts\<close>
subsubsection \<open>Extensionality (Subsection 1.2)\<close>
text\<open>  In Fitting's book (p. 118), extensionality is assumed (globally) for extensional terms. While Fitting introduces 
the following extensionality principles as axioms, they are already implicitly valid in Isabelle/HOL:  \<close>    
subsubsection \<open>\emph{De Re} and \emph{De Dicto} (Subsection 2)\<close>
text\<open>  \emph{De re} is equivalent to \emph{de dicto} for non-relativized (extensional or intensional) terms:  \<close>
text\<open>  \emph{De re} is not equivalent to \emph{de dicto} for relativized terms:  \<close>    
  nitpick[card 't=2, card i=2] oops \<comment> \<open>countersatisfiable\<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
text\<open>  Proposition 9.6 - If we can prove one side of the equivalence, then we can prove the other (p. 120):  \<close>
text\<open> \bigbreak \<close>
text\<open>  We can prove local consequence: \<close>
  by force \<comment> \<open>for individuals\<close>
  by force \<comment> \<open>for predicates\<close>
text\<open>  And global consequence follows directly (since local consequence implies global consequence, as shown before): \<close>
  using AimpB by (rule localImpGlobalCons) \<comment> \<open>for individuals\<close>
  using AimpB_p by (rule localImpGlobalCons) \<comment> \<open>for predicates\<close>
subsubsection \<open>Rigidity (Subsection 3)\<close>
text\<open>  (Local) rigidity for intensional individuals:  \<close>    
text\<open>  (Local) rigidity for intensional predicates:  \<close>    
text\<open>  Proposition 9.8 - An intensional term is rigid if and only if the \emph{de re/de dicto} distinction vanishes.
Note that we can prove this theorem for local consequence (global consequence follows directly).  \<close>  
subsubsection \<open>Stability Conditions (Subsection 4)\<close>
 S5: "equivalence aRel" \<comment> \<open>using Sahlqvist correspondence for improved performance\<close>
text\<open>  Definition 9.10 - Stability conditions come in pairs:  \<close>
text\<open>  Proposition 9.10 - In an \emph{S5} modal logic both stability conditions are equivalent. \<close>
text\<open>  The last proposition holds for global consequence: \<close>  
text\<open>  But it does not hold for local consequence: \<close>      
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
  nitpick[card 't=1, card i=2] oops \<comment> \<open>countersatisfiable\<close>
text\<open>  Theorem 9.11 - A term is rigid if and only if it satisfies the stability conditions. Note that
 we can prove this theorem for local consequence (global consequence follows directly).  \<close>
text\<open>  \pagebreak \<close>
