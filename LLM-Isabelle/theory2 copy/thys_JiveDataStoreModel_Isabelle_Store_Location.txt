theory Location
imports AttributesIndep "../Isabelle/Value"
begin 




definition ltype:: "Location \<Rightarrow> Javatype" where
"ltype l = (case l of
              objLoc cf a  \<Rightarrow> rtype (att cf)
            | staticLoc f     \<Rightarrow> rtype f
            | arrLenLoc T a   \<Rightarrow> IntgT
            | arrLoc T a i \<Rightarrow> at2jt T)" 

lemma ltype_simps [simp]:
"ltype (objLoc cf a)  = rtype (att cf)"
"ltype (staticLoc f)     = rtype f"
"ltype (arrLenLoc T a)   = IntgT"
"ltype (arrLoc T a i) = at2jt T" 
  by (simp_all add: ltype_def)


definition isArrLenLoc:: "Location \<Rightarrow> bool" where
"isArrLenLoc l = (case l of
                 objLoc cf a  \<Rightarrow> False 
               | staticLoc f     \<Rightarrow> False
               | arrLenLoc T a   \<Rightarrow> True
               | arrLoc T a i \<Rightarrow> False)"

lemma isArrLenLoc_simps [simp]:
"isArrLenLoc (objLoc cf a) = False" 
"isArrLenLoc (staticLoc f) = False"
"isArrLenLoc (arrLenLoc T a) = True"
"isArrLenLoc (arrLoc T a i) = False"
  by (simp_all add: isArrLenLoc_def)

definition isStaticLoc:: "Location \<Rightarrow> bool" where
"isStaticLoc l = (case l of
                 objLoc cff a \<Rightarrow> False
               | staticLoc f     \<Rightarrow> True
               | arrLenLoc T a   \<Rightarrow> False
               | arrLoc T a i \<Rightarrow> False)"
lemma isStaticLoc_simps [simp]:
"isStaticLoc (objLoc cf a) = False"
"isStaticLoc (staticLoc f)     = True"
"isStaticLoc (arrLenLoc T a)   = False"
"isStaticLoc (arrLoc T a i) = False"
  by (simp_all add: isStaticLoc_def)

object or array containing the location that is passed
Note that for static locations
are not associated to any object.
\label{ref_def}
\<close>
text \<open>The function \<open>loc\<close> denotes the subscription of an object 
internally be mapped to \<open>arbitrary\<close>.
@{term "obj..x"} or \<open>loc obj x\<close> (without the syntactic sugar), 
array indexing {\tt a[i]} with @{term "a.[i]"} or \<open>arr_loc a i\<close>. 
{\tt C.f} can be expressed by the location itself \<open>staticLoc C'f\<close>.
function \<open>static\<close> which indicates whether a field is static or not and
