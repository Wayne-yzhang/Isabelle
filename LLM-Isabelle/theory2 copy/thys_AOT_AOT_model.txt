theory AOT_model
  imports Main "HOL-Cardinals.Cardinals"
begin

declare[[typedef_overloaded]]




typedecl \<o>




  by (simp add: surj_f_inv_f[OF d\<o>_surj] AOT_model_valid_in_def
                AOT_model_proposition_choice_def)



specification (AOT_model_concrete\<omega>)
  AOT_model_\<omega>_concrete_in_some_world:
  AOT_model_contingent_object:

class AOT_Term =

class AOT_IncompleteTerm = AOT_Term +

  using someI_ex[OF AOT_model_nondenoting_ex]
  unfolding AOT_model_nondenoting_def by blast

instantiation prod :: (AOT_Term, AOT_Term) AOT_Term
begin
instance proof
    by (simp add: AOT_model_denotes_prod_def AOT_model_denoting_ex)
qed
end

locale AOT_model_irregular_spec =
  assumes AOT_model_irregular_false:
  assumes AOT_model_irregular_equiv:
  assumes AOT_model_irregular_eqI:

class AOT_IndividualTerm = AOT_IncompleteTerm +
  assumes AOT_model_irregular_nondenoting:
  assumes AOT_model_term_equiv_part_equivp:
  assumes AOT_model_term_equiv_denotes:
  assumes AOT_model_term_equiv_regular:
  assumes AOT_model_irregular:

interpretation AOT_model_irregular_spec AOT_model_irregular AOT_model_regular
                                        AOT_model_term_equiv
  using AOT_model_irregular .

instantiation \<kappa> :: AOT_IndividualTerm
begin
instance proof
       (simp add: AOT_model_denotes_\<kappa>_def)
next
       (simp add: AOT_model_denotes_\<kappa>_def AOT_model_regular_\<kappa>_def)
next
  show "\<not>AOT_model_regular x \<Longrightarrow> \<not> AOT_model_denotes x" for x :: \<kappa>
    by (simp add: AOT_model_regular_\<kappa>_def)
next
    by (rule equivpI; rule reflpI exI sympI transpI)
       (simp_all add: AOT_model_term_equiv_\<kappa>_def)
next
  fix x y :: \<kappa>
    by (metis AOT_model_denotes_\<kappa>_def AOT_model_term_equiv_\<kappa>_def \<kappa>.exhaust_disc
              \<kappa>\<upsilon>.simps \<upsilon>.disc(1,3,5,6) is_\<alpha>\<kappa>_def is_\<omega>\<kappa>_def is_null\<kappa>_def)
next
  fix x y :: \<kappa>
    by (simp add: AOT_model_regular_\<kappa>_def)
next
  have "AOT_model_irregular_spec (\<lambda> \<phi> (x::\<kappa>) .  \<epsilon>\<^sub>\<o> w . False)
          AOT_model_regular AOT_model_term_equiv"
    by standard (auto simp: AOT_model_proposition_choice_simp)
    unfolding AOT_model_irregular_\<kappa>_def by (metis (no_types, lifting) someI_ex)
qed
end

setup_lifting type_definition_rel

