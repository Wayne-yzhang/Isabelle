theory KnightsTour
  imports Main
begin



type_synonym square = "int \<times> int"
type_synonym board = "square set"

definition board :: "nat \<Rightarrow> nat \<Rightarrow> board" where
  "board n m = {(i,j) |i j. 1 \<le> i \<and> i \<le> int n \<and> 1 \<le> j \<and> j \<le> int m}"

abbreviation "kp5x6ur \<equiv> the (to_path 
  [[3,10,29,20,5,12],
  [28,19,4,11,30,21],
  [9,2,17,24,13,6],
  [18,27,8,15,22,25],
  [1,16,23,26,7,14]])"
lemma kp_5x6_ur: "knights_path b5x6 kp5x6ur"
  by (simp only: knights_path_exec_simp) eval

lemma kp_5x6_ur_hd: "hd kp5x6ur = (1,1)" by eval

lemma kp_5x6_ur_last: "last kp5x6ur = (4,5)" by eval

lemma kp_5x6_ur_non_nil: "kp5x6ur \<noteq> []" by eval

abbreviation "b5x7 \<equiv> board 5 7"

lower-right.
  \begin{table}[H]
    \begin{tabular}{lllllll}
       3 & 12 & 21 & 30 &  5 & 14 & 23 \\
      20 & 29 &  4 & 13 & 22 & 31 &  6 \\
      11 &  2 & 19 & 32 &  7 & 24 & 15 \\
      28 & 33 & 10 & 17 & 26 & 35 &  8 \\
       1 & 18 & 27 & 34 &  9 & 16 & 25
    \end{tabular}
  \end{table}\<close>
text \<open>A Knight's path for the \<open>(5\<times>7)\<close>-board that starts in the lower-left and ends in the 
