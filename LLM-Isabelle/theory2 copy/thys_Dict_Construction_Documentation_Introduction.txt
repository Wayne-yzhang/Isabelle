theory Introduction
imports Main
begin






class plus =
  fixes plus :: "'a \<Rightarrow> 'a \<Rightarrow> 'a"


datatype 'a dict_plus =
  mk_plus (param_plus: "'a \<Rightarrow> 'a \<Rightarrow> 'a")


definition double :: "'a::plus \<Rightarrow> 'a" where
"double x = plus x x"

definition double' :: "'a dict_plus \<Rightarrow> 'a \<Rightarrow> 'a" where
"double' dict x = param_plus dict x x"




definition cert_plus :: "'a::plus dict_plus \<Rightarrow> bool" where
"cert_plus dict \<longleftrightarrow> (param_plus dict = plus)"


lemma "cert_plus dict \<Longrightarrow> double' dict = double"
unfolding cert_plus_def double'_def double_def
by auto




end