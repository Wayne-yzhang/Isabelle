theory Digits_int
  imports 
    Complex_Main
begin
 Integers (instead of the natural numbers) in different number systems.
lemma split_sum_first_elt_less: assumes "n<m" 
  shows "(\<Sum>i\<in>{n..<m}. f i) = f n + (\<Sum>i\<in>{Suc n ..<m}. f i)"
  using sum.atLeast_Suc_lessThan assms by blast

lemma split_sum_mid_less: assumes "i<(n::nat)"
  shows "(\<Sum>j<n. f j) = (\<Sum>j<i. f j) + (\<Sum>j=i..<n. f j)"
proof -
  have "(\<Sum>j<n. f j) = (\<Sum>j\<in>{..<i} \<union> {i..<n}. f j)"
  also have "\<dots> = (\<Sum>j<i. f j) + (\<Sum>j=i..<n. f j)"
    by (subst sum.union_disjoint) auto
  finally show "(\<Sum>j<n. f j) = (\<Sum>j<i. f j) + (\<Sum>j=i..<n. f j)" .
qed

to and from integers, we introduce the following locale.\<close>
text \<open>Conversion from basis base to integers: \<open>from_digits n d\<close>
  n:& \<open>nat\<close>& length of representation in basis base\\
  d:& \<open>nat \<Rightarrow> nat\<close>& function of digits in basis base where \<open>d i\<close> is the $i$-th digit in basis base\\
  output:& \<open>nat\<close>& natural number corresponding to $d(n-1) \dots d(0)$ as integer\\
