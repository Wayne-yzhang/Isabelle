theory Aligned
  imports
    "HOL-Library.Word"
    More_Word
    Bit_Shifts_Infix_Syntax
begin

context
  includes bit_operations_syntax
begin

  by simp

lemma is_aligned_iff_udvd:
  by transfer (simp flip: take_bit_eq_0_iff add: min_def)

lemma is_aligned_iff_take_bit_eq_0:
  by (simp add: is_aligned_iff_udvd take_bit_eq_0_iff exp_dvd_iff_exp_udvd)

lemma is_aligned_iff_dvd_int:
  by transfer simp

lemma is_aligned_iff_dvd_nat:
proof -
    by transfer simp
    by (simp only: dvd_nat_abs_iff) simp
  then show ?thesis
    by (simp add: is_aligned_iff_dvd_int)
qed

lemma is_aligned_0 [simp]:
  by transfer simp

lemma is_aligned_at_0 [simp]:
  by transfer simp

lemma is_aligned_beyond_length:
  using that
  apply (simp add: is_aligned_iff_udvd)
  apply transfer
  apply auto
  done

lemma is_alignedI [intro?]:
proof (unfold is_aligned_iff_udvd)
    using dvd_triv_left exp_dvd_iff_exp_udvd by blast
qed

lemma is_alignedE:
  case False
    by (simp add: is_aligned_beyond_length)
  with that [of 0] show thesis
    by simp
next
  case True
    by simp_all
    by transfer simp
    by (simp add: is_aligned_iff_udvd)
    by (simp add: *)
    (* (2 ^ k * q1 + q2) *)
  and     s10: "0 < s1" (* Probably can be folded into the proof \<dots> *)
