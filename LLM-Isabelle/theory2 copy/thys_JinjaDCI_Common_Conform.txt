    Based on the Jinja theory Common/Conform.thy by David von Oheimb and Tobias Nipkow
*)
(*<*)by (simp (no_asm) add: conf_def)(*>*)
(*<*)by (induct v) (auto simp: conf_def)(*>*)
(*<*)by (rule typeof_conf[OF typeof_lit_typeof])(*>*)
(*<*)by (cases T) (auto simp: conf_def)(*>*)
(*<*)by (rule val.induct) (auto simp:conf_def fun_upd_apply)(*>*)
(*<*)by (induct v) (auto intro: widen_trans simp: conf_def)(*>*)
(*<*)by (induct v) (auto dest: hext_objD simp: conf_def)(*>*)
(*<*)by(induct v) (auto simp: conf_def)(*>*)
(*<*)by (auto simp add: conf_def)(*>*)
(*<*)by (auto dest: conf_ClassD)(*>*)
(*<*)by(auto intro: list_all2_trans conf_widen)(*>*)
(*<*)by (simp add: list_all2_rev1)(*>*)
(*<*)
(*>*)
(*<*)by (erule list_all2_mono, erule conf_hext, assumption)(*>*)
(*<*)by (rule list_all2_Cons2)(*>*)
(*<*)by (fastforce elim:conf_hext simp: oconf_def)(*>*)
(*<*)
(*>*)
(*<*)by (auto dest: has_fields_fun simp add: oconf_def has_field_def fun_upd_apply)(*>*)
(*<*)
(*>*)
(*<*)by (fastforce elim:conf_hext simp:soconf_def)(*>*)
(*<*)
(*>*)
(*<*)by (auto dest: has_fields_fun simp add: fun_upd_apply soconf_def has_field_def)(*>*)
(*<*)
(*>*)
(*<*)by (unfold hconf_def) fast(*>*)
(*<*)by (unfold hconf_def) (auto intro: oconf_new preallocated_new)(*>*)
(*<*)by (unfold hconf_def) (auto intro: oconf_upd_obj preallocated_upd_obj)(*>*)
(*<*)by (unfold shconf_def) fast(*>*)
(*<*)by (unfold shconf_def) (auto intro: soconf_upd_obj preallocated_upd_obj)(*>*)
(*<*)by (unfold shconf_def) (auto intro: soconf_new preallocated_new)(*>*)
(*<*)by (unfold shconf_def) (auto intro: soconf_upd_obj preallocated_upd_obj)(*>*)
(*<*)by (unfold lconf_def) (fast elim: conf_hext)(*>*)
(*<*)by (unfold lconf_def) auto(*>*)
(*<*)by(simp add:lconf_def)(*>*)
(*<*)by(simp add:lconf_def)(*>*)
