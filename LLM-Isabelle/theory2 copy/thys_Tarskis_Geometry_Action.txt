theory Action
  imports "HOL-Algebra.Group"
begin

locale action = group +
  fixes act :: "'b \<Rightarrow> 'a \<Rightarrow> 'b" (infixl "<o" 69)
  assumes id_act [simp]: "b <o \<one> = b"
  and act_act':
  "g \<in> carrier G \<and> h \<in> carrier G \<longrightarrow> (b <o g) <o h = b <o (g \<otimes> h)"
begin

lemma act_act:
  assumes "g \<in> carrier G" and "h \<in> carrier G"
  shows "(b <o g) <o h = b <o (g \<otimes> h)"
proof -
  show "(b <o g) <o h = b <o (g \<otimes> h)" by simp
qed

lemma act_act_inv [simp]:
  assumes "g \<in> carrier G"
  shows "b <o g <o inv g = b"
proof -
qed

lemma act_inv_act [simp]:
  assumes "g \<in> carrier G"
  shows "b <o inv g <o g = b"
  by simp

lemma act_inv_iff:
  assumes "g \<in> carrier G"
  shows "b <o inv g = c \<longleftrightarrow> b = c <o g"
proof
  assume "b <o inv g = c"
  hence "b <o inv g <o g = c <o g" by simp
next
  assume "b = c <o g"
  hence "b <o inv g = c <o g <o inv g" by simp
qed

end

end
