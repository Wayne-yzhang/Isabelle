theory ListInf
imports List2 "../CommonSet/InfiniteSet2"
begin





type_synonym 'a ilist = "nat \<Rightarrow> 'a"

definition i_append :: "'a list \<Rightarrow> 'a ilist \<Rightarrow> 'a ilist" (infixr "\<frown>" 65)
  where "xs \<frown> f \<equiv> \<lambda>n. if n < length xs then xs ! n else f (n - length xs)"

