theory Bit_Shifts_Infix_Syntax
  imports "HOL-Library.Word" More_Word
begin

context semiring_bit_operations
begin


lemma bit_shiftl_iff [bit_simps]:
  by (simp add: shiftl_def bit_simps)


lemma bit_shiftr_eq [bit_simps]:
  by (simp add: shiftr_def bit_simps)

end


lemma bit_sshiftr_iff [bit_simps]:
  by (simp add: sshiftr_def bit_simps)

context
  includes lifting_syntax
begin

lemma shiftl_word_transfer [transfer_rule]:
  apply (unfold shiftl_def)
  apply transfer_prover
  done

lemma shiftr_word_transfer [transfer_rule]:
proof -
    by (unfold shiftr_def) transfer_prover
  then show ?thesis
    by simp
qed

lemma sshiftr_transfer [transfer_rule]:
proof -
    by (unfold sshiftr_def) transfer_prover
  then show ?thesis
    by simp
qed

end

context semiring_bit_operations
begin

lemma shiftl_0 [simp]:
  by (simp add: shiftl_def)

lemma shiftl_of_0 [simp]:
  by (simp add: shiftl_def)

lemma shiftl_of_Suc [simp]:
  by (simp add: shiftl_def)

lemma shiftl_1 [simp]:
  by (simp add: shiftl_def)

lemma shiftl_numeral_Suc [simp]:
  by (fact shiftl_def)

lemma shiftl_numeral_numeral [simp]:
  by (fact shiftl_def)

lemma shiftr_0 [simp]:
  by (simp add: shiftr_def)

lemma shiftr_of_0 [simp]:
  by (simp add: shiftr_def)

lemma shiftr_1 [simp]:
  by (simp add: shiftr_def)

lemma shiftr_numeral_Suc [simp]:
  by (fact shiftr_def)

lemma shiftr_numeral_numeral [simp]:
  by (fact shiftr_def)

lemma shiftl_eq_mult:
  unfolding shiftl_def by (fact push_bit_eq_mult)

lemma shiftr_eq_div:
  unfolding shiftr_def by (fact drop_bit_eq_div)

end

context ring_bit_operations
begin

context
  includes bit_operations_syntax
begin

lemma shiftl_minus_1_numeral [simp]:
  by (simp add: shiftl_def)

end

end

lemma shiftl_Suc_0 [simp]:
  by (simp add: shiftl_def)

lemma shiftr_Suc_0 [simp]:
  by (simp add: shiftr_def)

lemma sshiftr_numeral_Suc [simp]:
  by (fact sshiftr_def)

lemma sshiftr_numeral_numeral [simp]:
  by (fact sshiftr_def)

context ring_bit_operations
begin

lemma shiftl_minus_numeral_Suc [simp]:
  by (fact shiftl_def)

lemma shiftl_minus_numeral_numeral [simp]:
  by (fact shiftl_def)

lemma shiftr_minus_numeral_Suc [simp]:
  by (fact shiftr_def)

lemma shiftr_minus_numeral_numeral [simp]:
  by (fact shiftr_def)

end

lemma sshiftr_0 [simp]:
  by (simp add: sshiftr_def)

lemma sshiftr_of_0 [simp]:
  by (simp add: sshiftr_def)

lemma sshiftr_1 [simp]:
  by (simp add: sshiftr_def)

lemma sshiftr_minus_numeral_Suc [simp]:
  by (fact sshiftr_def)

lemma sshiftr_minus_numeral_numeral [simp]:
  by (fact sshiftr_def)

end
