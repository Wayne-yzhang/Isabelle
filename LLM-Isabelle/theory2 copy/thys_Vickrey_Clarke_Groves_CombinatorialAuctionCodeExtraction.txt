theory CombinatorialAuctionCodeExtraction

imports
CombinatorialAuction

"HOL-Library.Code_Target_Nat" 
"HOL-Library.Code_Target_Int"

begin

definition "allocationPrettyPrint a = 
   {map (%x. (x, sorted_list_of_set(a,,x))) ((sorted_list_of_set \<circ> Domain) a)}"


abbreviation "singleBidConverter x == ((fst x, set ((fst o snd) x)), (snd o snd) x)"
definition "Bid2funcBid b = set (map singleBidConverter b) Elsee (0::integer)"

definition "participantsSet b = fst ` (set b)"

definition "goodsList b = sorted_list_of_set (Union ((set o fst o snd) `(set b)))"

definition "payments b r n (a::allocation) = 
            vcgpAlg ((participantsSet b)) (goodsList b) (Bid2funcBid b) r n (a::allocation)"

export_code vcgaAlg payments allocationPrettyPrint in Scala module_name VCG 

end



