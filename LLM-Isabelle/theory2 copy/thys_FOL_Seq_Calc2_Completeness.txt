theory Completeness
  imports Countermodel EPathHintikka
begin


theorem epath_prover_completeness:
proof -
      unfolding secavProver_def using wf_mkTree fair_rules by simp
      by (metis UNIV_I fair_rules ipath.cases ipath_mkTree_Saturated mkTree.simps(1) prod.sel(1)
          wf_ipath_epath wf_mkTree)
    then have ?B by blast
  }
  then show ?thesis by blast
qed

abbreviation

lemma epath_countermodel:
proof
    using assms escape_path_Hintikka assms by simp
    using assms shd_sset by (metis Pair_inject prod.collapse pseq_def pseq_in_tree_fms)
    using calculation(2) Hintikka_counter_model assms by blast
    using is_env_E is_fdenot_F by blast+
  ultimately show False
    by blast
qed

theorem prover_completeness_usemantics:
  using assms epath_prover_completeness epath_countermodel by blast

corollary prover_completeness_SeCaV:
proof -
    using assms sound_usemantics by blast
  then show ?thesis
    using assms prover_completeness_usemantics by blast
qed

end
