theory Natural_Deduction
imports
  Abstract_Completeness.Abstract_Completeness
  Abstract_Rules
  Entailment
begin



datatype 'rule NatRule = Axiom | NatRule 'rule | Cut


the bookkeeping logic for assumptions, the @{term Axiom} rule and the @{term Cut} rule.\<close>
  text \<open>
  \<^item> An application of the @{term Axiom} rule is valid if the conclusion is among the assumptions.
  \<^item> An application of a @{term NatRule} is more complicated. This requires some natural number
     \<^item> none of the local variables occur in the context of the judgement.
     \<^item> none of the local variables occur in the instantiation.
    Together, this implements the usual freshness side-conditions.
    Furthermore, for every antecedent of the rule, the (correctly renamed and instantiated)
    hypotheses need to be added to the context.
  \<^item> The @{term Cut} rule is again easy.
  \<close>
text \<open>Now we instantiate the above locale. We duplicate each abstract rule (which can have multiple
consequents) for each consequent, as the natural deduction formulation can only handle a single
consequent per rule\<close>
  text \<open>A task is solved if for every conclusion, there is a well-formed and finite tree that proves
  this conclusion, using only assumptions given in the task.\<close>
