theory 
  IPv4
  imports 
    NetworkCore
begin

type_synonym 
  ipv4_ip = "(int \<times> int \<times> int \<times> int)" 

type_synonym 
  port    =  "int"

type_synonym 
  ipv4    =  "(ipv4_ip \<times> port)"

overloading src_port_ipv4 \<equiv> "src_port :: ('\<alpha>::adr,'\<beta>) packet \<Rightarrow> '\<gamma>::port" 
begin 
definition 
  "src_port_ipv4 (x::(ipv4,'\<beta>) packet) \<equiv> (snd o fst o snd) x"
end 

overloading dest_port_ipv4 \<equiv> "dest_port :: ('\<alpha>::adr,'\<beta>) packet \<Rightarrow> '\<gamma>::port"
begin
definition 
  "dest_port_ipv4  (x::(ipv4,'\<beta>) packet) \<equiv> (snd o fst o snd o snd) x"
end 

overloading subnet_of_ipv4 \<equiv> "subnet_of :: '\<alpha>::adr \<Rightarrow> '\<alpha> net"
begin 
definition
  "subnet_of_ipv4 (x::ipv4) \<equiv> {{(a,b::int). a =  fst x}}" 
end

definition subnet_of_ip :: "ipv4_ip \<Rightarrow> ipv4 net"
  where "subnet_of_ip ip = {{(a,b). (a = ip)}}"

lemma src_port: "src_port (a,(x::ipv4),d,e) = snd x"
  by (simp add: src_port_ipv4_def in_subnet)

lemma dest_port: "dest_port (a,d,(x::ipv4),e) = snd x"
  by (simp add: dest_port_ipv4_def in_subnet)


lemmas IPv4Lemmas = src_port dest_port src_port_ipv4_def dest_port_ipv4_def

end
