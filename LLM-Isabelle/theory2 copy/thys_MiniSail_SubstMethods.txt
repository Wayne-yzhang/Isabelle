theory SubstMethods
  imports  IVSubst WellformedL "HOL-Eisbach.Eisbach_Tools" 
begin


method fresh_subst_mth_aux uses add = (
    )

method fresh_mth uses add = (
    (unfold fresh_prodN, intro conjI)?,
    (fresh_subst_mth_aux add: add)+)


notepad
begin
  fix \<Gamma>::\<Gamma> and z::x and x::x and v::v and \<Theta>::\<Theta> and v'::v and w::x and tyid::string and dc::string and b::b and ce::ce and bv::bv

  assume as:"atom z \<sharp> (\<Gamma>,v',\<Theta>, v,w,ce) \<and> atom bv \<sharp>  (\<Gamma>,v',\<Theta>, v,w,ce,b) "

  have "atom z \<sharp> \<Gamma>[x::=v]\<^sub>\<Gamma>\<^sub>v" 
    by (fresh_mth add: as)

  hence "atom z \<sharp> v'[x::=v]\<^sub>v\<^sub>v" 
    by (fresh_mth add: as)

  hence "atom z \<sharp> \<Gamma>" 
    by (fresh_mth add: as)

  hence "atom z \<sharp> \<Theta>" 
    by (fresh_mth add: as)

  hence "atom z \<sharp>  (CE_val v == ce)[x::=v]\<^sub>c\<^sub>v"
    using as by auto

  hence "atom bv \<sharp>  (CE_val v == ce)[x::=v]\<^sub>c\<^sub>v"
    using as by auto

  have "atom z \<sharp> (\<Theta>,\<Gamma>[x::=v]\<^sub>\<Gamma>\<^sub>v,v'[x::=v]\<^sub>v\<^sub>v,w, V_pair v v, V_consp tyid dc b v, (CE_val v == ce)[x::=v]\<^sub>c\<^sub>v) " 
    by (fresh_mth add: as)

  have "atom bv \<sharp> (\<Theta>,\<Gamma>[x::=v]\<^sub>\<Gamma>\<^sub>v,v'[x::=v]\<^sub>v\<^sub>v,w, V_pair v v, V_consp tyid dc b v) " 
    by (fresh_mth add: as)

end




end