theory ERF_Perfect_Field_Factorization

imports ERF_Library

begin
lemma fac_set_prime[simp]: "prime x" if "x\<in>fac_set"
  using fac_set_def that by blast

lemma P1_prime[simp]: "prime x" if "x\<in>P1" 
  using P1_def fac_set_prime that by blast

lemma P2_prime[simp]: "prime x" if "x\<in>P2" 
  using P2_def fac_set_prime that by blast

lemma fac_set_monic[simp]: "monic x" if "x\<in>fac_set" 
  using fac_set_def that by (metis in_prime_factors_imp_prime 
      monic_normalize normalize_prime not_prime_0)
lemma P1_monic[simp]: "monic x" if "x\<in>P1"  
  using P1_def fac_set_monic that by blast
lemma P2_monic[simp]: "monic x" if "x\<in>P2"
  using P2_def fac_set_monic that by blast

lemma fac_set_prime_elem[simp]: "prime_elem x" if "x\<in>fac_set" 
  using fac_set_def that in_prime_factors_imp_prime by blast
lemma P1_prime_elem[simp]: "prime_elem x" if "x\<in>P1"
  using P1_def fac_set_prime that by blast
lemma P2_prime_elem[simp]: "prime_elem x" if "x\<in>P2"
  using P2_def fac_set_prime that by blast

lemma fac_set_irreducible[simp]: "irreducible x" if "x\<in>fac_set"
  using fac_set_def that fac_set_prime_elem by auto
lemma P1_irreducible[simp]: "irreducible x" if "x\<in>P1"
  using P1_def fac_set_prime that by blast
lemma P2_irreducible[simp]: "irreducible x" if "x\<in>P2" 
  using P2_def fac_set_prime that by blast


lemma nonzero[simp]: "fj \<noteq> 0" if "fj\<in> fac_set"
  using fac_set_def that zero_not_in_prime_factors by blast

lemma nonzero_deriv[simp]: "pderiv fj \<noteq> 0" if "fj\<in> fac_set" 
  by (intro irreducible_imp_pderiv_nonzero)

lemma P1_ex_nonzero: "of_nat (ex x) \<noteq> (0:: 'e)" if "x\<in>P1" 
  using that P1_def p_def by (simp add: of_nat_eq_0_iff_char_dvd)

lemma deriv_coprime: "algebraic_semidom_class.coprime x (pderiv x)" 
  if "x\<in>fac_set" for x using irreducible_imp_separable that 
  using fac_set_def in_prime_factors_imp_prime by blast


lemma P1_P2_coprime: "algebraic_semidom_class.coprime x (\<Prod>f\<in>P2. f^ex f)" if "x\<in>P1"
  by (smt (verit) P1_def P2_def as_ufd.prime_elem_iff_irreducible fac_set_def 
      in_prime_factors_imp_prime irreducible_dvd_prod mem_Collect_eq 
      normalization_semidom_class.prime_def prime_dvd_power prime_imp_coprime primes_dvd_imp_eq that)

lemma P1_ex_P2_coprime: "algebraic_semidom_class.coprime (x^ex x) (\<Prod>f\<in>P2. f^ex f)" if "x\<in>P1"
  using P1_P2_coprime by (simp add: that)


