theory OAWN_Invariants
imports Invariants OInvariants
        AWN_Cterms AWN_Labels AWN_Invariants
        OAWN_SOS
begin

subsection "Open invariants via labelled control terms"

lemma oseqp_sos_subterms:
  assumes "wellformed \<Gamma>"
      and "\<exists>pn. p \<in> subterms (\<Gamma> pn)"
      and "((\<sigma>, p), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i"
    shows "\<exists>pn. p' \<in> subterms (\<Gamma> pn)"
  using assms
  proof (induct p)
    fix p1 p2
    assume IH1: "\<exists>pn. p1 \<in> subterms (\<Gamma> pn) \<Longrightarrow>
                      ((\<sigma>, p1), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i \<Longrightarrow>
                      \<exists>pn. p' \<in> subterms (\<Gamma> pn)"
       and IH2: "\<exists>pn. p2 \<in> subterms (\<Gamma> pn) \<Longrightarrow>
                      ((\<sigma>, p2), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i \<Longrightarrow>
                      \<exists>pn. p' \<in> subterms (\<Gamma> pn)"
       and "\<exists>pn. p1 \<oplus> p2 \<in> subterms (\<Gamma> pn)"
       and "((\<sigma>, p1 \<oplus> p2), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i"
                                            where "p1 \<in> subterms (\<Gamma> pn)"
                                              and "p2 \<in> subterms (\<Gamma> pn)" by auto
      have "((\<sigma>, p1), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i
            \<or> ((\<sigma>, p2), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i" by auto
    thus "\<exists>pn. p' \<in> subterms (\<Gamma> pn)"
    proof
      assume "((\<sigma>, p1), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i"
    next
      assume "((\<sigma>, p2), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i"
    qed
  qed auto

lemma oreachable_subterms:
  assumes "wellformed \<Gamma>"
      and "control_within \<Gamma> (init A)"
      and "trans A = oseqp_sos \<Gamma> i"
      and "(\<sigma>, p) \<in> oreachable A S U"
    shows "\<exists>pn. p \<in> subterms (\<Gamma> pn)"
  using assms(4)
  proof (induct rule: oreachable_pair_induct)
    fix \<sigma> p
    assume "(\<sigma>, p) \<in> init A"
  next
    fix \<sigma> p a \<sigma>' p'
    assume "(\<sigma>, p) \<in> oreachable A S U"
       and "\<exists>pn. p \<in> subterms (\<Gamma> pn)"
       and 3: "((\<sigma>, p), a, (\<sigma>', p')) \<in> trans A"
       and "S \<sigma> \<sigma>' a"
      have "((\<sigma>, p), a, (\<sigma>', p')) \<in> oseqp_sos \<Gamma> i" by simp
    ultimately show "\<exists>pn. p' \<in> subterms (\<Gamma> pn)"
      by (auto elim: oseqp_sos_subterms)
  qed

lemma onl_oinvariantI [intro]:
  assumes init: "\<And>\<sigma> p l. \<lbrakk> (\<sigma>, p) \<in> init A; l \<in> labels \<Gamma> p \<rbrakk> \<Longrightarrow> P (\<sigma>, l)"
      and other: "\<And>\<sigma> \<sigma>' p l. \<lbrakk> (\<sigma>, p) \<in> oreachable A S U;
                                \<forall>l\<in>labels \<Gamma> p. P (\<sigma>, l);
                                U \<sigma> \<sigma>' \<rbrakk> \<Longrightarrow> \<forall>l\<in>labels \<Gamma> p. P (\<sigma>', l)"
      and step: "\<And>\<sigma> p a \<sigma>' p' l'.
                   \<lbrakk> (\<sigma>, p) \<in> oreachable A S U;
                     \<forall>l\<in>labels \<Gamma> p. P (\<sigma>, l);
                     ((\<sigma>, p), a, (\<sigma>', p')) \<in> trans A;
                     l' \<in> labels \<Gamma> p';
                     S \<sigma> \<sigma>' a \<rbrakk> \<Longrightarrow> P (\<sigma>', l')"
    shows "A \<Turnstile> (S, U \<rightarrow>) onl \<Gamma> P"
  proof
    fix \<sigma> p
    assume "(\<sigma>, p) \<in> init A"
    hence "\<forall>l\<in>labels \<Gamma> p. P (\<sigma>, l)" using init by simp
    thus "onl \<Gamma> P (\<sigma>, p)" ..
  next
    fix \<sigma> p a \<sigma>' p'
    assume rp: "(\<sigma>, p) \<in> oreachable A S U"
       and "onl \<Gamma> P (\<sigma>, p)"
       and tr: "((\<sigma>, p), a, (\<sigma>', p')) \<in> trans A"
       and "S \<sigma> \<sigma>' a"
    thus "onl \<Gamma> P (\<sigma>', p')" ..
  next
    fix \<sigma> \<sigma>' p
    assume "(\<sigma>, p) \<in> oreachable A S U"
       and "onl \<Gamma> P (\<sigma>, p)"
       and "U \<sigma> \<sigma>'"
    thus "onl \<Gamma> P (\<sigma>', p)" by auto
  qed

lemma global_oinvariantI [intro]:
  assumes init: "\<And>\<sigma> p. (\<sigma>, p) \<in> init A \<Longrightarrow> P \<sigma>"
      and other: "\<And>\<sigma> \<sigma>' p l. \<lbrakk> (\<sigma>, p) \<in> oreachable A S U; P \<sigma>; U \<sigma> \<sigma>' \<rbrakk> \<Longrightarrow> P \<sigma>'"
      and step: "\<And>\<sigma> p a \<sigma>' p'.
                   \<lbrakk> (\<sigma>, p) \<in> oreachable A S U;
                     P \<sigma>;
                     ((\<sigma>, p), a, (\<sigma>', p')) \<in> trans A;
                     S \<sigma> \<sigma>' a \<rbrakk> \<Longrightarrow> P \<sigma>'"
    shows "A \<Turnstile> (S, U \<rightarrow>) (\<lambda>(\<sigma>, _). P \<sigma>)"
  proof
    fix \<sigma> p
    assume "(\<sigma>, p) \<in> init A"
    thus "(\<lambda>(\<sigma>, _). P \<sigma>) (\<sigma>, p)"
      by simp (erule init)
  next
    fix \<sigma> p a \<sigma>' p'
    assume rp: "(\<sigma>, p) \<in> oreachable A S U"
       and "(\<lambda>(\<sigma>, _). P \<sigma>) (\<sigma>, p)"
       and tr: "((\<sigma>, p), a, (\<sigma>', p')) \<in> trans A"
       and "S \<sigma> \<sigma>' a"
    with rp have "P \<sigma>'"
    thus "(\<lambda>(\<sigma>, _). P \<sigma>) (\<sigma>', p')" by simp
  next
    fix \<sigma> \<sigma>' p
    assume "(\<sigma>, p) \<in> oreachable A S U"
       and "(\<lambda>(\<sigma>, _). P \<sigma>) (\<sigma>, p)"
       and "U \<sigma> \<sigma>'"
    hence "P \<sigma>'" by simp (erule other)
    thus "(\<lambda>(\<sigma>, _). P \<sigma>) (\<sigma>', p)" by simp
  qed

lemma onl_oinvariantD [dest]:
  assumes "A \<Turnstile> (S, U \<rightarrow>) onl \<Gamma> P"
      and "(\<sigma>, p) \<in> oreachable A S U"
      and "l \<in> labels \<Gamma> p"
    shows "P (\<sigma>, l)"
  using assms unfolding onl_def by auto

lemma onl_oinvariant_weakenD [dest]:
  assumes "A \<Turnstile> (S', U' \<rightarrow>) onl \<Gamma> P"
      and "(\<sigma>, p) \<in> oreachable A S U"
      and "l \<in> labels \<Gamma> p"
      and weakenS: "\<And>s s' a. S s s' a \<Longrightarrow> S' s s' a"
      and weakenU: "\<And>s s'. U s s' \<Longrightarrow> U' s s'"
    shows "P (\<sigma>, l)"
  proof -
      by (rule oreachable_weakenE)
         (erule weakenS, erule weakenU)
  qed

lemma onl_oinvariant_initD [dest]:
  assumes invP: "A \<Turnstile> (S, U \<rightarrow>) onl \<Gamma> P"
      and init: "(\<sigma>, p) \<in> init A"
      and pnl:  "l \<in> labels \<Gamma> p"
    shows "P (\<sigma>, l)"
  proof -
    from init have "(\<sigma>, p) \<in> oreachable A S U" ..
    with invP show ?thesis using pnl ..
  qed

lemma onl_oinvariant_sterms:
  assumes wf: "wellformed \<Gamma>"
      and il: "A \<Turnstile> (S, U \<rightarrow>) onl \<Gamma> P"
      and rp: "(\<sigma>, p) \<in> oreachable A S U"
      and "p'\<in>sterms \<Gamma> p"
      and "l\<in>labels \<Gamma> p'"
    shows "P (\<sigma>, l)"
  proof -
      by (rule labels_sterms_labels)
    with il rp show "P (\<sigma>, l)" ..
  qed

lemma onl_oinvariant_sterms_weaken:
  assumes wf: "wellformed \<Gamma>"
      and il: "A \<Turnstile> (S', U' \<rightarrow>) onl \<Gamma> P"
      and rp: "(\<sigma>, p) \<in> oreachable A S U"
      and "p'\<in>sterms \<Gamma> p"
      and "l\<in>labels \<Gamma> p'"
      and weakenS: "\<And>\<sigma> \<sigma>' a. S \<sigma> \<sigma>' a \<Longrightarrow> S' \<sigma> \<sigma>' a"
      and weakenU: "\<And>\<sigma> \<sigma>'. U \<sigma> \<sigma>' \<Longrightarrow> U' \<sigma> \<sigma>'"
    shows "P (\<sigma>, l)"
  proof -
      by (rule oreachable_weakenE)
         (erule weakenS, erule weakenU)
    with assms(1-2) show ?thesis using assms(4-5)
      by (rule onl_oinvariant_sterms)
  qed

lemma otrans_from_sterms:
  assumes "((\<sigma>, p), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i"
      and "wellformed \<Gamma>"
    shows "\<exists>p'\<in>sterms \<Gamma> p. ((\<sigma>, p'), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i"

lemma otrans_from_sterms':
  assumes "((\<sigma>, p'), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i"
      and "wellformed \<Gamma>"
      and "p' \<in> sterms \<Gamma> p"
    shows "((\<sigma>, p), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i"

lemma otrans_to_dterms:
  assumes "((\<sigma>, p), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i"
      and "wellformed \<Gamma>"
   shows "\<forall>r\<in>sterms \<Gamma> q. r \<in> dterms \<Gamma> p"
  using assms by (induction q) auto

theorem cterms_includes_sterms_of_oseq_reachable:
  assumes "wellformed \<Gamma>"
      and "control_within \<Gamma> (init A)"
      and "trans A = oseqp_sos \<Gamma> i"
    shows "\<Union>(sterms \<Gamma> ` snd ` oreachable A S U) \<subseteq> cterms \<Gamma>"
  proof
    fix qs
    assume "qs \<in> \<Union>(sterms \<Gamma> ` snd ` oreachable A S U)"
    then obtain \<xi> and q where  *: "(\<xi>, q) \<in> oreachable A S U"
                          and **: "qs \<in> sterms \<Gamma> q" by auto
    from * have "\<And>x. x \<in> sterms \<Gamma> q \<Longrightarrow> x \<in> cterms \<Gamma>"
    proof (induction rule: oreachable_pair_induct)
      fix \<sigma> p q
      assume "(\<sigma>, p) \<in> init A"
         and "q \<in> sterms \<Gamma> p"
        obtain pn where "p \<in> subterms (\<Gamma> pn)" by auto
        by (rule subterms_sterms_in_cterms)
    next
      fix p \<sigma> a \<sigma>' q x
      assume "(\<sigma>, p) \<in> oreachable A S U"
         and IH: "\<And>x. x \<in> sterms \<Gamma> p \<Longrightarrow> x \<in> cterms \<Gamma>"
         and "((\<sigma>, p), a, (\<sigma>', q)) \<in> trans A"
         and "x \<in> sterms \<Gamma> q"
        have step: "((\<sigma>, p), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i" by simp
        where ps: "ps \<in> sterms \<Gamma> p"
          and step': "((\<sigma>, ps), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i"
        by (rule otrans_from_sterms [THEN bexE])
      from ps have "ps \<in> cterms \<Gamma>" by (rule IH)
        by (rule otrans_to_dterms [rule_format])
      ultimately show "x \<in> cterms \<Gamma>" by (rule ctermsDI)
    qed
    thus "qs \<in> cterms \<Gamma>" using ** .
  qed

corollary oseq_reachable_in_cterms:
  assumes "wellformed \<Gamma>"
      and "control_within \<Gamma> (init A)"
      and "trans A = oseqp_sos \<Gamma> i"
      and "(\<sigma>, p) \<in> oreachable A S U"
      and "p' \<in> sterms \<Gamma> p"
    shows "p' \<in> cterms \<Gamma>"
  using assms(1-3)
  proof (rule cterms_includes_sterms_of_oseq_reachable [THEN subsetD])
    from assms(4-5) show "p' \<in> \<Union>(sterms \<Gamma> ` snd ` oreachable A S U)"
      by (auto elim!: rev_bexI)
  qed

lemma oseq_invariant_ctermI:
  assumes wf: "wellformed \<Gamma>"
      and cw: "control_within \<Gamma> (init A)"
      and sl: "simple_labels \<Gamma>"
      and sp: "trans A = oseqp_sos \<Gamma> i"
      and init: "\<And>\<sigma> p l. \<lbrakk>
                   (\<sigma>, p) \<in> init A;
                   l\<in>labels \<Gamma> p
                 \<rbrakk> \<Longrightarrow> P (\<sigma>, l)"
      and other: "\<And>\<sigma> \<sigma>' p l. \<lbrakk>
                   (\<sigma>, p) \<in> oreachable A S U;
                   l\<in>labels \<Gamma> p;
                   P (\<sigma>, l);
                   U \<sigma> \<sigma>' \<rbrakk> \<Longrightarrow> P (\<sigma>', l)"
      and local: "\<And>p l \<sigma> a q l' \<sigma>' pp. \<lbrakk>
                 p\<in>cterms \<Gamma>;
                 l\<in>labels \<Gamma> p;
                 P (\<sigma>, l);
                 ((\<sigma>, p), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i;
                 ((\<sigma>, p), a, (\<sigma>', q)) \<in> trans A;
                 l'\<in>labels \<Gamma> q;
                 (\<sigma>, pp)\<in>oreachable A S U;
                 p\<in>sterms \<Gamma> pp;
                 (\<sigma>', q)\<in>oreachable A S U;
                 S \<sigma> \<sigma>' a
               \<rbrakk> \<Longrightarrow> P (\<sigma>', l')"
    shows "A \<Turnstile> (S, U \<rightarrow>) onl \<Gamma> P"
  proof
       fix \<sigma> p l
    assume "(\<sigma>, p) \<in> init A"
       and *: "l \<in> labels \<Gamma> p"
      with init show "P (\<sigma>, l)" by auto
  next
       fix \<sigma> p a \<sigma>' q l'
    assume sr: "(\<sigma>, p) \<in> oreachable A S U"
       and pl: "\<forall>l\<in>labels \<Gamma> p. P (\<sigma>, l)"
       and tr: "((\<sigma>, p), a, (\<sigma>', q)) \<in> trans A"
       and A6: "l' \<in> labels \<Gamma> q"
       and "S \<sigma> \<sigma>' a"
      thus "P (\<sigma>', l')"
    proof -
        by - (rule oreachable_local')
      from tr and sp have tr': "((\<sigma>, p), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i" by simp
      then obtain p' where "p' \<in> sterms \<Gamma> p"
                       and A4: "((\<sigma>, p'), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i"
        by (blast dest: otrans_from_sterms [OF _ wf])
      from wf cw sp sr this(1) have A1: "p'\<in>cterms \<Gamma>"
        by (rule oseq_reachable_in_cterms)
      from labels_not_empty [OF wf] obtain ll where A2: "ll\<in>labels \<Gamma> p'"
          by blast
        by (rule labels_sterms_labels [OF wf])
      with pl have A3: "P (\<sigma>, ll)" by simp
        obtain pp where A7: "(\<sigma>, pp)\<in>oreachable A S U"
                    and A8: "p'\<in>sterms \<Gamma> pp"
        by auto
        by - (rule oreachable_local')
        have A5: "((\<sigma>, p'), a, (\<sigma>', q)) \<in> trans A" by simp
    qed
  next
    fix \<sigma> \<sigma>' p l
    assume sr: "(\<sigma>, p) \<in> oreachable A S U"
       and "\<forall>l\<in>labels \<Gamma> p. P (\<sigma>, l)"
       and "U \<sigma> \<sigma>'"
    show "\<forall>l\<in>labels \<Gamma> p. P (\<sigma>', l)"
    proof
      fix l
      assume "l\<in>labels \<Gamma> p"
    qed
  qed

lemma oseq_invariant_ctermsI:
  assumes wf: "wellformed \<Gamma>"
      and cw: "control_within \<Gamma> (init A)"
      and sl: "simple_labels \<Gamma>"
      and sp: "trans A = oseqp_sos \<Gamma> i"
      and init: "\<And>\<sigma> p l. \<lbrakk>
                   (\<sigma>, p) \<in> init A;
                   l\<in>labels \<Gamma> p
                 \<rbrakk> \<Longrightarrow> P (\<sigma>, l)"
      and other: "\<And>\<sigma> \<sigma>' p l. \<lbrakk>
                   wellformed \<Gamma>;
                   (\<sigma>, p) \<in> oreachable A S U;
                   l\<in>labels \<Gamma> p;
                   P (\<sigma>, l);
                   U \<sigma> \<sigma>' \<rbrakk> \<Longrightarrow> P (\<sigma>', l)"
      and local: "\<And>p l \<sigma> a q l' \<sigma>' pp pn. \<lbrakk>
                 wellformed \<Gamma>;
                 p\<in>ctermsl (\<Gamma> pn);
                 not_call p;
                 l\<in>labels \<Gamma> p;
                 P (\<sigma>, l);
                 ((\<sigma>, p), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i;
                 ((\<sigma>, p), a, (\<sigma>', q)) \<in> trans A;
                 l'\<in>labels \<Gamma> q;
                 (\<sigma>, pp)\<in>oreachable A S U;
                 p\<in>sterms \<Gamma> pp;
                 (\<sigma>', q)\<in>oreachable A S U;
                 S \<sigma> \<sigma>' a
               \<rbrakk> \<Longrightarrow> P (\<sigma>', l')"
    shows "A \<Turnstile> (S, U \<rightarrow>) onl \<Gamma> P"
  proof (rule oseq_invariant_ctermI [OF wf cw sl sp])
    fix \<sigma> p l
    assume "(\<sigma>, p) \<in> init A"
       and "l \<in> labels \<Gamma> p"
    thus "P (\<sigma>, l)" by (rule init)
  next
    fix \<sigma> \<sigma>' p l
    assume "(\<sigma>, p) \<in> oreachable A S U"
       and "l \<in> labels \<Gamma> p"
       and "P (\<sigma>, l)"
       and "U \<sigma> \<sigma>'"
    with wf show "P (\<sigma>', l)" by (rule other)
  next
    fix p l \<sigma> a q l' \<sigma>' pp
    assume "p \<in> cterms \<Gamma>"
       and otherassms: "l \<in> labels \<Gamma> p"
           "P (\<sigma>, l)"
           "((\<sigma>, p), a, (\<sigma>', q)) \<in> oseqp_sos \<Gamma> i"
           "((\<sigma>, p), a, (\<sigma>', q)) \<in> trans A"
           "l' \<in> labels \<Gamma> q"
           "(\<sigma>, pp) \<in> oreachable A S U"
           "p \<in> sterms \<Gamma> pp"
           "(\<sigma>', q) \<in> oreachable A S U"
           "S \<sigma> \<sigma>' a"
    from this(1) obtain pn where "p \<in> ctermsl(\<Gamma> pn)"
                             and "not_call p"
      unfolding cterms_def' [OF wf] by auto
    with wf show "P (\<sigma>', l')"
      using otherassms by (rule local)
  qed

subsection "Open step invariants via labelled control terms"

lemma onll_ostep_invariantI [intro]:
  assumes *: "\<And>\<sigma> p l a \<sigma>' p' l'. \<lbrakk> (\<sigma>, p)\<in>oreachable A S U;
                                   ((\<sigma>, p), a, (\<sigma>', p')) \<in> trans A;
                                   S \<sigma> \<sigma>' a;
                                   l \<in>labels \<Gamma> p;
                                   l'\<in>labels \<Gamma> p' \<rbrakk>
                                 \<Longrightarrow> P ((\<sigma>, l), a, (\<sigma>', l'))"
    shows "A \<Turnstile>\<^sub>A (S, U \<rightarrow>) onll \<Gamma> P"
  proof
    fix \<sigma> p \<sigma>' p' a
    assume "(\<sigma>, p) \<in> oreachable A S U"
       and "((\<sigma>, p), a, (\<sigma>', p')) \<in> trans A"
       and "S \<sigma> \<sigma>' a"
    hence "\<forall>l\<in>labels \<Gamma> p. \<forall>l'\<in>labels \<Gamma> p'. P ((\<sigma>, l), a, (\<sigma>', l'))" by (auto elim!: *)
