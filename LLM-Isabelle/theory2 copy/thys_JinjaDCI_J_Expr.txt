    Based on the Jinja theory J/Expr.thy by Tobias Nipkow
*)
(*<*)by(cases v\<^sub>1; cases v\<^sub>2) auto(*>*)
(*<*)by(induct vs arbitrary: vs'; case_tac vs') auto(*>*)
(*<*)by(induct vs arbitrary: vs'; case_tac vs') auto(*>*)
(*<*)by(induct vs arbitrary: vs'; case_tac vs') auto(*>*)
(*<*)by (induct es\<^sub>1 type:list) auto(*>*)
(*<*)by (induct vs) auto(*>*)
(* these definitions and most of the lemmas were in BigStep.thy in the original Jinja *)
(*<*)by(simp add:final_def)(*>*)
(*<*)by(simp add:final_def)(*>*)
(*<*)by(auto simp:final_def)(*>*)
(*<*)by(auto simp:finals_def)(*>*)
(*<*)by(simp add:finals_def)(*>*)
(*<*)
(*>*)
(*<*)by(induct_tac vs, auto)(*>*)
(*<*)using finals_app_map[of vs "[]"]by(simp)(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
