theory BD_Security_Triggers
  imports BD_Security_TS
begin


triggers into the bound, and discusses the question whether this is always possible without loss of
generality, giving a partially positive answer:  the transformed security property is equivalent to
a slightly strengthened version of the original one.\<close>
subsubsection \<open>Definition\<close>
text \<open>The strengthened variant of BD Security is called \<^emph>\<open>trigger-preserving\<close> in
\<^cite>\<open>"cosmed-jar2018"\<close>, because the difference to regular BD Security is that the (non-firing of
setup \<^cite>\<open>\<open>Proposition 1\<close> in "cosmed-jar2018"\<close>.\<close>
subsubsection \<open>Reflexive-transitive closure of declassification bounds\<close>
text \<open>Another property of trigger-preserving BD Security is that security w.r.t. an arbitrary bound

locale Abstract_BD_Security_Transitive_Closure = Orig: Abstract_BD_Security
begin

sublocale Prime?: Abstract_BD_Security where B = "B\<^sup>*\<^sup>*" .

lemma secureTT_iff_secureTT': "Orig.secureTT \<longleftrightarrow> Prime.secureTT"
proof
  assume "Orig.secureTT"
  then show "Prime.secureTT"
  proof (unfold Prime.secureTT_def, intro allI impI, elim conjE)
    fix tr vl vl1
    assume tr: "validSystemTrace tr" and TT: "TT tr" and B: "B\<^sup>*\<^sup>* vl vl1" and V: "V tr = vl"
    from B show "\<exists>tr1. validSystemTrace tr1 \<and> TT tr1 \<and> O tr1 = O tr \<and> V tr1 = vl1"
    proof (induction rule: rtranclp_induct)
      case base
      show "\<exists>tr1. validSystemTrace tr1 \<and> TT tr1 \<and> O tr1 = O tr \<and> V tr1 = vl"
        using tr TT V
        by (intro exI[where x = tr]) auto
    next
      case (step vl' vl1')
      then obtain tr1
        where tr1: "validSystemTrace tr1" "TT tr1" and O1: "O tr1 = O tr" and V1: "V tr1 = vl'"
        by blast
      show "\<exists>tr1. validSystemTrace tr1 \<and> TT tr1 \<and> O tr1 = O tr \<and> V tr1 = vl1'"
    qed
  qed
next
  assume "Prime.secureTT"
  then show "Orig.secureTT"
    unfolding Prime.secureTT_def Orig.secureTT_def
    by blast
qed

end

end
