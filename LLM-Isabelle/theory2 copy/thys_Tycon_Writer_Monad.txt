theory Writer_Monad
imports Monad
begin


class monoid = "domain" +
  fixes mempty :: "'a"
  fixes mappend :: "'a \<rightarrow> 'a \<rightarrow> 'a"
  assumes mempty_left: "\<And>ys. mappend\<cdot>mempty\<cdot>ys = ys"
  assumes mempty_right: "\<And>xs. mappend\<cdot>xs\<cdot>mempty = xs"
  assumes mappend_assoc:
    "\<And>xs ys zs. mappend\<cdot>(mappend\<cdot>xs\<cdot>ys)\<cdot>zs = mappend\<cdot>xs\<cdot>(mappend\<cdot>ys\<cdot>zs)"






