theory Partial_Function_MR
imports Main
keywords "partial_function_mr" :: thy_decl
begin

              



lemma option_map_id: "map_option (\<lambda> x. x) x = x" 
  by (cases x, auto)

lemma option_map_mono[partial_function_mono]:
  assumes mf: "mono_option B"
  shows "mono_option (\<lambda>f. map_option h (B f))"
proof (rule monotoneI)
  fix f g :: "'a \<Rightarrow> 'b option" assume fg: "fun_ord option_ord f g"
  with mf
  have "option_ord (B f) (B g)" by (rule monotoneD[of _ _ _ f g])
  then show "option_ord (map_option h (B f)) (map_option h (B g))"
    unfolding flat_ord_def by auto    
qed





end
