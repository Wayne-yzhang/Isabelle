This theory provides an executable functional implementation of clause
subsumption, building on the \textsf{IsaFoR} library.
\<close>
subsection \<open>Naive Implementation of Clause Subsumption\<close>
subsection \<open>Optimized Implementation of Clause Subsumption\<close>
subsection \<open>Definition of Deterministic QuickSort\<close>
text \<open>
  This is the functional description of the standard variant of deterministic
  QuickSort that always chooses the first list element as the pivot as given
  by Hoare in 1962. For a list that is already sorted, this leads to $n(n-1)$
  comparisons, but as is well known, the average case is much better.

  entry, but without invoking probability theory and using a predicate instead
  of a set.
\<close>
text \<open>
  We can easily show that this QuickSort is correct:
\<close>
    by (auto simp: sorted_wrt_append \<open>transp R\<close>
     intro: transpD[OF \<open>transp R\<close>] dest!: total)
text \<open>
\<close>
