theory MachineEquations
  imports MultipleStepRegister MultipleStepState MachineMasking
begin
 
definition mask_equations :: "nat \<Rightarrow> (register \<Rightarrow> nat) \<Rightarrow> (register \<Rightarrow> nat)
  where "(mask_equations n r z c d e f) = ((\<forall>l<n. (r l) \<preceq> d)
                                           \<and> (\<forall>l<n. (z l) \<preceq> e)
                                           \<and> (\<forall>l<n. 2^c * (z l) = (r l + d) && f))"

definition reg_equations :: "program \<Rightarrow> (register \<Rightarrow> nat) \<Rightarrow> (register \<Rightarrow> nat) \<Rightarrow> (state \<Rightarrow> nat)
                             \<Rightarrow>  nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> bool" where
  "(reg_equations p r z s b a n q) = (

definition state_equations :: "program \<Rightarrow> (state \<Rightarrow> nat) \<Rightarrow> (register \<Rightarrow> nat) \<Rightarrow> 
                              nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> bool" where
  "state_equations p s z b e q m = (
                                                 + b*\<Sum>S0 p d (\<lambda>k. s k && (e - z (modifies (p!k)))))
                                                 + b*\<Sum>S0 p 0 (\<lambda>k. s k && (e - z (modifies (p!k)))))

definition state_unique_equations :: "program \<Rightarrow> (state\<Rightarrow>nat) \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow>bool" where
  "state_unique_equations p s m e = ((\<Sum>k=0..m. s k) \<preceq> e \<and> (\<forall>k\<le>m. s k \<preceq> e))"


definition rm_constants :: "nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> bool" where
  "rm_constants q c b d e f a = (

definition rm_equations_old :: "program \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> nat \<Rightarrow> bool" where
  "rm_equations_old p q a n = (
    \<exists> b c d e f :: nat.
    \<exists> r z :: register \<Rightarrow> nat.
    \<exists> s :: state \<Rightarrow> nat.
     mask_equations n r z c d e f
     \<and> reg_equations p r z s b a n q 
     \<and> state_equations p s z b e q (length p - 1)
     \<and> rm_constants q c b d e f a)"

end
