theory  Printer_Toy_extended
imports Meta_Toy_extended
        Printer_Toy
begin

context Print
begin

definition "To_oid = (\<lambda>Oid n \<Rightarrow> To_nat n)"


definition "of_toy_def_state_core l =
                             | ToyDefCoreAdd toyi \<Rightarrow> of_toy_instance_single toyi) l)"

                                         String.literal) = (\<lambda> ToyDefSt n l \<Rightarrow> 
    floor
    (To_string n)
    (of_toy_def_state_core l))"

definition "of_toy_def_pp_core = (\<lambda> ToyDefPPCoreBinding s \<Rightarrow> To_string s

                                            String.literal) = (\<lambda> ToyDefPP n s_pre s_post \<Rightarrow>
    floor
    (of_toy_def_pp_core s_pre)

end

lemmas [code] =
  Print.To_oid_def
  Print.of_toy_def_base_def
  Print.of_toy_instance_single_def
  Print.of_toy_instance_def
  Print.of_toy_def_state_core_def
  Print.of_toy_def_state_def
  Print.of_toy_def_pp_core_def
  Print.of_toy_def_pre_post_def

  Print.of_toy_list_attr.simps
  Print.of_toy_data_shallow.simps

end
