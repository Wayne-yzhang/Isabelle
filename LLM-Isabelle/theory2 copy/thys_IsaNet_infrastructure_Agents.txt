theory Agents imports Main 
begin





type_synonym aso = "as option"

type_synonym ases = "as set"


locale compromised =
fixes 
begin

abbreviation 
  good :: "as set"
where
  "good \<equiv> -bad"
end
        


typedecl fid_t

datatype fresh_t = 
  mk_fresh "fid_t" "nat"      (infixr "$" 65) 

fun fid :: "fresh_t \<Rightarrow> fid_t" where
  "fid (f $ n) = f"

fun num :: "fresh_t \<Rightarrow> nat" where
  "num (f $ n) = n"



type_synonym 
  nonce = "fresh_t"



end
