theory Coupledsim_Fixpoint_Algo_Delay
imports
  Coupled_Simulation
  "HOL-Library.While_Combinator"
  "HOL-Library.Finite_Lattice"
begin

context lts_tau
begin

definition fp_step :: 
where



lemma mono_fp_step:
proof (rule, safe)
  assume
    unfolding fp_step_def
    by (auto, blast)
qed

lemma fp_fp_step:
  assumes
  shows
  using assms unfolding fp_step_def coupled_delay_simulation_def delay_simulation_def 
  by (auto, blast, fastforce+)

lemma gfp_fp_step_subset_gcs:
  unfolding  gcs_eq_coupled_sim_by[symmetric] 
proof clarify
  fix a b
  assume
    unfolding coupled_sim_by_eq_coupled_delay_simulation
    using fp_fp_step mono_fp_step gfp_unfold
    by metis
qed

lemma fp_fp_step_gcs:
  assumes
  shows
  unfolding assms
proof safe
  fix p q
  assume
  hence
    unfolding fp_step_def by auto
    unfolding fp_step_def using weak_step_delay_implies_weak_tau steps.refl by blast
    using weak_step_tau2_def by simp
    using lts_tau.gcs by metis
next
  fix p q
  assume asm:
    unfolding gcs_eq_coupled_sim_by[symmetric] coupled_sim_by_eq_coupled_delay_simulation.
    using coupled_delay_simulation_def delay_simulation_def
    by (metis coupled_similarity_implies_gcs coupled_simulation_weak_simulation
        delay_simulation_implies_weak_simulation)
    unfolding  gcs_eq_coupled_sim_by[symmetric] coupled_sim_by_eq_coupled_delay_simulation
    by (metis coupled_delay_simulation_def delay_simulation_def)
    using asm gcs_is_coupled_simulation coupled_simulation_implies_coupling by blast
    unfolding fp_step_def by blast
qed

  using fp_fp_step_gcs gfp_fp_step_subset_gcs
  by (simp add: equalityI gfp_upperbound)

end

context lts_tau_finite
begin
lemma gfp_fp_step_while:
  shows
  unfolding fp_compute_cs_def
  using gfp_while_lattice[OF mono_fp_step] finite_state_rel Finite_Set.finite_set by blast

theorem coupled_sim_fp_step_while:
  using gfp_fp_step_while gfp_fp_step_gcs by blast

end

end
