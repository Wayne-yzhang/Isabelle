theory Labels
imports Aexp Bexp
begin





datatype ('v,'d) label = Skip | Assume "('v,'d) bexp" | Assign 'v "('v,'d) aexp"




definition finite_label ::
  "('v,'d) label \<Rightarrow> bool"
where
  "finite_label l \<equiv> case l of 
                    Assume e   \<Rightarrow> finite (Bexp.vars e) 
                  | Assign _ e \<Rightarrow> finite (Aexp.vars e) 
                  | _          \<Rightarrow> True"

abbreviation finite_labels :: 
  "('v,'d) label list \<Rightarrow> bool" 
where
  "finite_labels ls \<equiv> (\<forall> l \<in> set ls. finite_label l)"

end
