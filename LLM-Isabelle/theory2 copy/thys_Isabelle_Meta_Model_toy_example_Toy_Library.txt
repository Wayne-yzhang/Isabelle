theory Toy_Library
imports Main
begin

notation Some ("\<lfloor>(_)\<rfloor>")

fun    drop :: "'\<alpha> option \<Rightarrow> '\<alpha>" ("\<lceil>(_)\<rceil>")
where  drop_lift[simp]: "\<lceil>\<lfloor>v\<rfloor>\<rceil> = v"


type_synonym oid = nat

type_synonym '\<alpha> val' = "unit \<Rightarrow> '\<alpha>"
type_notation val' ("\<cdot>(_)")

record ('\<AA>)state =
             heap   :: "oid \<rightharpoonup> '\<AA> "
             assocs :: "oid \<rightharpoonup> ((oid list) list) list"

lemmas [simp,code_unfold] = state.defs

end
