theory Tangent_Space
imports Partition_Of_Unity
begin

lemma linear_imp_linear_on: "linear_on A B scaleR scaleR f" if "linear f"
  "subspace A" "subspace B"
proof -
  interpret linear f by fact
  show ?thesis using that
    by unfold_locales (auto simp: add scaleR algebra_simps subspace_def)
qed

lemma (in vector_space_pair_on)
  linear_sum':
    "\<forall>x. x \<in> S1 \<longrightarrow> f x \<in> S2 \<Longrightarrow>
    \<forall>x. x \<in> S \<longrightarrow> g x \<in> S1 \<Longrightarrow>
    linear_on S1 S2 scale1 scale2 f \<Longrightarrow>
    f (sum g S) = (\<Sum>a\<in>S. f (g a))"
  using linear_sum[of f "\<lambda>x. if x \<in> S then g x else 0" S]
  by (auto simp: if_distrib if_distribR m1.mem_zero cong: if_cong)



locale real_vector_space_on = fixes S assumes subspace: "subspace S"
begin

sublocale vector_space_on S scaleR
  rewrites span_eq_real: "local.span = real_vector.span"
    and dependent_eq_real: "local.dependent = real_vector.dependent"
    and subspace_eq_real: "local.subspace = real_vector.subspace"
proof -
