theory Totally_Ordered_Hoops
  imports Ordinal_Sums
begin


locale totally_ordered_hoop = hoop +
  assumes total_order: "x \<in> A \<Longrightarrow> y \<in> A \<Longrightarrow> x \<le>\<^sup>A y \<or> y \<le>\<^sup>A x "
begin

function fixed_points :: "'a \<Rightarrow> 'a set" ("F") where
  "F a = {b \<in> A-{1\<^sup>A}. a \<rightarrow>\<^sup>A b = b}" if "a \<in> A-{1\<^sup>A}"
| "F a = {1\<^sup>A}" if "a = 1\<^sup>A" 
| "F a = undefined" if "a \<notin> A"
  by auto
termination by lexicographic_order 

definition rel_F :: "'a \<Rightarrow> 'a \<Rightarrow> bool" (infix "\<sim>F" 60)
  where "x \<sim>F y \<equiv> \<forall> z \<in> A. (x \<rightarrow>\<^sup>A z = z) \<longleftrightarrow> (y \<rightarrow>\<^sup>A z = z)" 

definition rel_F_canonical_map :: "'a \<Rightarrow> 'a set" ("\<pi>")
  where "\<pi> x = {b \<in> A. x \<sim>F b}"

end


context totally_ordered_hoop 
begin

lemma F_equiv:
  assumes "a \<in> A-{1\<^sup>A}" "b \<in> A"
  shows "b \<in> F a \<longleftrightarrow> (b \<in> A \<and> b \<noteq> 1\<^sup>A \<and> a \<rightarrow>\<^sup>A b = b)"
  using assms by auto

lemma F_subset:
  assumes "a \<in> A" 
  shows "F a \<subseteq> A"
proof -
  have "a = 1\<^sup>A \<or> a \<noteq> 1\<^sup>A"
    by auto
  then
  show ?thesis
    using assms by fastforce
qed 

lemma F_of_one:
  assumes "a \<in> A"
  shows "F a = {1\<^sup>A} \<longleftrightarrow> a = 1\<^sup>A"
  using F_equiv assms fixed_points.simps(2) top_closed by blast

lemma F_of_mult:
  assumes "a \<in> A-{1\<^sup>A}" "b \<in> A-{1\<^sup>A}"
  shows "F (a *\<^sup>A b) = {c \<in> A-{1\<^sup>A}. (a *\<^sup>A b) \<rightarrow>\<^sup>A c = c}"
  using assms mult_C by auto

lemma F_of_imp:
  assumes "a \<in> A" "b \<in> A" "a \<rightarrow>\<^sup>A b \<noteq> 1\<^sup>A"
  shows "F (a \<rightarrow>\<^sup>A b) = {c \<in> A-{1\<^sup>A}. (a \<rightarrow>\<^sup>A b) \<rightarrow>\<^sup>A c = c}"
  using assms imp_closed by auto

lemma F_bound:
  assumes "a \<in> A" "b \<in> A" "a \<in> F b"
  shows "a \<le>\<^sup>A b"
proof -
  consider (1) "b \<noteq> 1\<^sup>A"
    | (2) "b = 1\<^sup>A"
    by auto
  then
  show "?thesis"
  proof(cases)
    case 1
    then
    have "b \<rightarrow>\<^sup>A a \<noteq> 1\<^sup>A"
      using assms(2,3) by simp
    then
    show ?thesis     
      using assms hoop_order_def total_order by auto
  next
    case 2
    then
    show ?thesis
      using assms(1) ord_top by auto
  qed
qed


lemma LEMMA_3_3_1:
  assumes "a \<in> A-{1\<^sup>A}" "b \<in> A" "c \<in> A" "b \<in> F a" "c \<le>\<^sup>A b"
  shows "c \<in> F a"
proof -
  from assms
  have "(a \<rightarrow>\<^sup>A c) \<le>\<^sup>A (a \<rightarrow>\<^sup>A b)"
    using DiffD1 F_equiv ord_imp_mono_B by metis
  then
  have "(a \<rightarrow>\<^sup>A c) \<le>\<^sup>A b"
    using assms(1,4,5) by simp
  then
  have "(a \<rightarrow>\<^sup>A c) \<rightarrow>\<^sup>A c = ((a \<rightarrow>\<^sup>A c) *\<^sup>A ((a \<rightarrow>\<^sup>A c) \<rightarrow>\<^sup>A b)) \<rightarrow>\<^sup>A c"
    using assms(1,3) hoop_order_def imp_closed by force
  also
  have "\<dots> = (b *\<^sup>A (b \<rightarrow>\<^sup>A (a \<rightarrow>\<^sup>A c))) \<rightarrow>\<^sup>A c"
    using assms divisibility imp_closed by simp
  also
  have "\<dots> = (b \<rightarrow>\<^sup>A (a \<rightarrow>\<^sup>A c)) \<rightarrow>\<^sup>A (b \<rightarrow>\<^sup>A c)"
    using DiffD1 assms(1-3) imp_closed swap residuation by metis
  also
  have "\<dots> = ((a \<rightarrow>\<^sup>A b) \<rightarrow>\<^sup>A (a \<rightarrow>\<^sup>A c)) \<rightarrow>\<^sup>A (b \<rightarrow>\<^sup>A c)"
    using assms(1,4) by simp
  also
  have "\<dots> = (((a \<rightarrow>\<^sup>A b) *\<^sup>A a) \<rightarrow>\<^sup>A c) \<rightarrow>\<^sup>A (b \<rightarrow>\<^sup>A c)"
    using assms(1,3,4) residuation by simp
  also
  have "\<dots> = (((b \<rightarrow>\<^sup>A a) *\<^sup>A b) \<rightarrow>\<^sup>A c) \<rightarrow>\<^sup>A (b \<rightarrow>\<^sup>A c)"
    using assms(1,2) divisibility imp_closed mult_comm by simp
  also
  have "\<dots> = (b \<rightarrow>\<^sup>A c) \<rightarrow>\<^sup>A (b \<rightarrow>\<^sup>A c)"
    using F_bound assms(1,4) hoop_order_def by simp
  also
  have "\<dots> = 1\<^sup>A"
    using F_bound assms hoop_order_def imp_closed by simp
  finally
  have "(a \<rightarrow>\<^sup>A c) \<le>\<^sup>A c"
    using hoop_order_def by simp
  moreover
  have "c \<le>\<^sup>A (a \<rightarrow>\<^sup>A c)"
    using assms(1,3) ord_A by simp
  ultimately
  have "a \<rightarrow>\<^sup>A c = c"
    using assms(1,3) imp_closed ord_antisymm by simp
  moreover 
  have "c \<in> A-{1\<^sup>A}"
    using assms(1,3-5) hoop_order_def imp_one_C by auto
  ultimately
  show ?thesis
    using F_equiv assms(1) by blast
qed

lemma LEMMA_3_3_2:
  assumes "a \<in> A-{1\<^sup>A}" "b \<in> A-{1\<^sup>A}" "F a = F b"
  shows "F a = F (a *\<^sup>A b)"
proof 
  show "F a \<subseteq> F (a *\<^sup>A b)"
  proof 
    fix c 
    assume "c \<in> F a"
    then
    have "(a *\<^sup>A b) \<rightarrow>\<^sup>A c = b \<rightarrow>\<^sup>A (a \<rightarrow>\<^sup>A c)"
      using DiffD1 F_subset assms(1,2) in_mono swap residuation by metis
    also
    have "\<dots> = b \<rightarrow>\<^sup>A c"
    also
    have "\<dots> = c"
    finally
    show "c \<in> F (a *\<^sup>A b)"
  qed
next 
  show "F (a *\<^sup>A b) \<subseteq> F a"
  proof 
    fix c
    assume "c \<in> F (a *\<^sup>A b)"
    then
    have "(a *\<^sup>A b) \<le>\<^sup>A a"
      using assms(1,2) mult_A by auto
    then
    have "(a \<rightarrow>\<^sup>A c) \<le>\<^sup>A ((a *\<^sup>A b) \<rightarrow>\<^sup>A c)"
            ord_imp_anti_mono_B subsetD
      by meson
    moreover
    have "(a *\<^sup>A b) \<rightarrow>\<^sup>A c = c"
    ultimately
    have "(a \<rightarrow>\<^sup>A c) \<le>\<^sup>A c"
      by simp
    moreover
    have "c \<le>\<^sup>A (a \<rightarrow>\<^sup>A c)"
            insert_subset mult_closed ord_A
      by metis
    ultimately
    show "c \<in> F a"
  qed
qed

lemma LEMMA_3_3_3:
  assumes "a \<in> A-{1\<^sup>A}" "b \<in> A-{1\<^sup>A}" "a \<le>\<^sup>A b" 
  shows "F a \<subseteq> F b"
proof 
  fix c
  assume "c \<in> F a"
  then 
  have "(b \<rightarrow>\<^sup>A c) \<le>\<^sup>A (a \<rightarrow>\<^sup>A c)"
    using DiffD1 F_subset assms in_mono ord_imp_anti_mono_B by meson
  moreover 
  have "a \<rightarrow>\<^sup>A c = c"
  ultimately 
  have "(b \<rightarrow>\<^sup>A c) \<le>\<^sup>A c"
    by simp
  moreover
  have "c \<le>\<^sup>A (b \<rightarrow>\<^sup>A c)"
  ultimately
  show "c \<in> F b"
qed

lemma LEMMA_3_3_4:
  assumes "a \<in> A-{1\<^sup>A}" "b \<in> A-{1\<^sup>A}" "a <\<^sup>A b" "F a \<noteq> F b"
  shows "a \<in> F b"
proof -
  from assms
  obtain c where "c \<in> F b \<and> c \<notin> F a"
    using LEMMA_3_3_3 hoop_order_strict_def by auto
  then
  have witness: "c \<in> A-{1\<^sup>A} \<and> b \<rightarrow>\<^sup>A c = c \<and> c <\<^sup>A (a \<rightarrow>\<^sup>A c)"
    using DiffD1 assms(1,2) hoop_order_strict_def ord_A by auto
  then
  have "(a \<rightarrow>\<^sup>A c) \<rightarrow>\<^sup>A c \<in> F b"
    using DiffD1 F_equiv assms(1,2) imp_closed swap ord_D by metis
  moreover
  have "a \<le>\<^sup>A ((a \<rightarrow>\<^sup>A c) \<rightarrow>\<^sup>A c)"
    using assms(1) ord_C witness by force
  ultimately
  show "a \<in> F b"
    using Diff_iff LEMMA_3_3_1 assms(1,2) imp_closed witness by metis
qed

lemma LEMMA_3_3_5:
  assumes "a \<in> A-{1\<^sup>A}" "b \<in> A-{1\<^sup>A}" "F a \<noteq> F b"
  shows "a *\<^sup>A b = a \<and>\<^sup>A b"
proof -
  have "a <\<^sup>A b \<or> b <\<^sup>A a"
    using DiffD1 assms hoop_order_strict_def total_order by metis
  then
  have "a \<in> F b \<or> b \<in> F a"
    using LEMMA_3_3_4 assms by metis
  then
  have "a *\<^sup>A b = (b \<rightarrow>\<^sup>A a) *\<^sup>A b \<or> a *\<^sup>A b = a *\<^sup>A (a \<rightarrow>\<^sup>A b)"
    using assms(1,2) by force
  then
  show ?thesis
    using assms(1,2) divisibility hoop_inf_def imp_closed mult_comm by auto
qed

lemma LEMMA_3_3_6:
  assumes "a \<in> A-{1\<^sup>A}" "b \<in> A-{1\<^sup>A}" "a <\<^sup>A b" "F a = F b"
  shows "F (b \<rightarrow>\<^sup>A a) = F b"
proof -
  have "a \<notin> F a"
    using assms(1) DiffD1 F_equiv imp_reflex by metis
  then
  have "a <\<^sup>A (b \<rightarrow>\<^sup>A a)"
    using assms(1,2,4) hoop_order_strict_def ord_A by auto
  moreover
  have "b *\<^sup>A (b \<rightarrow>\<^sup>A a) = a"
    using assms(1-3) divisibility hoop_order_def hoop_order_strict_def by simp
  moreover
  have "b \<le>\<^sup>A (b \<rightarrow>\<^sup>A a) \<or> (b \<rightarrow>\<^sup>A a) \<le>\<^sup>A b"
    using DiffD1 assms(1,2) imp_closed ord_reflex total_order by metis
  ultimately
  have "b *\<^sup>A (b \<rightarrow>\<^sup>A a) \<noteq> b \<and>\<^sup>A (b \<rightarrow>\<^sup>A a)"
    using assms(1-3) hoop_order_strict_def imp_closed inf_comm inf_order by force
  then
  show "F (b \<rightarrow>\<^sup>A a) = F b"
    using LEMMA_3_3_5 assms(1-3) imp_closed ord_D by blast
qed



lemma rel_F_reflex:
  assumes "a \<in> A"
  shows "a \<sim>F a"
  using rel_F_def by auto

lemma rel_F_symm: 
  assumes "a \<in> A" "b \<in> A" "a \<sim>F b"
  shows "b \<sim>F a"
  using assms rel_F_def by auto

lemma rel_F_trans:
  assumes "a \<in> A" "b \<in> A" "c \<in> A" "a \<sim>F b" "b \<sim>F c"
  shows "a \<sim>F c"
  using assms rel_F_def by auto


lemma rel_F_equiv: 
  assumes "a \<in> A" "b \<in> A"
  shows "(a \<sim>F b) = (F a = F b)"
proof 
  assume "a \<sim>F b"
  then
  consider (1) "a \<noteq> 1\<^sup>A" "b \<noteq> 1\<^sup>A"
    | (2) "a = 1\<^sup>A" "b = 1\<^sup>A"
    using assms imp_one_C rel_F_def by fastforce
  then
  show "F a = F b"
  proof(cases)
    case 1
    then 
    show ?thesis
  next
    case 2
    then
    show ?thesis
      by simp
  qed
next
  assume "F a = F b"
  then
  consider (1) "a \<noteq> 1\<^sup>A" "b \<noteq> 1\<^sup>A"
    | (2) "a = 1\<^sup>A" "b = 1\<^sup>A"
    using F_of_one assms by blast
  then
  show "a \<sim>F b"
  proof(cases)
    case 1
    then
    show ?thesis
  next
    case 2
    then
    show ?thesis
      using rel_F_reflex by simp
  qed
qed


lemma class_one: "\<pi> 1\<^sup>A = {1\<^sup>A}"
  using imp_one_C rel_F_canonical_map_def rel_F_def by auto

lemma classes_subsets:
  assumes "a \<in> A"
  shows "\<pi> a \<subseteq> A"
  using rel_F_canonical_map_def by simp

lemma classes_not_empty:
  assumes "a \<in> A"
  shows "a \<in> \<pi> a"
  using assms rel_F_canonical_map_def rel_F_reflex by simp

corollary class_not_one:
  assumes "a \<in> A-{1\<^sup>A}"
  shows "\<pi> a \<noteq> {1\<^sup>A}"
  using assms classes_not_empty by blast

lemma classes_disjoint: 
  assumes "a \<in> A" "b \<in> A" "\<pi> a \<inter> \<pi> b \<noteq> \<emptyset>"
  shows "\<pi> a = \<pi> b"
  using assms rel_F_canonical_map_def rel_F_def rel_F_trans by force

lemma classes_cover: "A = {x. \<exists> y \<in> A. x \<in> \<pi> y}"
  using classes_subsets classes_not_empty by auto

lemma classes_convex:
  assumes "a \<in> A" "b \<in> A" "c \<in> A" "d \<in> A" "b \<in> \<pi> a" "c \<in> \<pi> a" "b \<le>\<^sup>A d" "d \<le>\<^sup>A c" 
  shows "d \<in> \<pi> a"
proof -
  have eq_F: "F a = F b \<and> F a = F c"
    using assms(1,5,6) rel_F_canonical_map_def rel_F_equiv by auto
  from assms 
  consider (1) "c = 1\<^sup>A"
    | (2) "c \<noteq> 1\<^sup>A"
    by auto
  then 
  show ?thesis
  proof(cases)
    case 1 
    then
    have "b = 1\<^sup>A"
      using F_of_one eq_F assms(2) by auto
    then
    show ?thesis
      using "1" assms(2,4,5,7,8) ord_antisymm by blast
  next
    case 2
    then 
    have "b \<noteq> 1\<^sup>A \<and> c \<noteq> 1\<^sup>A \<and> d \<noteq> 1\<^sup>A"
      using eq_F assms(3,8) ord_antisymm ord_top by auto
    then
    have "F b \<subseteq> F d \<and> F d \<subseteq> F c"
      using LEMMA_3_3_3 assms(2-4,7,8) by simp
    then
    have "F a = F d"
      using eq_F by blast
    then
    have "a \<sim>F d"
      using assms(1,4) rel_F_equiv by simp
    then
    show ?thesis
      using assms(4) rel_F_canonical_map_def by simp
  qed
qed

lemma related_iff_same_class:
  assumes "a \<in> A" "b \<in> A"
  shows "a \<sim>F b \<longleftrightarrow> \<pi> a = \<pi> b"
proof 
  assume "a \<sim>F b"
  then
  have "a = 1\<^sup>A \<longleftrightarrow> b = 1\<^sup>A"
    using assms imp_one_C imp_reflex rel_F_def by metis
  then
  have "(a = 1\<^sup>A \<and> b = 1\<^sup>A) \<or> (a \<noteq> 1\<^sup>A \<and> b \<noteq> 1\<^sup>A)"
    by auto
  then
  show "\<pi> a = \<pi> b"
next
  show "\<pi> a = \<pi> b \<Longrightarrow> a \<sim>F b"
    using assms(2) classes_not_empty rel_F_canonical_map_def by auto
qed

corollary same_F_iff_same_class:
  assumes "a \<in> A" "b \<in> A"
  shows "F a = F b \<longleftrightarrow> \<pi> a = \<pi> b"
  using assms rel_F_equiv related_iff_same_class by auto

end



locale totally_ordered_irreducible_hoop = totally_ordered_hoop +
  assumes irreducible:  "\<nexists> B C. 
    (A = B \<union> C) \<and>
    ({1\<^sup>A} = B \<inter> C) \<and>
    (\<exists> y \<in> B. y \<noteq> 1\<^sup>A) \<and>
    (\<exists> y \<in> C. y \<noteq> 1\<^sup>A) \<and>
