theory Example_A
  imports "../Classifying_Markov_Chain_States"
begin



datatype state = A | B | C1 | C2 | C3


lemma UNIV_state: "UNIV = {A, B, C1, C2, C3}"
  using state.nchotomy by auto

instance state :: finite
  by standard (simp add: UNIV_state)


definition tau :: "state \<Rightarrow> state \<Rightarrow> real" where
  "tau s t = (case (s, t) of
      (A,  B)  \<Rightarrow> 1 / 2 | (A,  C1) \<Rightarrow> 1 / 2
    | (B,  B)  \<Rightarrow> 1 / 2 | (B,  C1) \<Rightarrow> 1 / 2
    | (C1, C1) \<Rightarrow> 1 / 3 | (C1, C2) \<Rightarrow> 1 / 3 | (C1, C3) \<Rightarrow> 1 / 3
    | (C2, C1) \<Rightarrow> 1 / 3 | (C2, C2) \<Rightarrow> 1 / 3 | (C2, C3) \<Rightarrow> 1 / 3
    | (C3, C1) \<Rightarrow> 1 / 4 | (C3, C2) \<Rightarrow> 1 / 4 | (C3, C3) \<Rightarrow> 1 / 2
    | _ \<Rightarrow> 0)"

lift_definition K :: "state \<Rightarrow> state pmf" is tau
  by (auto simp: tau_def nn_integral_count_space_finite UNIV_state split: state.split simp del: ennreal_plus)

  provides us with the necessary simplifier setup.\<close>
subsection \<open>The essential classs @{term "{C1, C2, C3}"}\<close>
subsection \<open>The stationary distribution \<open>n\<close>\<close>
text \<open>Similar to \<open>tau\<close> we introduce \<open>n\<close> using the \<open>finite_pmf\<close>-locale.\<close>
