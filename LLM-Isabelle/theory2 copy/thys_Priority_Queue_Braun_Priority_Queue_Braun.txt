theory Priority_Queue_Braun
imports
  "HOL-Library.Tree_Multiset"
  "HOL-Library.Pattern_Aliases"
  "HOL-Data_Structures.Priority_Queue_Specs"
  "HOL-Data_Structures.Braun_Tree"
begin

subsection "Introduction"

specific balanced binary trees, often called Braun trees (where in
each node with subtrees $l$ and $r$, $size(r) \le size(l) \le
(based on code supplied by Okasaki)
implemented priority queues via Braun trees. This theory verifies
Paulsons's implementation, with small simplifications.\<close>
text \<open>Direct proof of logarithmic height. Also follows from the fact that Braun
trees are balanced (proved in the base theory).\<close>
subsection \<open>Insertion\<close>
subsection \<open>Deletion\<close>
text \<open>Slightly simpler definition of @{text del_left}
which avoids the need to appeal to the Braun invariant.\<close>
text \<open>Slightly simpler definition: \<open>_\<close> instead of @{const Leaf} because of Braun invariant.\<close>
text \<open>Last step: prove all axioms of the priority queue specification:\<close>
    have 1: "height l' \<le> height l" by (simp add: \<open>l \<noteq> \<langle>\<rangle>\<close> del_left_height)
    have "braun \<langle>r, y, l'\<rangle>" using del_left_braun[of l y l'] \<open>l \<noteq> \<langle>\<rangle>\<close> assms del_left_size[of l] by auto
      using \<open>l \<noteq> Leaf\<close> by(simp add: T_del_min_neq_Leaf)
      using T_del_left_height[OF \<open>l \<noteq> Leaf\<close>] by linarith
      using T_sift_down_height[OF \<open>braun \<langle>r, y, l'\<rangle>\<close>, of y] by linarith
