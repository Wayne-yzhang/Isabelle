theory POTS                                               
  imports CSPM 
begin 

instantiation int :: discrete_cpo
begin

definition below_int_def:
  "(x::int) \<sqsubseteq> y \<longleftrightarrow> x = y"

instance proof
qed (rule below_int_def)

end





datatype MtcO = Osetup | Odiscon_o
datatype MctO = Obusy  | Oalert    | Oconnect | Odiscon_t
datatype MtcT = Tbusy  | Talert    | Tconnect | Tdiscon_t
datatype MctT = Tsetup | Tdiscon_o



                  | terminal    Phones 
                  | off_hook    Phones     
                  | on_hook     Phones      
                  | tone_ring   Phones    
                  | tone_quiet  Phones   
                  | tone_busy   Phones
                  | tone_dial   Phones    
                  | connected   Phones


locale POTS = 
  fixes min_phones :: int
    and max_phones :: int
begin


  apply (simp_all add: phones_def)
  using max_phones_g_min_phones apply linarith+
  by (metis atLeastAtMost_iff less_le_not_le max_phones_g_min_phones order_refl singletonD subsetD)








abbreviation



abbreviation



abbreviation
where 


definition
where



where










where












where



where










                                


end

end