This theory combines Kleene algebras with Stone relation algebras.
The weakening to Stone relation algebras allows us to talk about reachability in weighted graphs, for example.

Many results in this theory are used in the correctness proof of Prim's minimum spanning tree algorithm.
In particular, they are concerned with the exchange property, preservation of parts of the invariant and with establishing parts of the postcondition.
\<close>
text \<open>
We first note that bounded distributive lattices can be expanded to Kleene algebras by reusing some of the operations.
\<close>
text \<open>
We add the Kleene star operation to each of bounded distributive allegories, pseudocomplemented distributive allegories and Stone relation algebras.
We start with single-object bounded distributive allegories.
\<close>
text \<open>
It follows that star and converse commute.
\<close>
text \<open>Lemma \<open>reflexive_inf_star\<close> was contributed by Nicolas Robinson-O'Brien.\<close>
text \<open>
The following results are variants of a separation lemma of Kleene algebras.
\<close>
text \<open>
We show several results about the interaction of vectors and the Kleene star.
\<close>
text \<open>
The following equivalence relation characterises the component trees of a forest.
This is a special case of undirected reachability in a directed graph.
\<close>
text \<open>
The following lemma shows that the nodes reachable in the graph can be reached by only using edges between reachable nodes.
\<close>
text \<open>
We next add the Kleene star to single-object pseudocomplemented distributive allegories.
\<close>
text \<open>
The following definitions and results concern acyclic graphs and forests.
\<close>
text \<open>
The following definition captures the components of undirected weighted graphs.
\<close>
text \<open>
The following lemma shows that the predecessors of visited nodes in the minimum spanning tree extending the current tree have all been visited.
\<close>
subsection \<open>Prim's Algorithm\<close>
text \<open>
The following results are used for proving the correctness of Prim's minimum spanning tree algorithm.
\<close>
subsubsection \<open>Preservation of Invariant\<close>
text \<open>
We first treat the preservation of the invariant.
The exchange property is treated in the following two sections.
\<close>
text \<open>
The next result is used to show that the while-loop preserves acyclicity of the constructed tree.
\<close>
text \<open>
The following lemma shows that the extended tree is in the component reachable from the root.
\<close>
subsubsection \<open>Exchange gives Spanning Trees\<close>
text \<open>
The following abbreviations are used in the spanning tree application using Prim's algorithm to construct the new tree for the exchange property.
It is obtained by replacing an edge with one that has minimal weight and reversing the path connecting these edges.
Here, w represents a weighted graph, v represents a set of nodes and e represents an edge.
\<close>
text \<open>
The lemmas in this section are used to show that the relation after exchange represents a spanning tree.
The results in the next section are used to show that it is a minimum spanning tree.
\<close>
text \<open>
The graph after exchanging is injective.
\<close>
text \<open>
The graph after exchanging is acyclic.
\<close>
text \<open>
The following lemma shows that an edge across the cut between visited nodes and unvisited nodes does not leave the component of visited nodes.
\<close>
text \<open>
The following lemmas show that the tree after exchanging contains the currently constructed and tree and its extension by the chosen edge.
\<close>
text \<open>Lemmas \<open>forests_bot_1\<close>, \<open>forests_bot_2\<close>, \<open>forests_bot_3\<close> and \<open>fc_comp_eq_fc\<close> were contributed by Nicolas Robinson-O'Brien.\<close>
text \<open>
We finally add the Kleene star to Stone relation algebras.
Kleene star and the relational operations are reasonably independent.
The only additional axiom we need in the generalisation to Stone-Kleene relation algebras is that star distributes over double complement.
\<close>
text \<open>
The following lemma shows that the nodes reachable in the tree after exchange contain the nodes reachable in the tree before exchange.
\<close>
text \<open>
Some of the following lemmas already hold in pseudocomplemented distributive Kleene allegories.
\<close>
subsubsection \<open>Exchange gives Minimum Spanning Trees\<close>
text \<open>
The lemmas in this section are used to show that the after exchange we obtain a minimum spanning tree.
The following lemmas show various interactions between the three constituents of the tree after exchange.
\<close>
text \<open>
The following lemmas show that the relation characterising the edge across the cut is an arc.
\<close>
subsubsection \<open>Invariant implies Postcondition\<close>
text \<open>
The lemmas in this section are used to show that the invariant implies the postcondition at the end of the algorithm.
The following lemma shows that the nodes reachable in the graph are the same as those reachable in the constructed tree.
\<close>
text \<open>
The following lemma shows that the minimum spanning tree extending a tree is the same as the tree at the end of the algorithm.
\<close>
subsection \<open>Kruskal's Algorithm\<close>
text \<open>
The following results are used for proving the correctness of Kruskal's minimum spanning tree algorithm.
\<close>
subsubsection \<open>Preservation of Invariant\<close>
text \<open>
We first treat the preservation of the invariant.
\<close>
subsubsection \<open>Exchange gives Spanning Trees\<close>
text \<open>
The lemmas in this section are used to show that the relation after exchange represents a spanning tree.
\<close>
subsubsection \<open>Exchange gives Minimum Spanning Trees\<close>
text \<open>
The lemmas in this section are used to show that the after exchange we obtain a minimum spanning tree.
The following lemmas show that the relation characterising the edge across the cut is an arc.
\<close>
subsection \<open>Related Structures\<close>
text \<open>
Stone algebras can be expanded to Stone-Kleene relation algebras by reusing some operations.
\<close>
text \<open>
Every bounded linear order can be expanded to a Stone algebra, which can be expanded to a Stone relation algebra, which can be expanded to a Stone-Kleene relation algebra.
\<close>
text \<open>
A Kleene relation algebra is based on a relation algebra.
\<close>
