theory Toy_Library_Static
imports Main
begin


definition "map_of_list = (foldl ((\<lambda>map. (\<lambda>(x , l1). (case (map (x)) of None \<Rightarrow> (map (x \<mapsto> l1))
    | Some l0 \<Rightarrow> (map (x \<mapsto> (concat ([l0 , l1])))))))) (Map.empty))"

definition "choose_0 = fst"
definition "choose_1 = snd"

definition "deref_assocs_list to_from oid S =
  concat (map (choose_1 o to_from) (filter (\<lambda>p. List.member (choose_0 (to_from p)) oid) S))"

end
