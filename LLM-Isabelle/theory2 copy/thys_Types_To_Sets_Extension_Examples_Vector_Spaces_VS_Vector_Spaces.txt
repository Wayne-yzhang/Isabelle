theory VS_Vector_Spaces
  imports VS_Modules
begin




locale vector_space_with = ab_group_add plus\<^sub>V\<^sub>S zero\<^sub>V\<^sub>S minus\<^sub>V\<^sub>S uminus\<^sub>V\<^sub>S
  fixes scale :: "['f::field, 'vs] \<Rightarrow> 'vs" (infixr "*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h" 75)
  assumes scale_right_distrib[algebra_simps]: 
    "a *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h (x +\<^sub>V\<^sub>S y) = a *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h x +\<^sub>V\<^sub>S a *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h y"
    and scale_left_distrib[algebra_simps]:
      "(a + b) *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h x = a *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h x +\<^sub>V\<^sub>S b *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h x"
    and scale_scale[simp]: "a *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h (b *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h x) = (a * b) *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h x"
    and scale_one[simp]: "1 *s\<^sub>w\<^sub>i\<^sub>t\<^sub>h x = x"
begin

  and scale (infixr "*s\<^sub>w\<^sub>i\<^sub>t\<^sub>h" 75)
  
end

lemma vector_space_with_overloaded[ud_with]: 
  "vector_space = vector_space_with (+) 0 (-) uminus"
  unfolding vector_space_def vector_space_with_def vector_space_with_axioms_def
  by (simp add: field_axioms ab_group_add_axioms)

locale vector_space_pair_with =
  VS\<^sub>1: vector_space_with plus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 zero\<^sub>V\<^sub>S\<^sub>_\<^sub>1 minus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 uminus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 scale\<^sub>1 +
  VS\<^sub>2: vector_space_with plus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 zero\<^sub>V\<^sub>S\<^sub>_\<^sub>2 minus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 uminus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 scale\<^sub>2

lemma vector_space_pair_with_overloaded[ud_with]: 
  "vector_space_pair = 
    (
      \<lambda>scale\<^sub>1 scale\<^sub>2. 
        vector_space_pair_with (+) 0 (-) uminus scale\<^sub>1 (+) 0 (-) uminus scale\<^sub>2
    )"
  unfolding vector_space_pair_def vector_space_pair_with_def 
  unfolding vector_space_with_overloaded
  ..

locale linear_with =
  VS\<^sub>1: vector_space_with plus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 zero\<^sub>V\<^sub>S\<^sub>_\<^sub>1 minus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 uminus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 scale\<^sub>1 +
  VS\<^sub>2: vector_space_with plus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 zero\<^sub>V\<^sub>S\<^sub>_\<^sub>2 minus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 uminus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 scale\<^sub>2 +
  module_hom_with 
    plus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 zero\<^sub>V\<^sub>S\<^sub>_\<^sub>1 minus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 uminus\<^sub>V\<^sub>S\<^sub>_\<^sub>1 scale\<^sub>1
    plus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 zero\<^sub>V\<^sub>S\<^sub>_\<^sub>2 minus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 uminus\<^sub>V\<^sub>S\<^sub>_\<^sub>2 scale\<^sub>2
    f 
    and f :: "'vs_1 \<Rightarrow> 'vs_2"

lemma linear_with_overloaded[ud_with]: 
  "Vector_Spaces.linear = 
    (
      \<lambda>scale\<^sub>1 scale\<^sub>2. 
        linear_with (+) 0 (-) uminus scale\<^sub>1 (+) 0 (-) uminus scale\<^sub>2
    )"
  unfolding 
    Vector_Spaces.linear_def linear_with_def 
    vector_space_with_overloaded module_hom_with_overloaded
  ..

locale finite_dimensional_vector_space_with = 
  vector_space_with plus\<^sub>V\<^sub>S zero\<^sub>V\<^sub>S minus\<^sub>V\<^sub>S uminus\<^sub>V\<^sub>S scale
  for plus\<^sub>V\<^sub>S :: "['vs, 'vs] \<Rightarrow> 'vs"
    and zero\<^sub>V\<^sub>S 
    and minus\<^sub>V\<^sub>S 
    and uminus\<^sub>V\<^sub>S 
    and scale :: "['f::field, 'vs] \<Rightarrow> 'vs" +
  fixes basis :: "'vs set"
  assumes finite_basis: "finite basis"
