    Based on the Jinja theory BV/BVExec.thy by Tobias Nipkow and Gerwin Klein
*)
(*<*) (is "PROP ?P")
(*>*)
(*<*) (is "PROP ?P")
(*<*)
(*
proof -
  let ?n = "length is"
  have "Semilat A r f" using semilat_JVM[OF wf]
    by (simp add: Semilat.intro sl_def2)
  moreover have "acc r" using wf by simp blast
  moreover have "top r Err" by (simp add: JVM_le_unfold)
  moreover have "pres_type step ?n A" by (rule exec_pres_type)
  moreover have "bounded step ?n" by (rule bounded_step)
  moreover have "mono r step ?n A" using step_mono[OF wf] by simp
  ultimately have "is_bcv r Err step ?n A (kildall r f step)"
    by(rule is_bcv_kildall)
  moreover have kileq: "kiljvm P mxs mxl T\<^sub>r is xt = kildall r f step"
    using f_def kiljvm_def r_def step_def_exec by blast
  ultimately show ?thesis by simp
qed
*)
(*>*)
(* FIXME: move? *)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
(*<*)
(*>*)
