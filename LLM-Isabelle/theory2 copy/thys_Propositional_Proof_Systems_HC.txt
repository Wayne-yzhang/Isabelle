theory HC
imports Formulas
begin

inductive HC :: "'a formula  set \<Rightarrow> 'a formula \<Rightarrow> bool" (infix "\<turnstile>\<^sub>H" 30) for \<Gamma> :: "'a formula set" where
Ax: "F \<in> \<Gamma> \<Longrightarrow> \<Gamma> \<turnstile>\<^sub>H F" |
MP: "\<Gamma> \<turnstile>\<^sub>H F \<Longrightarrow> \<Gamma> \<turnstile>\<^sub>H F \<^bold>\<rightarrow> G \<Longrightarrow> \<Gamma> \<turnstile>\<^sub>H G"

context begin

inductive_set AX0 where
"F \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> F) \<in> AX0" |
"(F \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> H)) \<^bold>\<rightarrow> ((F \<^bold>\<rightarrow> G) \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> H)) \<in> AX0"
inductive_set AX10 where
"F \<in> AX0 \<Longrightarrow> F \<in> AX10" |
"F \<^bold>\<rightarrow> (F \<^bold>\<or> G) \<in> AX10" |
"G \<^bold>\<rightarrow> (F \<^bold>\<or> G) \<in> AX10" |
"(F \<^bold>\<rightarrow> H) \<^bold>\<rightarrow> ((G \<^bold>\<rightarrow> H) \<^bold>\<rightarrow> ((F \<^bold>\<or> G) \<^bold>\<rightarrow> H)) \<in> AX10" |
"(F \<^bold>\<and> G) \<^bold>\<rightarrow> F \<in> AX10" | 
"(F \<^bold>\<and> G) \<^bold>\<rightarrow> G \<in> AX10" |
"F \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> (F \<^bold>\<and> G)) \<in> AX10" |
"(F \<^bold>\<rightarrow> \<bottom>) \<^bold>\<rightarrow> \<^bold>\<not>F \<in> AX10" |
"\<^bold>\<not>F \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> \<bottom>) \<in> AX10" |
"(\<^bold>\<not>F \<^bold>\<rightarrow> \<bottom>) \<^bold>\<rightarrow> F \<in> AX10"
lemmas HC_intros[intro!] = 
  AX0.intros[THEN HC.intros(1)]
  AX0.intros[THEN AX10.intros(1), THEN HC.intros(1)]
  AX10.intros(2-)[THEN HC.intros(1)]

inductive_set AXH where
  "(F \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> F)) \<in> AXH" |
  "(F \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> G)) \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> G) \<in> AXH" |
  "(F \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> H)) \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> H)) \<in> AXH" |
  "(G \<^bold>\<rightarrow> H) \<^bold>\<rightarrow> ((F \<^bold>\<rightarrow> G) \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> H)) \<in> AXH"

lemma HC_mono: "S \<turnstile>\<^sub>H F \<Longrightarrow> S \<subseteq> T \<Longrightarrow> T \<turnstile>\<^sub>H F"
  by(induction rule: HC.induct) (auto intro: HC.intros)
lemma AX010: "AX0 \<subseteq> AX10"
  apply(rule)
  apply(cases rule: AX0.cases, assumption)
   apply(auto intro: AX10.intros)
done
lemma AX100[simp]: "AX0 \<union> AX10 = AX10" using AX010 by blast

lemma hilbert_folgeaxiome_as_strong_as_AX0: "AX0 \<union> \<Gamma> \<turnstile>\<^sub>H F \<longleftrightarrow> AXH \<union> \<Gamma> \<turnstile>\<^sub>H F"
proof -
  have 0:
  "AX0 \<turnstile>\<^sub>H (F \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> G)) \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> G)"
  "AX0 \<turnstile>\<^sub>H (F \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> H)) \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> H))"
  "AX0 \<turnstile>\<^sub>H (G \<^bold>\<rightarrow> H) \<^bold>\<rightarrow> ((F \<^bold>\<rightarrow> G) \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> H))" 
    for F G H using HC_intros(1,2) MP by metis+
  have H:
    "AXH \<turnstile>\<^sub>H (F \<^bold>\<rightarrow> (G \<^bold>\<rightarrow> H)) \<^bold>\<rightarrow> ((F \<^bold>\<rightarrow> G) \<^bold>\<rightarrow> (F \<^bold>\<rightarrow> H))"
    for F G H
  proof -
    note AXH.intros[THEN HC.Ax]
  qed
  note * = H 0
  note * = *[THEN HC_mono, OF Un_upper1]
  proof
    assume ?Z thus ?H proof induction
      case MP thus ?case using HC.MP by blast
    next
      case (Ax F) thus ?case proof
        assume "F \<in> AX0" thus ?thesis by induction (simp_all add: AXH.intros(1) HC.Ax *)
