theory Prover imports "Abstract_Completeness.Abstract_Completeness" Encoding Fair_Stream begin

  by pat_completeness auto


  unfolding rules_def using UNIV_stream surj_rule_of_nat .

  by unfold_locales (auto simp: UNIV_rules intro: exI[of _ Idle])

lemma per_rules':
  using assms by (cases r r' rule: rule.exhaust[case_product rule.exhaust])
    (unfold enabled_def, auto split: if_splits)

  unfolding per_def UNIV_rules using per_rules' by fast

  using per_rules by unfold_locales


end
