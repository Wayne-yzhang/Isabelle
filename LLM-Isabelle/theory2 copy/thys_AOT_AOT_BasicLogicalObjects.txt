theory AOT_BasicLogicalObjects
  imports AOT_PLM
begin



  using  "tv-p"[THEN "\<equiv>Df"]
     (simp add: "A-objects"[axiom_inst])


  using  "tv-p"[THEN "\<equiv>Df"]
     (simp add: "A-objects!")


  using "A-Exists:2" "RA[2]" "\<equiv>E"(2) "p-has-!tv:2" by blast



proof -
    by (rule RN; rule GEN; rule "tv-p"[THEN "\<equiv>Df"])
    using "equiv-desc-eq:3"[THEN "\<rightarrow>E", OF "&I", OF "uni-tv"] by simp
  thus ?thesis
    using "=\<^sub>d\<^sub>fI"(1)[OF "the-tv-p", OF "uni-tv"] by fast
qed

proof -
  AOT_modally_strict {
      by (auto simp: "prop-prop2:2" "rule=I:1" intro!: "\<equiv>I" "\<rightarrow>I" "&I")
      using "\<exists>I" by fast
  }
    using "RA[2]" by blast
    by (safe intro!: "desc-nec-encode:1"[unvarify F, THEN "\<equiv>E"(2)] "cqt:2")
    by (safe intro!: "prop-enc"[THEN "\<equiv>\<^sub>d\<^sub>fI"] "&I" "A-descriptions")
    by (rule "rule=E"[rotated, OF "tv-id:1"[symmetric]])
qed


AOT_theorem "TV-lem1:1":
proof(safe intro!: "\<equiv>I" "\<rightarrow>I" GEN)
  fix F
  moreover AOT_assume p
    by (metis "&I" "&E"(1) "&E"(2) "deduction-theorem" "\<equiv>I")
next
  fix F
  moreover AOT_assume p
    by (metis "&I" "&E"(1) "&E"(2) "\<equiv>E"(2))
next
    using "\<forall>E"(1)[rotated, OF "prop-prop2:2"] by blast
    by (rule "\<exists>I"(2)[where \<beta>=p])
       (simp add: "rule=I:1" "&I" "oth-class-taut:3:a" "prop-prop2:2")
    using "rule=E" "&E"(1) "&E"(2) id_sym "\<equiv>E"(2) "p-identity-thm2:3" by fast
qed

AOT_theorem "TV-lem1:2":
proof(safe intro!: "\<equiv>I" "\<rightarrow>I" GEN)
  fix F
    by (metis "&I" "&E"(1) "&E"(2) "deduction-theorem" "\<equiv>I" "raa-cor:3")
next
  fix F
    by (metis "&I" "&E"(1) "&E"(2) "\<equiv>E"(1) "raa-cor:3")
next
    using "\<forall>E"(1)[rotated, OF "prop-prop2:2"] by blast
    by (rule "\<exists>I"(2)[where \<beta>=p])
       (simp add: "rule=I:1" "&I" "oth-class-taut:3:a" "prop-prop2:2")
    using "rule=E" "&E"(1) "&E"(2) id_sym "\<equiv>E"(2) "p-identity-thm2:3" by fast
qed




proof -
    using "rule-id-df:1" "the-tv-p" "uni-tv" by blast
    using "t=t-proper:1" calculation "vdash-properties:10" by blast
  ultimately show ?thesis by (metis "rule=E" id_sym "vdash-properties:10" "y-in:3")
qed

  using "T-lem:1"[THEN "tv-p"[THEN "\<equiv>\<^sub>d\<^sub>fE"], THEN "&E"(2)].

proof -
    using "T-lem:2"[THEN "\<forall>E"(1), OF "prop-prop2:2"].
  show ?thesis
  proof(rule "\<equiv>I"; rule "\<rightarrow>I")
      using "&E"(2) "\<equiv>E"(2) "p-identity-thm2:3" by blast
      by (metis "rule=E" "&E"(1) "\<equiv>E"(6) "oth-class-taut:3:a")
  next
      by (simp add: "rule=I:1" "prop-prop2:2")
      by (metis "\<equiv>\<^sub>d\<^sub>fI" "&I" "prop-enc" "russell-axiom[enc,1].\<psi>_denotes_asm")
  qed
qed

proof -
    by (simp add: "fund-cont-desc" GEN)
    using "\<equiv>\<^sub>d\<^sub>fE" "tv-id:2" "&E"(1) "prop-enc" by blast
  ultimately AOT_have
    using "\<forall>E"(1) by blast
    using "\<equiv>E"(1) "rule-id-df:1" "the-tv-p" "uni-tv" by blast
qed



AOT_theorem "TV-lem2:1":
proof(safe intro!: "\<rightarrow>I" "T-value"[THEN "\<equiv>\<^sub>d\<^sub>fI"] "tv-p"[THEN "\<equiv>\<^sub>d\<^sub>fI"]
                   "\<exists>I"(1)[rotated, OF "log-prop-prop:2"])
    apply (metis (no_types, lifting) "\<rightarrow>I" "\<equiv>I" "\<equiv>E"(2) GEN)
    by (auto simp: "cqt-further:7")
qed

AOT_theorem "TV-lem2:2":
proof(safe intro!: "\<rightarrow>I" "T-value"[THEN "\<equiv>\<^sub>d\<^sub>fI"] "tv-p"[THEN "\<equiv>\<^sub>d\<^sub>fI"]
                   "\<exists>I"(1)[rotated, OF "log-prop-prop:2"])
      apply (metis (no_types, lifting)
        "\<rightarrow>I" "\<exists>E" "\<equiv>E"(1) "\<equiv>I" "raa-cor:1" "raa-cor:3")
    by (auto simp add: "cqt-further:7")
qed



proof(safe intro!: "ab-obey:2"[unvarify x y, THEN "\<rightarrow>E", rotated 2, OF "\<or>I"(1)]
    by (simp add: "A-descriptions" "rule-id-df:1[zero]" "the-true:2")
    by (meson "\<rightarrow>E" "t=t-proper:1" "A-descriptions"
              "rule-id-df:1[zero]" "the-true:2")
    using "nec-hintikka-scheme"[unvarify x, THEN "\<equiv>E"(1), THEN "&E"(1)] by blast
    using "Act-Basic:2" "&E"(2) "\<equiv>E"(1) by blast
    using "\<equiv>E"(1) "logic-actual-nec:3"[axiom_inst] by blast
  AOT_hence false_enc_cond:
    using "\<forall>E"(1)[rotated, OF "prop-prop2:2"] by blast

    by (simp add: "A-descriptions" "rule-id-df:1[zero]" "the-true:1")
    by (meson "t=t-proper:1" "A-descriptions" "rule-id-df:1[zero]" "the-true:1" "\<rightarrow>E")
    using "nec-hintikka-scheme"[unvarify x, THEN "\<equiv>E"(1), THEN "&E"(1)]  by blast
    using "Act-Basic:2" "&E"(2) "\<equiv>E"(1) by blast
    using "\<equiv>E"(1) "logic-actual-nec:3"[axiom_inst] by blast
    using "\<forall>E"(1)[rotated, OF "prop-prop2:2"] by blast
    by (safe intro!: "nec-imp-act"[THEN "\<rightarrow>E"] RN "\<exists>I"(1)[where \<tau>="\<guillemotleft>\<forall>q(q \<rightarrow> q)\<guillemotright>"] "&I"
                     GEN "\<rightarrow>I" "log-prop-prop:2" "rule=I:1" "prop-prop2:2")
    using "Act-Basic:5" "\<equiv>E"(1,2) by blast
    using "en-eq:10[1]"[unvarify x\<^sub>1 F, THEN "\<equiv>E"(1)] true_den "prop-prop2:2" by blast

  proof(rule "raa-cor:2")
      using "en-eq:10[1]"[unvarify x\<^sub>1 F, THEN "\<equiv>E"(2)]
            false_den "prop-prop2:2" by blast
      using false_enc_cond "Act-Basic:5" "\<equiv>E"(1) by blast
      using "Act-Basic:10" "\<equiv>E"(1) by blast
      using "\<exists>E"[rotated] by blast
      by (metis "Act-Basic:2" "&E"(2) "\<equiv>E"(1))
      using "id-act:1"[unvarify \<alpha> \<beta>, THEN "\<equiv>E"(2)] "prop-prop2:2" by blast
      using "p-identity-thm2:3"[unvarify p, THEN "\<equiv>E"(2)]
            "log-prop-prop:2" by blast
      using "Act-Basic:2" "&E"(1) "\<equiv>E"(1) by blast
      by (metis "Act-Sub:1" "\<equiv>E"(1,2) "raa-cor:3" "rule=E")
      by (meson "Act-Sub:1" "RA[2]" "if-p-then-p" "\<equiv>E"(1) "universal-cor")
      using "&I" by blast
  qed
qed

proof -
    by (simp add: "A-descriptions" "rule-id-df:1[zero]" "the-true:1")
    using "t=t-proper:1" "vdash-properties:6" by blast
    using "y-in:2"[unvarify z, OF true_den, THEN "\<rightarrow>E", OF true_def]
          "TV-lem2:1"[unvarify x, OF true_den, THEN "\<rightarrow>E"] by blast
qed

proof -
    by (simp add: "A-descriptions" "rule-id-df:1[zero]" "the-true:2")
    using "t=t-proper:1" "vdash-properties:6" by blast
    using "y-in:2"[unvarify z, OF false_den, THEN "\<rightarrow>E", OF false_def]
          "TV-lem2:2"[unvarify x, OF false_den, THEN "\<rightarrow>E"] by blast
qed

proof -
    using "A-objects"[axiom_inst] "\<exists>E"[rotated] by fast
    using "A-objects"[axiom_inst] "\<exists>E"[rotated] by fast
  AOT_obtain p where p: p
    by (metis "log-prop-prop:2" "raa-cor:3" "rule-ui:1" "universal-cor")
  show ?thesis
  proof(rule "\<exists>I"(2)[where \<beta>=a]; rule "\<exists>I"(2)[where \<beta>=b];
        safe intro!: "&I" GEN "\<rightarrow>I")
      using "TV-lem2:1" a_prop "vdash-properties:10" by blast
  next
      using "TV-lem2:2" b_prop "vdash-properties:10" by blast
  next
    proof(rule "ab-obey:2"[THEN "\<rightarrow>E", OF "\<or>I"(1)])
      proof(rule "\<exists>I"(1)[where \<tau>="\<guillemotleft>[\<lambda>y p]\<guillemotright>"]; rule "&I" "prop-prop2:2")
          by(safe intro!: "\<exists>I"(2)[where \<beta>=p] "&I" p "rule=I:1"[OF "prop-prop2:2"]
              a_prop[THEN "&E"(2), THEN "\<forall>E"(1), THEN "\<equiv>E"(2), OF "prop-prop2:2"])
      next
        proof (rule "raa-cor:2")
            using "\<forall>E"(1)[rotated, OF "prop-prop2:2", THEN "\<equiv>E"(1)]
                  b_prop[THEN "&E"(2)] by fast
            using "\<exists>E"[rotated] by blast
            by (metis "rule=E" "&E"(1) "&E"(2) "deduction-theorem" "\<equiv>I"
                      "\<equiv>E"(2) "p-identity-thm2:3" "raa-cor:3")
        qed
      qed
    qed
  next
    fix z
      by (metis "\<equiv>\<^sub>d\<^sub>fE" "T-value")
      using "\<equiv>\<^sub>d\<^sub>fE" "tv-p" by blast
    {
      proof(rule "ab-obey:1"[THEN "\<rightarrow>E", THEN "\<rightarrow>E", OF "&I",
                             OF z_prop[THEN "&E"(1)], OF a_prop[THEN "&E"(1)]];
            rule GEN)
        fix G
          using z_prop[THEN "&E"(2)] "\<forall>E"(2) by blast
          using "TV-lem1:1"[THEN "\<equiv>E"(1), OF p, THEN "\<forall>E"(2)[where \<beta>=G], symmetric].
          using a_prop[THEN "&E"(2), THEN "\<forall>E"(2)[where \<beta>=G], symmetric].
      qed
    }
    moreover {
      proof(rule "ab-obey:1"[THEN "\<rightarrow>E", THEN "\<rightarrow>E", OF "&I",
                             OF z_prop[THEN "&E"(1)], OF b_prop[THEN "&E"(1)]];
            rule GEN)
        fix G
          using z_prop[THEN "&E"(2)] "\<forall>E"(2) by blast
          using "TV-lem1:2"[THEN "\<equiv>E"(1), OF notp, THEN "\<forall>E"(2), symmetric].
          using b_prop[THEN "&E"(2), THEN "\<forall>E"(2), symmetric].
      qed
    }
      by (metis "reductio-aa:1")
  qed
qed

proof(safe intro!: "\<rightarrow>I" dest!: "tv-p"[THEN "\<equiv>\<^sub>d\<^sub>fE"])
    using "\<exists>E" "T-T-value:1" "T-value" "&E"(1) "\<equiv>\<^sub>d\<^sub>fE" "tv-p" by blast
    by (simp add: "A-descriptions" "rule-id-df:1[zero]" "the-true:1")
    using "t=t-proper:1" "vdash-properties:6" by blast
    using "y-in:2"[unvarify z, OF true_den, THEN "\<rightarrow>E", OF true_def] "&E" by blast
  proof(safe intro!: "\<equiv>I" "\<rightarrow>I")
    AOT_assume p
      using "TV-lem1:1"[THEN "\<equiv>E"(1)] by blast
      using b "cqt-basic:10"[THEN "\<rightarrow>E", OF "&I", OF b] by fast
      using "cqt-basic:11"[THEN "\<equiv>E"(1)] by fast
      using "cqt-basic:10"[THEN "\<rightarrow>E", OF "&I", OF \<theta>[THEN "&E"(2)]] by fast
      by (rule "ab-obey:1"[unvarify y, OF true_den, THEN "\<rightarrow>E", THEN "\<rightarrow>E",
                           OF "&I", OF \<theta>[THEN "&E"(1)], OF a])
  next
      using "rule=E" \<theta>[THEN "&E"(2)] by fast
      using "cqt-basic:10"[THEN "\<rightarrow>E", OF "&I",
              OF b[THEN "cqt-basic:11"[THEN "\<equiv>E"(1)]], OF d].
    AOT_thus p using "TV-lem1:1"[THEN "\<equiv>E"(2)] by blast
  qed
qed

proof(safe intro!: "\<rightarrow>I" dest!: "tv-p"[THEN "\<equiv>\<^sub>d\<^sub>fE"])
    using "\<exists>E" "T-T-value:2" "T-value" "&E"(1) "\<equiv>\<^sub>d\<^sub>fE" "tv-p" by blast
    by (simp add: "A-descriptions" "rule-id-df:1[zero]" "the-true:2")
    using "t=t-proper:1" "vdash-properties:6" by blast
    using "y-in:2"[unvarify z, OF false_den, THEN "\<rightarrow>E", OF false_def] "&E" by blast
  proof(safe intro!: "\<equiv>I" "\<rightarrow>I")
      using "TV-lem1:2"[THEN "\<equiv>E"(1)] by blast
      using b "cqt-basic:10"[THEN "\<rightarrow>E", OF "&I", OF b] by fast
      using "cqt-basic:11"[THEN "\<equiv>E"(1)] by fast
      using "cqt-basic:10"[THEN "\<rightarrow>E", OF "&I", OF \<theta>[THEN "&E"(2)]] by fast
      by (rule "ab-obey:1"[unvarify y, OF false_den, THEN "\<rightarrow>E", THEN "\<rightarrow>E",
                           OF "&I", OF \<theta>[THEN "&E"(1)], OF a])
  next
      using "rule=E" \<theta>[THEN "&E"(2)] by fast
      using "cqt-basic:10"[THEN "\<rightarrow>E", OF "&I",
                OF b[THEN "cqt-basic:11"[THEN "\<equiv>E"(1)]], OF d].
  qed
qed

  apply (rule "valueof-facts:1"[unvarify x, THEN "\<rightarrow>E", rotated, OF "T-lem:1"])
  using "\<equiv>\<^sub>d\<^sub>fE" "tv-id:2" "&E"(1) "prop-enc" by blast

  apply (rule "valueof-facts:2"[unvarify x, THEN "\<rightarrow>E", rotated, OF "T-lem:1"])
  using "\<equiv>\<^sub>d\<^sub>fE" "tv-id:2" "&E"(1) "prop-enc" by blast

proof(safe intro!: "\<equiv>I" "\<rightarrow>I")
  AOT_assume p
    by (simp add: "tv-id:2")
    using "rule=E" "T-lem:4" by fast
next
    by (simp add: "A-descriptions" "rule-id-df:1[zero]" "the-true:1")
    using "t=t-proper:1" "vdash-properties:6" by blast
    using "y-in:2"[unvarify z, OF true_den, THEN "\<rightarrow>E", OF true_def] "&E" by blast

    using b[THEN "\<forall>E"(1), OF "prop-prop2:2", THEN "\<equiv>E"(1)] by blast
    using "rule=E" "&E"(1) "&E"(2) id_sym "\<equiv>E"(2) "p-identity-thm2:3" by fast
qed


proof(safe intro!: "\<equiv>I" "\<rightarrow>I")
    by (simp add: "tv-id:2")
    using "rule=E" "T-lem:4" by fast
next
    by (simp add: "A-descriptions" "rule-id-df:1[zero]" "the-true:2")
    using "t=t-proper:1" "vdash-properties:6" by blast
    using "y-in:2"[unvarify z, OF false_den, THEN "\<rightarrow>E", OF false_def] "&E" by blast

    using b[THEN "\<forall>E"(1), OF "prop-prop2:2", THEN "\<equiv>E"(1)] by blast
    using "rule=E" "&E"(1) "&E"(2) id_sym "\<equiv>E"(2) "p-identity-thm2:3" by fast
qed

  using "q-True:5"
  by (metis "deduction-theorem" "\<equiv>I" "\<equiv>E"(2) "\<equiv>E"(4) "raa-cor:3")

  using "\<equiv>E"(1) "oth-class-taut:4:b" "q-True:3" by blast


proof (safe intro!: "\<equiv>I" "\<rightarrow>I" "tv-p"[THEN "\<equiv>\<^sub>d\<^sub>fI"] "exten-p"[THEN "\<equiv>\<^sub>d\<^sub>fI"]
            dest!: "tv-p"[THEN "\<equiv>\<^sub>d\<^sub>fE"] "exten-p"[THEN "\<equiv>\<^sub>d\<^sub>fE"])
       (auto simp add: "df-rules-formulas[3]" "df-rules-formulas[4]"
                       "\<equiv>I" "prop-prop1")
  proof(safe intro!: "&I" GEN 1[THEN "&E"(1), THEN "&E"(1)] "\<equiv>I" "\<rightarrow>I")
    fix F
      using \<theta>[THEN "&E"(1), THEN "&E"(2)] "\<forall>E"(2) "\<rightarrow>E" by blast
  next
    fix F
      using "\<exists>E"[rotated] by blast
  qed
next
  proof(safe intro!: "&I" 0[THEN "&E"(1)] GEN "\<rightarrow>I")
    fix F
      using 0[THEN "&E"(2)] "\<forall>E"(2) "\<equiv>E"(1) by blast
      using "\<exists>E"[rotated] by blast
  next
    proof(rule "\<equiv>I"; rule "\<rightarrow>I")
        using 0[THEN "&E"(2), THEN "\<forall>E"(1), OF "prop-prop2:2", THEN "\<equiv>E"(1)] by blast
        using "\<exists>E"[rotated] by blast
        by (metis "rule=E" "&E"(1,2) id_sym "\<equiv>E"(2) "Commutativity of \<equiv>"
                  "p-identity-thm2:3")
    next
        by (metis "rule=I:1" "\<equiv>S"(1) "\<equiv>E"(2) "Commutativity of &" "prop-prop2:2")
        using 0[THEN "&E"(2), THEN "\<forall>E"(1), OF "prop-prop2:2", THEN "\<equiv>E"(2)] by blast
    qed
  qed
qed

     (auto simp: "extof-e" "p-has-!tv:2")

  using "A-Exists:2" "RA[2]" "ext-p-tv:1" "\<equiv>E"(2) by blast

proof -
    by (rule "RA[2]"; rule GEN; rule "extof-e")
    using "rule-id-df:1" "the-tv-p" "uni-tv" by blast
  show ?thesis
                                  THEN "\<equiv>E"(2), symmetric])
    using "1" "t=t-proper:1" "vdash-properties:10" apply blast
    by (fact 1)
qed
