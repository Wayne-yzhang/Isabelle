theory 
  PersonalFirewallInt
  imports 
    "../../UPF-Firewall"
begin



definition
  PC :: "(adr\<^sub>i\<^sub>p net)" where
  "PC = {{(a,b). a = 3}}"
  
definition
  Internet :: "adr\<^sub>i\<^sub>p net" where
  "Internet = {{(a,b). \<not> (a = 3)}}"

definition
  not_in_same_net :: "(adr\<^sub>i\<^sub>p,DummyContent) packet \<Rightarrow> bool" where
  "not_in_same_net x = ((src x \<sqsubset> PC \<longrightarrow> dest x \<sqsubset> Internet) \<and> (src x \<sqsubset> Internet \<longrightarrow> dest x \<sqsubset> PC))" 
  

definition
  strictPolicy :: "(adr\<^sub>i\<^sub>p,DummyContent) FWPolicy" where
  "strictPolicy = deny_all ++ allow_all_from_to PC Internet"

definition 
  PortPolicy :: "(adr\<^sub>i\<^sub>p,DummyContent) FWPolicy" where
  "PortPolicy = deny_all ++ allow_from_ports_to {http,smtp,ftp} PC Internet"
  
definition
  PortPolicyBig :: "(adr\<^sub>i\<^sub>p,DummyContent) FWPolicy" where
  "PortPolicyBig = deny_all ++ 
                 allow_from_port_to http PC Internet ++ 
                 allow_from_port_to smtp PC Internet ++ 
                 allow_from_port_to ftp PC Internet"
  
lemmas policyLemmas = strictPolicy_def PortPolicy_def PC_def
  Internet_def PortPolicyBig_def src_def dest_def
  adr\<^sub>i\<^sub>pLemmas content_def
  PortCombinators in_subnet_def PortPolicyBig_def id_def
  
declare Ports [simp add]
  
definition wellformed_packet::"(adr\<^sub>i\<^sub>p,DummyContent) packet \<Rightarrow> bool" where
  "wellformed_packet p = (content p = data)"
  
end
