theory CSPM
  imports MultiDet MultiNdet MultiSync MultiSeq GlobalNdet "HOL-CSP.Assertions"
begin

      and lemmas about the combination of multi-operators.\<close>
section \<open>Refinements Results\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>F Q x \<Longrightarrow> MultiDet A P \<sqsubseteq>\<^sub>F MultiDet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>D Q x \<Longrightarrow> MultiDet A P \<sqsubseteq>\<^sub>D MultiDet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>T Q x \<Longrightarrow> MultiDet A P \<sqsubseteq>\<^sub>T MultiDet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>D\<^sub>T Q x \<Longrightarrow> MultiDet A P \<sqsubseteq>\<^sub>D\<^sub>T MultiDet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>F\<^sub>D Q x \<Longrightarrow> MultiDet A P \<sqsubseteq>\<^sub>F\<^sub>D MultiDet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>F Q x \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>F MultiNdet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>D Q x \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>D MultiNdet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>T Q x \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>T MultiNdet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>D\<^sub>T Q x \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>D\<^sub>T MultiNdet A Q\<close>
  \<open>finite A \<Longrightarrow> \<forall>x \<in> A. P x \<sqsubseteq>\<^sub>F\<^sub>D Q x \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>F\<^sub>D MultiNdet A Q\<close>
  \<open>A \<noteq> {} \<Longrightarrow> finite A \<Longrightarrow> \<forall>a \<in> A. P \<sqsubseteq>\<^sub>F Q a  \<Longrightarrow> P \<sqsubseteq>\<^sub>F MultiNdet A Q\<close>
  \<open>A \<noteq> {} \<Longrightarrow> finite A \<Longrightarrow> \<forall>a \<in> A. P \<sqsubseteq>\<^sub>D Q a  \<Longrightarrow> P \<sqsubseteq>\<^sub>D MultiNdet A Q\<close>
  \<open>A \<noteq> {} \<Longrightarrow> finite A \<Longrightarrow> \<forall>a \<in> A. P \<sqsubseteq>\<^sub>T Q a  \<Longrightarrow> P \<sqsubseteq>\<^sub>T MultiNdet A Q\<close>
  \<open>A \<noteq> {} \<Longrightarrow> finite A \<Longrightarrow> \<forall>a \<in> A. P \<sqsubseteq>\<^sub>D\<^sub>T Q a \<Longrightarrow> P \<sqsubseteq>\<^sub>D\<^sub>T MultiNdet A Q\<close>
  \<open>A \<noteq> {} \<Longrightarrow> finite A \<Longrightarrow> \<forall>a \<in> A. P \<sqsubseteq>\<^sub>F\<^sub>D Q a \<Longrightarrow> P \<sqsubseteq>\<^sub>F\<^sub>D MultiNdet A Q\<close>
  assumes \<open>A \<noteq> {}\<close> and \<open>finite B\<close> and \<open>A \<subseteq> B\<close>
          \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>F Q x \<Longrightarrow> MultiNdet B P \<sqsubseteq>\<^sub>F MultiNdet A Q\<close>
          \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>D Q x \<Longrightarrow> MultiNdet B P \<sqsubseteq>\<^sub>D MultiNdet A Q\<close>
          \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>T Q x \<Longrightarrow> MultiNdet B P \<sqsubseteq>\<^sub>T MultiNdet A Q\<close>
          \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>F\<^sub>D Q x \<Longrightarrow> MultiNdet B P \<sqsubseteq>\<^sub>F\<^sub>D MultiNdet A Q\<close>
          \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>D\<^sub>T Q x \<Longrightarrow> MultiNdet B P \<sqsubseteq>\<^sub>D\<^sub>T MultiNdet A Q\<close>
  supply finiteA = finite_subset[OF \<open>A \<subseteq> B\<close> \<open>finite B\<close>]
     and B_eq = Un_absorb1[OF \<open>A \<subseteq> B\<close>, symmetric,
          \<open>finite A \<Longrightarrow> x \<in> A \<Longrightarrow> P x \<sqsubseteq>\<^sub>F Q \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>F Q\<close>
          \<open>finite A \<Longrightarrow> x \<in> A \<Longrightarrow> P x \<sqsubseteq>\<^sub>D Q \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>D Q\<close>
          \<open>finite A \<Longrightarrow> x \<in> A \<Longrightarrow> P x \<sqsubseteq>\<^sub>T Q \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>T Q\<close>
          \<open>finite A \<Longrightarrow> x \<in> A \<Longrightarrow> P x \<sqsubseteq>\<^sub>F\<^sub>D Q \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>F\<^sub>D Q\<close>
          \<open>finite A \<Longrightarrow> x \<in> A \<Longrightarrow> P x \<sqsubseteq>\<^sub>D\<^sub>T Q \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>D\<^sub>T Q\<close>
                              [where A = \<open>{x}\<close>, simplified]]; simp) 
                             [where A = \<open>{x}\<close>, simplified]]; simp)
                            [where A = \<open>{x}\<close>, simplified]]; simp)
                           [where A = \<open>{x}\<close>, simplified]]; simp)
                       [where A = \<open>{x}\<close>, simplified]]; simp)
      \<open>finite A \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>F MultiDet A P\<close>
      \<open>finite A \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>D MultiDet A P\<close>
      \<open>finite A \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>T MultiDet A P\<close>
      \<open>finite A \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>F\<^sub>D MultiDet A P\<close>
      \<open>finite A \<Longrightarrow> MultiNdet A P \<sqsubseteq>\<^sub>D\<^sub>T MultiDet A P\<close>
lemma mono_MultiSync_F: \<open>\<forall>x \<in># M. P x \<sqsubseteq>\<^sub>F Q x \<Longrightarrow> MultiSync S M P \<sqsubseteq>\<^sub>F MultiSync S M Q\<close>
lemma mono_MultiSync_D: \<open>\<forall>x \<in># M. P x \<sqsubseteq>\<^sub>D Q x \<Longrightarrow> MultiSync S M P \<sqsubseteq>\<^sub>D MultiSync S M Q\<close>
lemma mono_MultiSync_T: \<open>\<forall>x \<in># M. P x \<sqsubseteq>\<^sub>T Q x \<Longrightarrow> MultiSync S M P \<sqsubseteq>\<^sub>T MultiSync S M Q\<close>
  \<open>\<forall>x \<in># M. P x \<sqsubseteq>\<^sub>D\<^sub>T Q x \<Longrightarrow> MultiSync S M P \<sqsubseteq>\<^sub>D\<^sub>T MultiSync S M Q\<close>
  \<open>\<forall>x \<in># M. P x \<sqsubseteq>\<^sub>F\<^sub>D Q x \<Longrightarrow> MultiSync S M P \<sqsubseteq>\<^sub>F\<^sub>D MultiSync S M Q\<close>
lemmas mono_MultiInter_DT[simp, elim] = mono_MultiSync_DT[where S = \<open>{}\<close>]
   and mono_MultiInter_FD[simp, elim] = mono_MultiSync_FD[where S = \<open>{}\<close>]
   and   mono_MultiPar_DT[simp, elim] = mono_MultiSync_DT[where S = \<open>UNIV\<close>]
   and   mono_MultiPar_FD[simp, elim] = mono_MultiSync_FD[where S = \<open>UNIV\<close>]
  \<open>\<forall>x \<in> set L. P x \<sqsubseteq>\<^sub>F Q x \<Longrightarrow> MultiSeq L P \<sqsubseteq>\<^sub>F MultiSeq L Q\<close>
  \<open>\<forall>x \<in> set L. P x \<sqsubseteq>\<^sub>D Q x \<Longrightarrow> MultiSeq L P \<sqsubseteq>\<^sub>D MultiSeq L Q\<close>
  \<open>\<forall>x \<in> set L. P x \<sqsubseteq>\<^sub>T Q x \<Longrightarrow> MultiSeq L P \<sqsubseteq>\<^sub>T MultiSeq L Q\<close>
  \<open>\<forall>x \<in> set L. P x \<sqsubseteq>\<^sub>D\<^sub>T Q x \<Longrightarrow> MultiSeq L P \<sqsubseteq>\<^sub>D\<^sub>T MultiSeq L Q\<close>
  \<open>\<forall>x \<in> set L. P x \<sqsubseteq>\<^sub>F\<^sub>D Q x \<Longrightarrow> MultiSeq L P \<sqsubseteq>\<^sub>F\<^sub>D MultiSeq L Q\<close>
lemma mono_GlobalNdet[simp] : \<open>GlobalNdet A P \<sqsubseteq> GlobalNdet A Q\<close>
  if \<open>\<forall>x \<in> A. P x \<sqsubseteq> Q x\<close> 
proof (cases \<open>A = {}\<close>)
  show \<open>A = {} \<Longrightarrow> GlobalNdet A P \<sqsubseteq> GlobalNdet A Q\<close> by simp
  assume \<open>A \<noteq> {}\<close>
  show \<open>GlobalNdet A P \<sqsubseteq> GlobalNdet A Q\<close>
    show \<open>s \<in> \<D> (GlobalNdet A Q) \<Longrightarrow> s \<in> \<D> (GlobalNdet A P)\<close> for s
      using that[rule_format, THEN le_approx1] by (auto simp add: D_GlobalNdet \<open>A \<noteq> {}\<close>)
    show \<open>s \<notin> \<D> (GlobalNdet A P) \<Longrightarrow> \<R>\<^sub>a (GlobalNdet A P) s = \<R>\<^sub>a (GlobalNdet A Q) s\<close> for s
      by (auto simp add: D_GlobalNdet Ra_def F_GlobalNdet \<open>A \<noteq> {}\<close>)
    show \<open>s \<in> min_elems (\<D> (GlobalNdet A P)) \<Longrightarrow> s \<in> \<T> (GlobalNdet A Q)\<close> for s
      by (simp add: D_GlobalNdet T_GlobalNdet \<open>A \<noteq> {}\<close> min_elems_def) blast
  \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>F Q x \<Longrightarrow> GlobalNdet A P \<sqsubseteq>\<^sub>F GlobalNdet A Q\<close>
  \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>D Q x \<Longrightarrow> GlobalNdet A P \<sqsubseteq>\<^sub>D GlobalNdet A Q\<close>
  \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>T Q x \<Longrightarrow> GlobalNdet A P \<sqsubseteq>\<^sub>T GlobalNdet A Q\<close>
  \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>D\<^sub>T Q x \<Longrightarrow> GlobalNdet A P \<sqsubseteq>\<^sub>D\<^sub>T GlobalNdet A Q\<close>
  \<open>\<forall>x \<in> A. P x \<sqsubseteq>\<^sub>F\<^sub>D Q x \<Longrightarrow> GlobalNdet A P \<sqsubseteq>\<^sub>F\<^sub>D GlobalNdet A Q\<close>
  \<open>A \<noteq> {} \<Longrightarrow> A \<subseteq> B \<Longrightarrow> GlobalNdet B P \<sqsubseteq>\<^sub>F\<^sub>D GlobalNdet A P\<close> 
  \<open>A \<noteq> {} \<Longrightarrow> A \<subseteq> B \<Longrightarrow> GlobalNdet B P \<sqsubseteq>\<^sub>F GlobalNdet A P\<close>
lemma GlobalNdet_refine_FD: \<open>a \<in> A \<Longrightarrow> GlobalNdet A P \<sqsubseteq>\<^sub>F\<^sub>D P a\<close> 
  using GlobalNdet_refine_FD_subset[of \<open>{a}\<close> A] by simp
lemma GlobalNdet_refine_F: \<open>a \<in> A \<Longrightarrow> GlobalNdet A P \<sqsubseteq>\<^sub>F P a\<close>
  \<open>A \<noteq> {} \<Longrightarrow> \<forall>x \<in> A. P \<sqsubseteq>\<^sub>F\<^sub>D Q x \<Longrightarrow> P \<sqsubseteq>\<^sub>F\<^sub>D GlobalNdet A Q\<close>
  \<open>A \<noteq> {} \<Longrightarrow> \<forall>x \<in> A. P \<sqsubseteq>\<^sub>F Q x \<Longrightarrow> P \<sqsubseteq>\<^sub>F GlobalNdet A Q\<close>
section \<open>Combination of Multi-Operators Laws\<close>
  \<open>finite A \<Longrightarrow> (\<box> p \<in> A \<rightarrow> P p) = \<^bold>\<box> p \<in> A. (p \<rightarrow> P p)\<close>
  \<open>finite A \<Longrightarrow> Mndetprefix A P = \<Sqinter> p \<in> A. (p \<rightarrow> P p)\<close>
  by (cases \<open>A = {}\<close>, simp, rotate_tac, induct rule: finite_set_induct_nonempty)
lemma \<open>Q \<box> (\<Sqinter> p \<in> {}. P p) = \<Sqinter> p \<in> {}. (Q \<box> P p) \<Longrightarrow> Q = STOP\<close>
  \<open>A \<noteq> {} \<Longrightarrow> finite A \<Longrightarrow> M \<box> (\<Sqinter> p \<in> A. P p) = \<Sqinter> p \<in> A. M \<box> P p\<close>
     \<open>M \<box> (\<Sqinter> p \<in> {}. P p) = M \<box> STOP = M\<close> while \<open>\<Sqinter> p \<in> {}. (M \<box> P p) = STOP\<close> *)
