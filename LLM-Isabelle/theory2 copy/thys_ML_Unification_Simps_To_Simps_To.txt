theory Simps_To
  imports
    ML_Tactic_Utils
    ML_Theorem_Utils
    ML_Unification_Base
    Setup_Result_Commands
begin




definition "SIMPS_TO s t \<equiv> (s \<equiv> t)"

lemma SIMPS_TO_eq: "SIMPS_TO s t \<equiv> (s \<equiv> t)"
  unfolding SIMPS_TO_def by simp

lemma SIMPS_TO_cong [cong]: "s \<equiv> s' \<Longrightarrow> SIMPS_TO s t \<equiv> SIMPS_TO s' t" by simp

lemma SIMPS_TOI: "PROP SIMPS_TO s s" unfolding SIMPS_TO_eq by simp
lemma SIMPS_TOD: "PROP SIMPS_TO s t \<Longrightarrow> s \<equiv> t" unfolding SIMPS_TO_eq by simp




definition "SIMPS_TO_UNIF s t \<equiv> (s \<equiv> t)"

lemma SIMPS_TO_UNIF_cong [cong]: "SIMPS_TO_UNIF s t \<equiv> SIMPS_TO_UNIF s t" by simp

lemma SIMPS_TO_UNIF_eq: "SIMPS_TO_UNIF s t \<equiv> (s \<equiv> t)" unfolding SIMPS_TO_UNIF_def by simp

lemma SIMPS_TO_UNIFI: "PROP SIMPS_TO s s' \<Longrightarrow> s' \<equiv> t \<Longrightarrow> PROP SIMPS_TO_UNIF s t"
  unfolding SIMPS_TO_UNIF_eq SIMPS_TO_eq by simp
lemma SIMPS_TO_UNIFD: "PROP SIMPS_TO_UNIF s t \<Longrightarrow> s \<equiv> t"
  unfolding SIMPS_TO_UNIF_eq by simp




experiment
begin
lemma
  assumes [simp]: "P \<equiv> Q"
  and [simp]: "Q \<equiv> R"
  shows "PROP SIMPS_TO P Q"
    Simps_To.SIMPS_TO_thm_resultsq (simp_tac @{context}) @{context} @{cterm P}
    |> Seq.list_of |> map @{print}
  \<close>
