theory  Parser_Toy
imports Meta_Toy
        "../../../meta_isabelle/Parser_Pure"
begin


definition "toy_multiplicity_rec0 f toy = f
  (TyMult toy)
  (TyRole toy)
  (TyCollect toy)"

definition "toy_multiplicity_rec f toy = toy_multiplicity_rec0 f toy
  (toy_multiplicity.more toy)"

definition "toy_ty_class_node_rec0 f toy = f
  (TyObjN_ass_switch toy)
  (TyObjN_role_multip toy)
  (TyObjN_role_ty toy)"

definition "toy_ty_class_node_rec f toy = toy_ty_class_node_rec0 f toy
  (toy_ty_class_node.more toy)"

definition "toy_ty_class_rec0 f toy = f
  (TyObj_name toy)
  (TyObj_ass_id toy)
  (TyObj_ass_arity toy)
  (TyObj_from toy)
  (TyObj_to toy)"

definition "toy_ty_class_rec f toy = toy_ty_class_rec0 f toy
  (toy_ty_class.more toy)"

definition "toy_class_raw_rec0 f toy = f
  (ClassRaw_name toy)
  (ClassRaw_own toy)
  (ClassRaw_clause toy)
  (ClassRaw_abstract toy)"

definition "toy_class_raw_rec f toy = toy_class_raw_rec0 f toy
  (toy_class_raw.more toy)"

definition "toy_association_rec0 f toy = f
  (ToyAss_type toy)
  (ToyAss_relation toy)"

definition "toy_association_rec f toy = toy_association_rec0 f toy
  (toy_association.more toy)"

definition "toy_ctxt_pre_post_rec0 f toy = f
  (Ctxt_fun_name toy)
  (Ctxt_fun_ty toy)
  (Ctxt_expr toy)"

definition "toy_ctxt_pre_post_rec f toy = toy_ctxt_pre_post_rec0 f toy
  (toy_ctxt_pre_post.more toy)"

definition "toy_ctxt_rec0 f toy = f
  (Ctxt_param toy)
  (Ctxt_ty toy)
  (Ctxt_clause toy)"

definition "toy_ctxt_rec f toy = toy_ctxt_rec0 f toy
  (toy_ctxt.more toy)"


lemma [code]: "toy_class_raw.extend = (\<lambda>toy v. toy_class_raw_rec0 (co4 (\<lambda>f. f v) toy_class_raw_ext) toy)"
by(intro ext, simp add: toy_class_raw_rec0_def
                        toy_class_raw.extend_def
                        co4_def K_def)
lemma [code]: "toy_class_raw.make = co4 (\<lambda>f. f ()) toy_class_raw_ext"
by(intro ext, simp add: toy_class_raw.make_def
                        co4_def)
lemma [code]: "toy_class_raw.truncate = toy_class_raw_rec (co4 K toy_class_raw.make)"
by(intro ext, simp add: toy_class_raw_rec0_def
                        toy_class_raw_rec_def
                        toy_class_raw.truncate_def
                        toy_class_raw.make_def
                        co4_def K_def)

lemma [code]: "toy_association.extend = (\<lambda>toy v. toy_association_rec0 (co2 (\<lambda>f. f v) toy_association_ext) toy)"
by(intro ext, simp add: toy_association_rec0_def
                        toy_association.extend_def
                        co2_def K_def)
lemma [code]: "toy_association.make = co2 (\<lambda>f. f ()) toy_association_ext"
by(intro ext, simp add: toy_association.make_def
                        co2_def)
lemma [code]: "toy_association.truncate = toy_association_rec (co2 K toy_association.make)"
by(intro ext, simp add: toy_association_rec0_def
                        toy_association_rec_def
                        toy_association.truncate_def
                        toy_association.make_def
                        co2_def K_def)


context Parse
begin

definition "of_toy_collection b = rec_toy_collection

definition "of_toy_multiplicity_single a b = rec_toy_multiplicity_single

definition "of_toy_multiplicity a b f = toy_multiplicity_rec
    (of_list a b (of_pair a b (of_toy_multiplicity_single a b) (of_option a b (of_toy_multiplicity_single a b))))
    (of_option a b (of_string a b))
    (of_list a b (of_toy_collection b))
    (f a b))"

definition "of_toy_ty_class_node a b f = toy_ty_class_node_rec
    (of_nat a b)
    (of_toy_multiplicity a b (K of_unit))
    (of_string a b)
    (f a b))"

definition "of_toy_ty_class a b f = toy_ty_class_rec
    (of_string a b)
    (of_nat a b)
    (of_nat a b)
    (of_toy_ty_class_node a b (K of_unit))
    (of_toy_ty_class_node a b (K of_unit))
    (f a b))"

definition "of_toy_ty_obj_core a b = rec_toy_ty_obj_core

definition "of_toy_ty_obj a b = rec_toy_ty_obj

definition "of_toy_ty a b = (\<lambda>f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15.
                                    rec_toy_ty f1 f2 f3 f4 f5 f6
                                               f7 (K o f8) (\<lambda>_ _. f9) (f10 o map_prod id snd) (\<lambda>_ _. f11) f12 f13 f14 f15)

definition "of_toy_association_type a b = rec_toy_association_type

definition "of_toy_association_relation a b = rec_toy_association_relation
    (of_list a b (of_pair a b (of_toy_ty_obj a b) (of_toy_multiplicity a b (K of_unit)))))"

definition "of_toy_association a b f = toy_association_rec
    (of_toy_association_type a b)
    (of_toy_association_relation a b)
    (f a b))"

definition "of_toy_ctxt_prefix a b = rec_toy_ctxt_prefix

definition "of_toy_ctxt_term a b = (\<lambda>f0 f1 f2. rec_toy_ctxt_term f0 f1 (co1 K f2))

definition "of_toy_prop a b = rec_toy_prop

definition "of_toy_ctxt_term_inv a b = rec_toy_ctxt_term_inv

definition "of_toy_ctxt_term_pp a b = rec_toy_ctxt_term_pp

definition "of_toy_ctxt_pre_post a b f = toy_ctxt_pre_post_rec
    (of_string a b)
    (of_toy_ty a b)
    (of_list a b (of_toy_ctxt_term_pp a b))
    (f a b))"

definition "of_toy_ctxt_clause a b = rec_toy_ctxt_clause

definition "of_toy_ctxt a b f = toy_ctxt_rec
    (of_list a b (of_string a b))
    (of_toy_ty_obj a b)
    (of_list a b (of_toy_ctxt_clause a b))
    (f a b))"

definition "of_toy_class a b = (\<lambda>f0 f1 f2 f3. rec_toy_class (ap3 a f0 f1 f2 f3))
    (of_string a b)
    (of_list a b (of_pair a b (of_string a b) (of_toy_ty a b)))
    (of_list a b snd)"

definition "of_toy_class_raw a b f = toy_class_raw_rec
    (of_toy_ty_obj a b)
    (of_list a b (of_pair a b (of_string a b) (of_toy_ty a b)))
    (of_list a b (of_toy_ctxt_clause a b))
    (of_bool b)
    (f a b))"

definition "of_toy_ass_class a b = rec_toy_ass_class
    (of_toy_association a b (K of_unit))
    (of_toy_class_raw a b (K of_unit)))"

definition "of_toy_class_synonym a b = rec_toy_class_synonym
    (of_string a b)
    (of_toy_ty a b))"

definition "of_toy_enum a b = rec_toy_enum
    (of_string a b)
    (of_list a b (of_string a b)))"

end

lemmas [code] =
  Parse.of_toy_collection_def
  Parse.of_toy_multiplicity_single_def
  Parse.of_toy_multiplicity_def
  Parse.of_toy_ty_class_node_def
  Parse.of_toy_ty_class_def
  Parse.of_toy_ty_obj_core_def
  Parse.of_toy_ty_obj_def
  Parse.of_toy_ty_def
  Parse.of_toy_association_type_def
  Parse.of_toy_association_relation_def
  Parse.of_toy_association_def
  Parse.of_toy_ctxt_prefix_def
  Parse.of_toy_ctxt_term_def
  Parse.of_toy_prop_def
  Parse.of_toy_ctxt_term_inv_def
  Parse.of_toy_ctxt_term_pp_def
  Parse.of_toy_ctxt_pre_post_def
  Parse.of_toy_ctxt_clause_def
  Parse.of_toy_ctxt_def
  Parse.of_toy_class_def
  Parse.of_toy_class_raw_def
  Parse.of_toy_ass_class_def
  Parse.of_toy_class_synonym_def
  Parse.of_toy_enum_def

end
