theory  Meta_Toy_extended
imports "../../../Init"
begin


datatype internal_oid = Oid nat

                      | ToyDefString "string"

datatype toy_data_shallow = ShallB_term toy_def_base
                          | ShallB_self internal_oid
                          | ShallB_list "toy_data_shallow list"

                          | ToyAttrCast

                                           toy_list_attr"


datatype toy_def_base_l = ToyDefBase "toy_def_base list"

datatype 'a toy_def_state_core = ToyDefCoreAdd toy_instance_single
                               | ToyDefCoreBinding 'a



datatype toy_def_pre_post = ToyDefPP


definition "oidInit = (\<lambda> Oid n \<Rightarrow> Oids n n n)"

definition "oidSucAssoc = (\<lambda> Oids n1 n2 n3 \<Rightarrow> Oids n1 (Succ n2) (Succ n3))"
definition "oidSucInh = (\<lambda> Oids n1 n2 n3 \<Rightarrow> Oids n1 n2 (Succ n3))"
definition "oidGetAssoc = (\<lambda> Oids _ n _ \<Rightarrow> Oid n)"
definition "oidGetInh = (\<lambda> Oids _ _ n \<Rightarrow> Oid n)"

definition "oidReinitAll = (\<lambda>Oids n1 _ _ \<Rightarrow> Oids n1 n1 n1)"
definition "oidReinitInh = (\<lambda>Oids n1 n2 _ \<Rightarrow> Oids n1 n2 n2)"


definition "toy_instance_single_empty = \<lparr> Inst_name = None, Inst_ty = None, Inst_attr = ToyAttrNoCast [] \<rparr>"

fun map_data_shallow_self where
   "map_data_shallow_self f e = (\<lambda> ShallB_self s \<Rightarrow> f s
                                 | ShallB_list l \<Rightarrow> ShallB_list (List.map (map_data_shallow_self f) l)
                                 | x \<Rightarrow> x) e"

fun map_list_attr where
   "map_list_attr f e = 
     (\<lambda> ToyAttrNoCast x \<Rightarrow> ToyAttrNoCast (f x)
      | ToyAttrCast c_from l_attr x \<Rightarrow> ToyAttrCast c_from (map_list_attr f l_attr) (f x)) e"

definition "map_instance_single f toyi = toyi \<lparr> Inst_attr := map_list_attr (L.map f) (Inst_attr toyi) \<rparr>"

fun fold_list_attr where
   "fold_list_attr cast_from f l_attr accu = (case l_attr of
        ToyAttrNoCast x \<Rightarrow> f cast_from x accu
      | ToyAttrCast c_from l_attr x \<Rightarrow> fold_list_attr (Some c_from) f l_attr (f cast_from x accu))"

definition "inst_ty0 toyi = (case Inst_ty toyi of Some ty \<Rightarrow> Some ty
                                                | None \<Rightarrow> (case Inst_attr toyi of ToyAttrCast ty _ _ \<Rightarrow> Some ty
                                                                                | _ \<Rightarrow> None))"
definition "inst_ty toyi = (case inst_ty0 toyi of Some ty \<Rightarrow> ty)"

definition "fold_instance_single f toyi = fold_list_attr (inst_ty0 toyi) (\<lambda> Some x \<Rightarrow> f x) (Inst_attr toyi)"
definition "fold_instance_single' f toyi = fold_list_attr (Inst_ty toyi) f (Inst_attr toyi)"

end
